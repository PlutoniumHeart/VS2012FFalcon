; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\vu2\src\vuevent.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?nmsgs@@3HA					; nmsgs
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
_BSS	SEGMENT
?nmsgs@@3HA DD	01H DUP (?)				; nmsgs
_BSS	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??MVU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator<
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z		; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	??0VU_ADDRESS@@QAE@KGG@Z			; VU_ADDRESS::VU_ADDRESS
PUBLIC	?Size@VU_ADDRESS@@QBEHXZ			; VU_ADDRESS::Size
PUBLIC	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
PUBLIC	??1InvalidBufferException@@UAE@XZ		; InvalidBufferException::~InvalidBufferException
PUBLIC	??0InvalidBufferException@@QAE@ABV0@@Z		; InvalidBufferException::InvalidBufferException
PUBLIC	??_GInvalidBufferException@@UAEPAXI@Z		; InvalidBufferException::`scalar deleting destructor'
PUBLIC	?memcpychk@@YAXPAXPAPAEIPAJ@Z			; memcpychk
PUBLIC	?SetTransmissionTime@VuEntity@@QAEXK@Z		; VuEntity::SetTransmissionTime
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?IsPrivate@VuEntity@@QBEEXZ			; VuEntity::IsPrivate
PUBLIC	?IsGlobal@VuEntity@@QBEEXZ			; VuEntity::IsGlobal
PUBLIC	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::OwnerId
PUBLIC	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ		; VuEntity::VuState
PUBLIC	?Type@VuEntity@@QBEGXZ				; VuEntity::Type
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?ZPos@VuEntity@@QBEMXZ				; VuEntity::ZPos
PUBLIC	?XDelta@VuEntity@@QBEMXZ			; VuEntity::XDelta
PUBLIC	?YDelta@VuEntity@@QBEMXZ			; VuEntity::YDelta
PUBLIC	?ZDelta@VuEntity@@QBEMXZ			; VuEntity::ZDelta
PUBLIC	?Yaw@VuEntity@@QBEMXZ				; VuEntity::Yaw
PUBLIC	?Pitch@VuEntity@@QBEMXZ				; VuEntity::Pitch
PUBLIC	?Roll@VuEntity@@QBEMXZ				; VuEntity::Roll
PUBLIC	?LastUpdateTime@VuEntity@@QBEKXZ		; VuEntity::LastUpdateTime
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	?SetId@VuEntity@@IAEXK@Z			; VuEntity::SetId
PUBLIC	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??1VuMessage@@UAE@XZ				; VuMessage::~VuMessage
PUBLIC	?Sender@VuMessage@@QBE?AVVU_ID@@XZ		; VuMessage::Sender
PUBLIC	?Destination@VuMessage@@QBE?AVVU_ID@@XZ		; VuMessage::Destination
PUBLIC	?IsLocal@VuMessage@@QBEEXZ			; VuMessage::IsLocal
PUBLIC	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ		; VuMessage::EntityId
PUBLIC	?Entity@VuMessage@@QBEPAVVuEntity@@XZ		; VuMessage::Entity
PUBLIC	?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ	; VuMessage::Target
PUBLIC	?Size@VuMessage@@UBEHXZ				; VuMessage::Size
PUBLIC	?Read@VuMessage@@IAEHPAPAEPAJ@Z			; VuMessage::Read
PUBLIC	?Write@VuMessage@@IAEHPAPAE@Z			; VuMessage::Write
PUBLIC	?Dispatch@VuMessage@@IAEHE@Z			; VuMessage::Dispatch
PUBLIC	?Send@VuMessage@@IAEHXZ				; VuMessage::Send
PUBLIC	?RequestReliableTransmit@VuMessage@@QAEXXZ	; VuMessage::RequestReliableTransmit
PUBLIC	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ	; VuMessage::RequestOutOfBandTransmit
PUBLIC	?Ref@VuMessage@@QAEHXZ				; VuMessage::Ref
PUBLIC	?UnRef@VuMessage@@QAEHXZ			; VuMessage::UnRef
PUBLIC	?DoSend@VuMessage@@UAEEXZ			; VuMessage::DoSend
PUBLIC	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
PUBLIC	??0VuMessage@@IAE@EVVU_ID@@0@Z			; VuMessage::VuMessage
PUBLIC	?Activate@VuMessage@@MAEHPAVVuEntity@@@Z	; VuMessage::Activate
PUBLIC	?Encode@VuMessage@@MAEHPAPAE@Z			; VuMessage::Encode
PUBLIC	?Decode@VuMessage@@MAEHPAPAEPAJ@Z		; VuMessage::Decode
PUBLIC	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z	; VuMessage::SetEntity
PUBLIC	?LocalSize@VuMessage@@ABEHXZ			; VuMessage::LocalSize
PUBLIC	??0?$VuBin@VVuTargetEntity@@@@QAE@PAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::VuBin<VuTargetEntity>
PUBLIC	??1?$VuBin@VVuTargetEntity@@@@QAE@XZ		; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>
PUBLIC	??B?$VuBin@VVuTargetEntity@@@@QBE_NXZ		; VuBin<VuTargetEntity>::operator bool
PUBLIC	??C?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ ; VuBin<VuTargetEntity>::operator->
PUBLIC	?get@?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ ; VuBin<VuTargetEntity>::get
PUBLIC	?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::reset
PUBLIC	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
PUBLIC	??1?$VuBin@VVuEntity@@@@QAE@XZ			; VuBin<VuEntity>::~VuBin<VuEntity>
PUBLIC	??B?$VuBin@VVuEntity@@@@QBE_NXZ			; VuBin<VuEntity>::operator bool
PUBLIC	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::operator->
PUBLIC	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::get
PUBLIC	?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z	; VuBin<VuEntity>::reset
PUBLIC	??_GVuMessage@@UAEPAXI@Z			; VuMessage::`scalar deleting destructor'
PUBLIC	??0VuRequestDummyBlockMessage@@QAE@VVU_ADDRESS@@PAVVuTargetEntity@@@Z ; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
PUBLIC	??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z	; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
PUBLIC	?Size@VuRequestDummyBlockMessage@@UBEHXZ	; VuRequestDummyBlockMessage::Size
PUBLIC	?Decode@VuRequestDummyBlockMessage@@UAEHPAPAEPAJ@Z ; VuRequestDummyBlockMessage::Decode
PUBLIC	?Encode@VuRequestDummyBlockMessage@@UAEHPAPAE@Z	; VuRequestDummyBlockMessage::Encode
PUBLIC	?Process@VuRequestDummyBlockMessage@@UAEHE@Z	; VuRequestDummyBlockMessage::Process
PUBLIC	?LocalSize@VuRequestDummyBlockMessage@@EBEHXZ	; VuRequestDummyBlockMessage::LocalSize
PUBLIC	??1VuRequestDummyBlockMessage@@UAE@XZ		; VuRequestDummyBlockMessage::~VuRequestDummyBlockMessage
PUBLIC	??_GVuRequestDummyBlockMessage@@UAEPAXI@Z	; VuRequestDummyBlockMessage::`scalar deleting destructor'
PUBLIC	??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z ; VuErrorMessage::VuErrorMessage
PUBLIC	??0VuErrorMessage@@QAE@VVU_ID@@0@Z		; VuErrorMessage::VuErrorMessage
PUBLIC	??1VuErrorMessage@@UAE@XZ			; VuErrorMessage::~VuErrorMessage
PUBLIC	?Size@VuErrorMessage@@UBEHXZ			; VuErrorMessage::Size
PUBLIC	?Decode@VuErrorMessage@@UAEHPAPAEPAJ@Z		; VuErrorMessage::Decode
PUBLIC	?Encode@VuErrorMessage@@UAEHPAPAE@Z		; VuErrorMessage::Encode
PUBLIC	?Process@VuErrorMessage@@MAEHE@Z		; VuErrorMessage::Process
PUBLIC	?LocalSize@VuErrorMessage@@ABEHXZ		; VuErrorMessage::LocalSize
PUBLIC	??_GVuErrorMessage@@UAEPAXI@Z			; VuErrorMessage::`scalar deleting destructor'
PUBLIC	??1VuRequestMessage@@UAE@XZ			; VuRequestMessage::~VuRequestMessage
PUBLIC	??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z ; VuRequestMessage::VuRequestMessage
PUBLIC	??0VuRequestMessage@@IAE@EVVU_ID@@0@Z		; VuRequestMessage::VuRequestMessage
PUBLIC	??_GVuRequestMessage@@UAEPAXI@Z			; VuRequestMessage::`scalar deleting destructor'
PUBLIC	??0VuGetRequest@@QAE@W4VU_SPECIAL_GET_TYPE@@PAVVuSessionEntity@@@Z ; VuGetRequest::VuGetRequest
PUBLIC	??0VuGetRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuGetRequest::VuGetRequest
PUBLIC	??0VuGetRequest@@QAE@VVU_ID@@0@Z		; VuGetRequest::VuGetRequest
PUBLIC	??1VuGetRequest@@UAE@XZ				; VuGetRequest::~VuGetRequest
PUBLIC	?Process@VuGetRequest@@MAEHE@Z			; VuGetRequest::Process
PUBLIC	??_GVuGetRequest@@UAEPAXI@Z			; VuGetRequest::`scalar deleting destructor'
PUBLIC	??0VuPushRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuPushRequest::VuPushRequest
PUBLIC	??0VuPushRequest@@QAE@VVU_ID@@0@Z		; VuPushRequest::VuPushRequest
PUBLIC	??1VuPushRequest@@UAE@XZ			; VuPushRequest::~VuPushRequest
PUBLIC	?Process@VuPushRequest@@MAEHE@Z			; VuPushRequest::Process
PUBLIC	??_GVuPushRequest@@UAEPAXI@Z			; VuPushRequest::`scalar deleting destructor'
PUBLIC	??0VuPullRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuPullRequest::VuPullRequest
PUBLIC	??0VuPullRequest@@QAE@VVU_ID@@0@Z		; VuPullRequest::VuPullRequest
PUBLIC	??1VuPullRequest@@UAE@XZ			; VuPullRequest::~VuPullRequest
PUBLIC	?Process@VuPullRequest@@MAEHE@Z			; VuPullRequest::Process
PUBLIC	??_GVuPullRequest@@UAEPAXI@Z			; VuPullRequest::`scalar deleting destructor'
PUBLIC	??1VuEvent@@UAE@XZ				; VuEvent::~VuEvent
PUBLIC	?Size@VuEvent@@UBEHXZ				; VuEvent::Size
PUBLIC	?Decode@VuEvent@@UAEHPAPAEPAJ@Z			; VuEvent::Decode
PUBLIC	?Encode@VuEvent@@UAEHPAPAE@Z			; VuEvent::Encode
PUBLIC	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z	; VuEvent::VuEvent
PUBLIC	??0VuEvent@@IAE@EVVU_ID@@0@Z			; VuEvent::VuEvent
PUBLIC	?Activate@VuEvent@@MAEHPAVVuEntity@@@Z		; VuEvent::Activate
PUBLIC	?LocalSize@VuEvent@@ABEHXZ			; VuEvent::LocalSize
PUBLIC	??_GVuEvent@@UAEPAXI@Z				; VuEvent::`scalar deleting destructor'
PUBLIC	??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuCreateEvent::VuCreateEvent
PUBLIC	??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z	; VuCreateEvent::VuCreateEvent
PUBLIC	??1VuCreateEvent@@UAE@XZ			; VuCreateEvent::~VuCreateEvent
PUBLIC	?Size@VuCreateEvent@@UBEHXZ			; VuCreateEvent::Size
PUBLIC	?Decode@VuCreateEvent@@UAEHPAPAEPAJ@Z		; VuCreateEvent::Decode
PUBLIC	?Encode@VuCreateEvent@@UAEHPAPAE@Z		; VuCreateEvent::Encode
PUBLIC	?DoSend@VuCreateEvent@@UAEEXZ			; VuCreateEvent::DoSend
PUBLIC	??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuCreateEvent::VuCreateEvent
PUBLIC	??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z	; VuCreateEvent::VuCreateEvent
PUBLIC	?Activate@VuCreateEvent@@MAEHPAVVuEntity@@@Z	; VuCreateEvent::Activate
PUBLIC	?Process@VuCreateEvent@@MAEHE@Z			; VuCreateEvent::Process
PUBLIC	?LocalSize@VuCreateEvent@@ABEHXZ		; VuCreateEvent::LocalSize
PUBLIC	??_GVuCreateEvent@@UAEPAXI@Z			; VuCreateEvent::`scalar deleting destructor'
PUBLIC	??0VuManageEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuManageEvent::VuManageEvent
PUBLIC	??0VuManageEvent@@QAE@VVU_ID@@0@Z		; VuManageEvent::VuManageEvent
PUBLIC	??1VuManageEvent@@UAE@XZ			; VuManageEvent::~VuManageEvent
PUBLIC	??_GVuManageEvent@@UAEPAXI@Z			; VuManageEvent::`scalar deleting destructor'
PUBLIC	??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z		; VuDeleteEvent::VuDeleteEvent
PUBLIC	??0VuDeleteEvent@@QAE@VVU_ID@@0@Z		; VuDeleteEvent::VuDeleteEvent
PUBLIC	??1VuDeleteEvent@@UAE@XZ			; VuDeleteEvent::~VuDeleteEvent
PUBLIC	?Process@VuDeleteEvent@@MAEHE@Z			; VuDeleteEvent::Process
PUBLIC	?Activate@VuDeleteEvent@@MAEHPAVVuEntity@@@Z	; VuDeleteEvent::Activate
PUBLIC	??_GVuDeleteEvent@@UAEPAXI@Z			; VuDeleteEvent::`scalar deleting destructor'
PUBLIC	??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuTransferEvent::VuTransferEvent
PUBLIC	??0VuTransferEvent@@QAE@VVU_ID@@0@Z		; VuTransferEvent::VuTransferEvent
PUBLIC	??1VuTransferEvent@@UAE@XZ			; VuTransferEvent::~VuTransferEvent
PUBLIC	?Size@VuTransferEvent@@UBEHXZ			; VuTransferEvent::Size
PUBLIC	?Decode@VuTransferEvent@@UAEHPAPAEPAJ@Z		; VuTransferEvent::Decode
PUBLIC	?Encode@VuTransferEvent@@UAEHPAPAE@Z		; VuTransferEvent::Encode
PUBLIC	?Activate@VuTransferEvent@@MAEHPAVVuEntity@@@Z	; VuTransferEvent::Activate
PUBLIC	?Process@VuTransferEvent@@MAEHE@Z		; VuTransferEvent::Process
PUBLIC	?LocalSize@VuTransferEvent@@ABEHXZ		; VuTransferEvent::LocalSize
PUBLIC	??_GVuTransferEvent@@UAEPAXI@Z			; VuTransferEvent::`scalar deleting destructor'
PUBLIC	??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuPositionUpdateEvent::VuPositionUpdateEvent
PUBLIC	??0VuPositionUpdateEvent@@QAE@VVU_ID@@0@Z	; VuPositionUpdateEvent::VuPositionUpdateEvent
PUBLIC	??1VuPositionUpdateEvent@@UAE@XZ		; VuPositionUpdateEvent::~VuPositionUpdateEvent
PUBLIC	?Size@VuPositionUpdateEvent@@UBEHXZ		; VuPositionUpdateEvent::Size
PUBLIC	?Decode@VuPositionUpdateEvent@@UAEHPAPAEPAJ@Z	; VuPositionUpdateEvent::Decode
PUBLIC	?Encode@VuPositionUpdateEvent@@UAEHPAPAE@Z	; VuPositionUpdateEvent::Encode
PUBLIC	?DoSend@VuPositionUpdateEvent@@UAEEXZ		; VuPositionUpdateEvent::DoSend
PUBLIC	?Process@VuPositionUpdateEvent@@MAEHE@Z		; VuPositionUpdateEvent::Process
PUBLIC	?LocalSize@VuPositionUpdateEvent@@ABEHXZ	; VuPositionUpdateEvent::LocalSize
PUBLIC	??_GVuPositionUpdateEvent@@UAEPAXI@Z		; VuPositionUpdateEvent::`scalar deleting destructor'
PUBLIC	??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
PUBLIC	??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
PUBLIC	??1VuBroadcastGlobalEvent@@UAE@XZ		; VuBroadcastGlobalEvent::~VuBroadcastGlobalEvent
PUBLIC	?Size@VuBroadcastGlobalEvent@@MBEHXZ		; VuBroadcastGlobalEvent::Size
PUBLIC	?Decode@VuBroadcastGlobalEvent@@MAEHPAPAEPAJ@Z	; VuBroadcastGlobalEvent::Decode
PUBLIC	?Encode@VuBroadcastGlobalEvent@@MAEHPAPAE@Z	; VuBroadcastGlobalEvent::Encode
PUBLIC	?Activate@VuBroadcastGlobalEvent@@MAEHPAVVuEntity@@@Z ; VuBroadcastGlobalEvent::Activate
PUBLIC	?Process@VuBroadcastGlobalEvent@@MAEHE@Z	; VuBroadcastGlobalEvent::Process
PUBLIC	??_GVuBroadcastGlobalEvent@@UAEPAXI@Z		; VuBroadcastGlobalEvent::`scalar deleting destructor'
PUBLIC	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
PUBLIC	??0VuFullUpdateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ; VuFullUpdateEvent::VuFullUpdateEvent
PUBLIC	??1VuFullUpdateEvent@@UAE@XZ			; VuFullUpdateEvent::~VuFullUpdateEvent
PUBLIC	?Activate@VuFullUpdateEvent@@MAEHPAVVuEntity@@@Z ; VuFullUpdateEvent::Activate
PUBLIC	??_GVuFullUpdateEvent@@UAEPAXI@Z		; VuFullUpdateEvent::`scalar deleting destructor'
PUBLIC	??$?8VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z ; operator==<VuEntity>
PUBLIC	??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z ; VuEntityCollisionEvent::VuEntityCollisionEvent
PUBLIC	??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z	; VuEntityCollisionEvent::VuEntityCollisionEvent
PUBLIC	??1VuEntityCollisionEvent@@UAE@XZ		; VuEntityCollisionEvent::~VuEntityCollisionEvent
PUBLIC	?Size@VuEntityCollisionEvent@@UBEHXZ		; VuEntityCollisionEvent::Size
PUBLIC	?Decode@VuEntityCollisionEvent@@UAEHPAPAEPAJ@Z	; VuEntityCollisionEvent::Decode
PUBLIC	?Encode@VuEntityCollisionEvent@@UAEHPAPAE@Z	; VuEntityCollisionEvent::Encode
PUBLIC	?Process@VuEntityCollisionEvent@@MAEHE@Z	; VuEntityCollisionEvent::Process
PUBLIC	?LocalSize@VuEntityCollisionEvent@@ABEHXZ	; VuEntityCollisionEvent::LocalSize
PUBLIC	??_GVuEntityCollisionEvent@@UAEPAXI@Z		; VuEntityCollisionEvent::`scalar deleting destructor'
PUBLIC	??0VuGroundCollisionEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuGroundCollisionEvent::VuGroundCollisionEvent
PUBLIC	??0VuGroundCollisionEvent@@QAE@VVU_ID@@0@Z	; VuGroundCollisionEvent::VuGroundCollisionEvent
PUBLIC	??1VuGroundCollisionEvent@@UAE@XZ		; VuGroundCollisionEvent::~VuGroundCollisionEvent
PUBLIC	?Process@VuGroundCollisionEvent@@MAEHE@Z	; VuGroundCollisionEvent::Process
PUBLIC	??_GVuGroundCollisionEvent@@UAEPAXI@Z		; VuGroundCollisionEvent::`scalar deleting destructor'
PUBLIC	??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ; VuSessionEvent::VuSessionEvent
PUBLIC	??0VuSessionEvent@@QAE@VVU_ID@@0@Z		; VuSessionEvent::VuSessionEvent
PUBLIC	??1VuSessionEvent@@UAE@XZ			; VuSessionEvent::~VuSessionEvent
PUBLIC	?Size@VuSessionEvent@@UBEHXZ			; VuSessionEvent::Size
PUBLIC	?Decode@VuSessionEvent@@UAEHPAPAEPAJ@Z		; VuSessionEvent::Decode
PUBLIC	?Encode@VuSessionEvent@@UAEHPAPAE@Z		; VuSessionEvent::Encode
PUBLIC	?Process@VuSessionEvent@@MAEHE@Z		; VuSessionEvent::Process
PUBLIC	?LocalSize@VuSessionEvent@@ABEHXZ		; VuSessionEvent::LocalSize
PUBLIC	??_GVuSessionEvent@@UAEPAXI@Z			; VuSessionEvent::`scalar deleting destructor'
PUBLIC	??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z ; VuTimerEvent::VuTimerEvent
PUBLIC	??1VuTimerEvent@@UAE@XZ				; VuTimerEvent::~VuTimerEvent
PUBLIC	?Size@VuTimerEvent@@UBEHXZ			; VuTimerEvent::Size
PUBLIC	?Decode@VuTimerEvent@@UAEHPAPAEPAJ@Z		; VuTimerEvent::Decode
PUBLIC	?Encode@VuTimerEvent@@UAEHPAPAE@Z		; VuTimerEvent::Encode
PUBLIC	?DoSend@VuTimerEvent@@UAEEXZ			; VuTimerEvent::DoSend
PUBLIC	?Process@VuTimerEvent@@MAEHE@Z			; VuTimerEvent::Process
PUBLIC	??_GVuTimerEvent@@UAEPAXI@Z			; VuTimerEvent::`scalar deleting destructor'
PUBLIC	??0VuShutdownEvent@@QAE@E@Z			; VuShutdownEvent::VuShutdownEvent
PUBLIC	??1VuShutdownEvent@@UAE@XZ			; VuShutdownEvent::~VuShutdownEvent
PUBLIC	?Size@VuShutdownEvent@@UBEHXZ			; VuShutdownEvent::Size
PUBLIC	?Decode@VuShutdownEvent@@UAEHPAPAEPAJ@Z		; VuShutdownEvent::Decode
PUBLIC	?Encode@VuShutdownEvent@@UAEHPAPAE@Z		; VuShutdownEvent::Encode
PUBLIC	?DoSend@VuShutdownEvent@@UAEEXZ			; VuShutdownEvent::DoSend
PUBLIC	?Process@VuShutdownEvent@@MAEHE@Z		; VuShutdownEvent::Process
PUBLIC	??_GVuShutdownEvent@@UAEPAXI@Z			; VuShutdownEvent::`scalar deleting destructor'
PUBLIC	??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; VuTimingMessage::VuTimingMessage
PUBLIC	??0VuTimingMessage@@QAE@VVU_ID@@0@Z		; VuTimingMessage::VuTimingMessage
PUBLIC	??1VuTimingMessage@@UAE@XZ			; VuTimingMessage::~VuTimingMessage
PUBLIC	?Size@VuTimingMessage@@UBEHXZ			; VuTimingMessage::Size
PUBLIC	?Decode@VuTimingMessage@@UAEHPAPAEPAJ@Z		; VuTimingMessage::Decode
PUBLIC	?Encode@VuTimingMessage@@UAEHPAPAE@Z		; VuTimingMessage::Encode
PUBLIC	?Process@VuTimingMessage@@MAEHE@Z		; VuTimingMessage::Process
PUBLIC	??_GVuTimingMessage@@UAEPAXI@Z			; VuTimingMessage::`scalar deleting destructor'
PUBLIC	??0VuUnknownMessage@@QAE@XZ			; VuUnknownMessage::VuUnknownMessage
PUBLIC	??1VuUnknownMessage@@UAE@XZ			; VuUnknownMessage::~VuUnknownMessage
PUBLIC	?Size@VuUnknownMessage@@UBEHXZ			; VuUnknownMessage::Size
PUBLIC	?Decode@VuUnknownMessage@@UAEHPAPAEPAJ@Z	; VuUnknownMessage::Decode
PUBLIC	?Encode@VuUnknownMessage@@UAEHPAPAE@Z		; VuUnknownMessage::Encode
PUBLIC	?DoSend@VuUnknownMessage@@UAEEXZ		; VuUnknownMessage::DoSend
PUBLIC	?Process@VuUnknownMessage@@MAEHE@Z		; VuUnknownMessage::Process
PUBLIC	??_GVuUnknownMessage@@UAEPAXI@Z			; VuUnknownMessage::`scalar deleting destructor'
PUBLIC	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
PUBLIC	?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ ; VuSessionEntity::GetAddress
PUBLIC	?Callsign@VuSessionEntity@@QAEPADXZ		; VuSessionEntity::Callsign
PUBLIC	?SetAddress@VuSessionEntity@@QAEXVVU_ADDRESS@@@Z ; VuSessionEntity::SetAddress
PUBLIC	?SetTimeDelta@VuSessionEntity@@QAEXH@Z		; VuSessionEntity::SetTimeDelta
PUBLIC	?Latency@VuSessionEntity@@QAEHXZ		; VuSessionEntity::Latency
PUBLIC	?SetLatency@VuSessionEntity@@QAEXH@Z		; VuSessionEntity::SetLatency
PUBLIC	?GroupName@VuGroupEntity@@QAEPADXZ		; VuGroupEntity::GroupName
PUBLIC	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
PUBLIC	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
PUBLIC	??$?9VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z ; operator!=<VuEntity>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_7InvalidBufferException@@6B@			; InvalidBufferException::`vftable'
PUBLIC	??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ ; `string'
PUBLIC	__TI4?AVInvalidBufferException@@
PUBLIC	__CTA4?AVInvalidBufferException@@
PUBLIC	??_R0?AVInvalidBufferException@@@8		; InvalidBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7VuMessage@@6B@				; VuMessage::`vftable'
PUBLIC	??_7VuRequestDummyBlockMessage@@6B@		; VuRequestDummyBlockMessage::`vftable'
PUBLIC	??_7VuErrorMessage@@6B@				; VuErrorMessage::`vftable'
PUBLIC	??_7VuRequestMessage@@6B@			; VuRequestMessage::`vftable'
PUBLIC	??_7VuGetRequest@@6B@				; VuGetRequest::`vftable'
PUBLIC	??_7VuPushRequest@@6B@				; VuPushRequest::`vftable'
PUBLIC	??_7VuPullRequest@@6B@				; VuPullRequest::`vftable'
PUBLIC	??_7VuEvent@@6B@				; VuEvent::`vftable'
PUBLIC	??_7VuCreateEvent@@6B@				; VuCreateEvent::`vftable'
PUBLIC	??_7VuManageEvent@@6B@				; VuManageEvent::`vftable'
PUBLIC	??_7VuDeleteEvent@@6B@				; VuDeleteEvent::`vftable'
PUBLIC	??_7VuTransferEvent@@6B@			; VuTransferEvent::`vftable'
PUBLIC	??_7VuPositionUpdateEvent@@6B@			; VuPositionUpdateEvent::`vftable'
PUBLIC	??_7VuBroadcastGlobalEvent@@6B@			; VuBroadcastGlobalEvent::`vftable'
PUBLIC	??_7VuFullUpdateEvent@@6B@			; VuFullUpdateEvent::`vftable'
PUBLIC	??_7VuEntityCollisionEvent@@6B@			; VuEntityCollisionEvent::`vftable'
PUBLIC	??_7VuGroundCollisionEvent@@6B@			; VuGroundCollisionEvent::`vftable'
PUBLIC	??_7VuSessionEvent@@6B@				; VuSessionEvent::`vftable'
PUBLIC	??_7VuTimerEvent@@6B@				; VuTimerEvent::`vftable'
PUBLIC	??_7VuShutdownEvent@@6B@			; VuShutdownEvent::`vftable'
PUBLIC	??_7VuTimingMessage@@6B@			; VuTimingMessage::`vftable'
PUBLIC	??_7VuUnknownMessage@@6B@			; VuUnknownMessage::`vftable'
PUBLIC	??_C@_0M@LNKKMGKK@bad?5session?$AA@		; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidBufferException@@6B@		; InvalidBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidBufferException@@8			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidBufferException@@8			; InvalidBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidBufferException@@8		; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuMessage@@6B@				; VuMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuMessage@@@8				; VuMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuMessage@@8				; VuMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuMessage@@8				; VuMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuMessage@@8			; VuMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuTimingMessage@@6B@			; VuTimingMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuTimingMessage@@@8			; VuTimingMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuTimingMessage@@8				; VuTimingMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuTimingMessage@@8				; VuTimingMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuTimingMessage@@8		; VuTimingMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuUnknownMessage@@6B@			; VuUnknownMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuUnknownMessage@@@8			; VuUnknownMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuUnknownMessage@@8			; VuUnknownMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuUnknownMessage@@8			; VuUnknownMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuUnknownMessage@@8		; VuUnknownMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuErrorMessage@@6B@			; VuErrorMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuErrorMessage@@@8			; VuErrorMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuErrorMessage@@8				; VuErrorMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuErrorMessage@@8				; VuErrorMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuErrorMessage@@8			; VuErrorMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuRequestMessage@@6B@			; VuRequestMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuRequestMessage@@@8			; VuRequestMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuRequestMessage@@8			; VuRequestMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuRequestMessage@@8			; VuRequestMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuRequestMessage@@8		; VuRequestMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuGetRequest@@6B@				; VuGetRequest::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuGetRequest@@@8			; VuGetRequest `RTTI Type Descriptor'
PUBLIC	??_R3VuGetRequest@@8				; VuGetRequest::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuGetRequest@@8				; VuGetRequest::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuGetRequest@@8			; VuGetRequest::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuPushRequest@@6B@				; VuPushRequest::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuPushRequest@@@8			; VuPushRequest `RTTI Type Descriptor'
PUBLIC	??_R3VuPushRequest@@8				; VuPushRequest::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuPushRequest@@8				; VuPushRequest::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuPushRequest@@8			; VuPushRequest::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuPullRequest@@6B@				; VuPullRequest::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuPullRequest@@@8			; VuPullRequest `RTTI Type Descriptor'
PUBLIC	??_R3VuPullRequest@@8				; VuPullRequest::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuPullRequest@@8				; VuPullRequest::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuPullRequest@@8			; VuPullRequest::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuEvent@@6B@				; VuEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuEvent@@@8				; VuEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuEvent@@8					; VuEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuEvent@@8					; VuEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuEvent@@8			; VuEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuDeleteEvent@@6B@				; VuDeleteEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuDeleteEvent@@@8			; VuDeleteEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuDeleteEvent@@8				; VuDeleteEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuDeleteEvent@@8				; VuDeleteEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuDeleteEvent@@8			; VuDeleteEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuTransferEvent@@6B@			; VuTransferEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuTransferEvent@@@8			; VuTransferEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuTransferEvent@@8				; VuTransferEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuTransferEvent@@8				; VuTransferEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuTransferEvent@@8		; VuTransferEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuPositionUpdateEvent@@6B@			; VuPositionUpdateEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuPositionUpdateEvent@@@8		; VuPositionUpdateEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuPositionUpdateEvent@@8			; VuPositionUpdateEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuPositionUpdateEvent@@8			; VuPositionUpdateEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuPositionUpdateEvent@@8		; VuPositionUpdateEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuBroadcastGlobalEvent@@6B@		; VuBroadcastGlobalEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuBroadcastGlobalEvent@@@8		; VuBroadcastGlobalEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuBroadcastGlobalEvent@@8			; VuBroadcastGlobalEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuBroadcastGlobalEvent@@8			; VuBroadcastGlobalEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuBroadcastGlobalEvent@@8		; VuBroadcastGlobalEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuEntityCollisionEvent@@6B@		; VuEntityCollisionEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuEntityCollisionEvent@@@8		; VuEntityCollisionEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuEntityCollisionEvent@@8			; VuEntityCollisionEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuEntityCollisionEvent@@8			; VuEntityCollisionEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuEntityCollisionEvent@@8		; VuEntityCollisionEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuGroundCollisionEvent@@6B@		; VuGroundCollisionEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuGroundCollisionEvent@@@8		; VuGroundCollisionEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuGroundCollisionEvent@@8			; VuGroundCollisionEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuGroundCollisionEvent@@8			; VuGroundCollisionEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuGroundCollisionEvent@@8		; VuGroundCollisionEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuSessionEvent@@6B@			; VuSessionEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuSessionEvent@@@8			; VuSessionEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuSessionEvent@@8				; VuSessionEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuSessionEvent@@8				; VuSessionEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuSessionEvent@@8			; VuSessionEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuTimerEvent@@6B@				; VuTimerEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuTimerEvent@@@8			; VuTimerEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuTimerEvent@@8				; VuTimerEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuTimerEvent@@8				; VuTimerEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuTimerEvent@@8			; VuTimerEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuShutdownEvent@@6B@			; VuShutdownEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuShutdownEvent@@@8			; VuShutdownEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuShutdownEvent@@8				; VuShutdownEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuShutdownEvent@@8				; VuShutdownEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuShutdownEvent@@8		; VuShutdownEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuCreateEvent@@6B@				; VuCreateEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuCreateEvent@@@8			; VuCreateEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuCreateEvent@@8				; VuCreateEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuCreateEvent@@8				; VuCreateEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuCreateEvent@@8			; VuCreateEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuManageEvent@@6B@				; VuManageEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuManageEvent@@@8			; VuManageEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuManageEvent@@8				; VuManageEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuManageEvent@@8				; VuManageEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuManageEvent@@8			; VuManageEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuFullUpdateEvent@@6B@			; VuFullUpdateEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuFullUpdateEvent@@@8			; VuFullUpdateEvent `RTTI Type Descriptor'
PUBLIC	??_R3VuFullUpdateEvent@@8			; VuFullUpdateEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuFullUpdateEvent@@8			; VuFullUpdateEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuFullUpdateEvent@@8		; VuFullUpdateEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4VuRequestDummyBlockMessage@@6B@		; VuRequestDummyBlockMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuRequestDummyBlockMessage@@@8		; VuRequestDummyBlockMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuRequestDummyBlockMessage@@8		; VuRequestDummyBlockMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuRequestDummyBlockMessage@@8		; VuRequestDummyBlockMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuRequestDummyBlockMessage@@8	; VuRequestDummyBlockMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3cc90fdb
PUBLIC	__real@3d9c409c
PUBLIC	__real@4151b646
PUBLIC	__real@4222f983
PUBLIC	__real@459c4000
PUBLIC	__real@bf800000
PUBLIC	__real@c59c4000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_sprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Decode@VU_ADDRESS@@QAEXPAPAEPAJ@Z:PROC		; VU_ADDRESS::Decode
EXTRN	?Encode@VU_ADDRESS@@QAEHPAPAE@Z:PROC		; VU_ADDRESS::Encode
EXTRN	?IsPrivate@VU_ADDRESS@@QBE_NXZ:PROC		; VU_ADDRESS::IsPrivate
EXTRN	??_EInvalidBufferException@@UAEPAXI@Z:PROC	; InvalidBufferException::`vector deleting destructor'
EXTRN	_ComAPIGetMyRecvPort:PROC
EXTRN	_ComAPIGetMyReliableRecvPort:PROC
EXTRN	_ComAPISendDummy:PROC
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z:PROC	; VuEntity::SetOwnerId
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	?Handle@VuDatabase@@QAEHPAVVuMessage@@@Z:PROC	; VuDatabase::Handle
EXTRN	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Insert
EXTRN	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z:PROC	; VuDatabase::Remove
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?VuxAddDanglingSession@@YA_NVVU_ID@@VVU_ADDRESS@@@Z:PROC ; VuxAddDanglingSession
EXTRN	?VuxGetId@@YAKXZ:PROC				; VuxGetId
EXTRN	?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z:PROC	; VuxCreateEntity
EXTRN	?VuxRetireEntity@@YAXPAVVuEntity@@@Z:PROC	; VuxRetireEntity
EXTRN	??_EVuMessage@@UAEPAXI@Z:PROC			; VuMessage::`vector deleting destructor'
EXTRN	??_EVuRequestDummyBlockMessage@@UAEPAXI@Z:PROC	; VuRequestDummyBlockMessage::`vector deleting destructor'
EXTRN	??_EVuErrorMessage@@UAEPAXI@Z:PROC		; VuErrorMessage::`vector deleting destructor'
EXTRN	??_EVuRequestMessage@@UAEPAXI@Z:PROC		; VuRequestMessage::`vector deleting destructor'
EXTRN	??_EVuGetRequest@@UAEPAXI@Z:PROC		; VuGetRequest::`vector deleting destructor'
EXTRN	??_EVuPushRequest@@UAEPAXI@Z:PROC		; VuPushRequest::`vector deleting destructor'
EXTRN	??_EVuPullRequest@@UAEPAXI@Z:PROC		; VuPullRequest::`vector deleting destructor'
EXTRN	??_EVuEvent@@UAEPAXI@Z:PROC			; VuEvent::`vector deleting destructor'
EXTRN	??_EVuCreateEvent@@UAEPAXI@Z:PROC		; VuCreateEvent::`vector deleting destructor'
EXTRN	??_EVuManageEvent@@UAEPAXI@Z:PROC		; VuManageEvent::`vector deleting destructor'
EXTRN	??_EVuDeleteEvent@@UAEPAXI@Z:PROC		; VuDeleteEvent::`vector deleting destructor'
EXTRN	??_EVuTransferEvent@@UAEPAXI@Z:PROC		; VuTransferEvent::`vector deleting destructor'
EXTRN	??_EVuPositionUpdateEvent@@UAEPAXI@Z:PROC	; VuPositionUpdateEvent::`vector deleting destructor'
EXTRN	??_EVuBroadcastGlobalEvent@@UAEPAXI@Z:PROC	; VuBroadcastGlobalEvent::`vector deleting destructor'
EXTRN	??_EVuFullUpdateEvent@@UAEPAXI@Z:PROC		; VuFullUpdateEvent::`vector deleting destructor'
EXTRN	??_EVuEntityCollisionEvent@@UAEPAXI@Z:PROC	; VuEntityCollisionEvent::`vector deleting destructor'
EXTRN	??_EVuGroundCollisionEvent@@UAEPAXI@Z:PROC	; VuGroundCollisionEvent::`vector deleting destructor'
EXTRN	??_EVuSessionEvent@@UAEPAXI@Z:PROC		; VuSessionEvent::`vector deleting destructor'
EXTRN	??_EVuTimerEvent@@UAEPAXI@Z:PROC		; VuTimerEvent::`vector deleting destructor'
EXTRN	??_EVuShutdownEvent@@UAEPAXI@Z:PROC		; VuShutdownEvent::`vector deleting destructor'
EXTRN	??_EVuTimingMessage@@UAEPAXI@Z:PROC		; VuTimingMessage::`vector deleting destructor'
EXTRN	??_EVuUnknownMessage@@UAEPAXI@Z:PROC		; VuUnknownMessage::`vector deleting destructor'
EXTRN	?SendMessageA@VuTargetEntity@@QAEHPAVVuMessage@@@Z:PROC ; VuTargetEntity::SendMessageA
EXTRN	??0VuSessionEntity@@QAE@PAPAEPAJ@Z:PROC		; VuSessionEntity::VuSessionEntity
EXTRN	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ:PROC	; VuSessionEntity::GameId
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuGroupEntity@@QAE@PAPAEPAJ@Z:PROC		; VuGroupEntity::VuGroupEntity
EXTRN	??0VuGameEntity@@QAE@PAPAEPAJ@Z:PROC		; VuGameEntity::VuGameEntity
EXTRN	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z:PROC ; VuMessageQueue::PostVuMessage
EXTRN	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ:PROC ; VuHashIterator::GetFirst
EXTRN	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ:PROC ; VuHashIterator::GetNext
EXTRN	??0VuDatabaseIterator@@QAE@XZ:PROC		; VuDatabaseIterator::VuDatabaseIterator
EXTRN	??1VuDatabaseIterator@@UAE@XZ:PROC		; VuDatabaseIterator::~VuDatabaseIterator
EXTRN	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z:PROC ; VuSessionsIterator::VuSessionsIterator
EXTRN	??1VuSessionsIterator@@UAE@XZ:PROC		; VuSessionsIterator::~VuSessionsIterator
EXTRN	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetFirst
EXTRN	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetNext
EXTRN	?Shutdown@VuCollectionManager@@QAEXE@Z:PROC	; VuCollectionManager::Shutdown
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuGlobalGroup@@3PAVVuGlobalGroup@@A:DWORD	; vuGlobalGroup
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?vuNullId@@3VVU_ID@@A:QWORD			; vuNullId
EXTRN	?vuxGameTime@@3KA:DWORD				; vuxGameTime
EXTRN	?vuxRealTime@@3KA:DWORD				; vuxRealTime
EXTRN	?vuCollectionManager@@3PAVVuCollectionManager@@A:DWORD ; vuCollectionManager
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c59c4000
CONST	SEGMENT
__real@c59c4000 DD 0c59c4000r			; -5000
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@4222f983
CONST	SEGMENT
__real@4222f983 DD 04222f983r			; 40.7437
CONST	ENDS
;	COMDAT __real@4151b646
CONST	SEGMENT
__real@4151b646 DD 04151b646r			; 13.107
CONST	ENDS
;	COMDAT __real@3d9c409c
CONST	SEGMENT
__real@3d9c409c DD 03d9c409cr			; 0.0762951
CONST	ENDS
;	COMDAT __real@3cc90fdb
CONST	SEGMENT
__real@3cc90fdb DD 03cc90fdbr			; 0.0245437
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@VuRequestDummyBlockMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuRequestDummyBlockMessage@@8 DD FLAT:??_R0?AVVuRequestDummyBlockMessage@@@8 ; VuRequestDummyBlockMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuRequestDummyBlockMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2VuRequestDummyBlockMessage@@8
rdata$r	SEGMENT
??_R2VuRequestDummyBlockMessage@@8 DD FLAT:??_R1A@?0A@EA@VuRequestDummyBlockMessage@@8 ; VuRequestDummyBlockMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuRequestDummyBlockMessage@@8
rdata$r	SEGMENT
??_R3VuRequestDummyBlockMessage@@8 DD 00H		; VuRequestDummyBlockMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuRequestDummyBlockMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuRequestDummyBlockMessage@@@8
_DATA	SEGMENT
??_R0?AVVuRequestDummyBlockMessage@@@8 DD FLAT:??_7type_info@@6B@ ; VuRequestDummyBlockMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuRequestDummyBlockMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuRequestDummyBlockMessage@@6B@
rdata$r	SEGMENT
??_R4VuRequestDummyBlockMessage@@6B@ DD 00H		; VuRequestDummyBlockMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuRequestDummyBlockMessage@@@8
	DD	FLAT:??_R3VuRequestDummyBlockMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuFullUpdateEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuFullUpdateEvent@@8 DD FLAT:??_R0?AVVuFullUpdateEvent@@@8 ; VuFullUpdateEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuFullUpdateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuFullUpdateEvent@@8
rdata$r	SEGMENT
??_R2VuFullUpdateEvent@@8 DD FLAT:??_R1A@?0A@EA@VuFullUpdateEvent@@8 ; VuFullUpdateEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuCreateEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuFullUpdateEvent@@8
rdata$r	SEGMENT
??_R3VuFullUpdateEvent@@8 DD 00H			; VuFullUpdateEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2VuFullUpdateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuFullUpdateEvent@@@8
_DATA	SEGMENT
??_R0?AVVuFullUpdateEvent@@@8 DD FLAT:??_7type_info@@6B@ ; VuFullUpdateEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuFullUpdateEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuFullUpdateEvent@@6B@
rdata$r	SEGMENT
??_R4VuFullUpdateEvent@@6B@ DD 00H			; VuFullUpdateEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuFullUpdateEvent@@@8
	DD	FLAT:??_R3VuFullUpdateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuManageEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuManageEvent@@8 DD FLAT:??_R0?AVVuManageEvent@@@8 ; VuManageEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuManageEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuManageEvent@@8
rdata$r	SEGMENT
??_R2VuManageEvent@@8 DD FLAT:??_R1A@?0A@EA@VuManageEvent@@8 ; VuManageEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuCreateEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuManageEvent@@8
rdata$r	SEGMENT
??_R3VuManageEvent@@8 DD 00H				; VuManageEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2VuManageEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuManageEvent@@@8
_DATA	SEGMENT
??_R0?AVVuManageEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuManageEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuManageEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuManageEvent@@6B@
rdata$r	SEGMENT
??_R4VuManageEvent@@6B@ DD 00H				; VuManageEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuManageEvent@@@8
	DD	FLAT:??_R3VuManageEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuCreateEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuCreateEvent@@8 DD FLAT:??_R0?AVVuCreateEvent@@@8 ; VuCreateEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuCreateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuCreateEvent@@8
rdata$r	SEGMENT
??_R2VuCreateEvent@@8 DD FLAT:??_R1A@?0A@EA@VuCreateEvent@@8 ; VuCreateEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuCreateEvent@@8
rdata$r	SEGMENT
??_R3VuCreateEvent@@8 DD 00H				; VuCreateEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuCreateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuCreateEvent@@@8
_DATA	SEGMENT
??_R0?AVVuCreateEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuCreateEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuCreateEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuCreateEvent@@6B@
rdata$r	SEGMENT
??_R4VuCreateEvent@@6B@ DD 00H				; VuCreateEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuCreateEvent@@@8
	DD	FLAT:??_R3VuCreateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuShutdownEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuShutdownEvent@@8 DD FLAT:??_R0?AVVuShutdownEvent@@@8 ; VuShutdownEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuShutdownEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuShutdownEvent@@8
rdata$r	SEGMENT
??_R2VuShutdownEvent@@8 DD FLAT:??_R1A@?0A@EA@VuShutdownEvent@@8 ; VuShutdownEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuShutdownEvent@@8
rdata$r	SEGMENT
??_R3VuShutdownEvent@@8 DD 00H				; VuShutdownEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuShutdownEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuShutdownEvent@@@8
_DATA	SEGMENT
??_R0?AVVuShutdownEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuShutdownEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuShutdownEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuShutdownEvent@@6B@
rdata$r	SEGMENT
??_R4VuShutdownEvent@@6B@ DD 00H			; VuShutdownEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuShutdownEvent@@@8
	DD	FLAT:??_R3VuShutdownEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuTimerEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuTimerEvent@@8 DD FLAT:??_R0?AVVuTimerEvent@@@8 ; VuTimerEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuTimerEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuTimerEvent@@8
rdata$r	SEGMENT
??_R2VuTimerEvent@@8 DD FLAT:??_R1A@?0A@EA@VuTimerEvent@@8 ; VuTimerEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuTimerEvent@@8
rdata$r	SEGMENT
??_R3VuTimerEvent@@8 DD 00H				; VuTimerEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuTimerEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuTimerEvent@@@8
_DATA	SEGMENT
??_R0?AVVuTimerEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuTimerEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuTimerEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuTimerEvent@@6B@
rdata$r	SEGMENT
??_R4VuTimerEvent@@6B@ DD 00H				; VuTimerEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuTimerEvent@@@8
	DD	FLAT:??_R3VuTimerEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuSessionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuSessionEvent@@8 DD FLAT:??_R0?AVVuSessionEvent@@@8 ; VuSessionEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuSessionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuSessionEvent@@8
rdata$r	SEGMENT
??_R2VuSessionEvent@@8 DD FLAT:??_R1A@?0A@EA@VuSessionEvent@@8 ; VuSessionEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuSessionEvent@@8
rdata$r	SEGMENT
??_R3VuSessionEvent@@8 DD 00H				; VuSessionEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuSessionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuSessionEvent@@@8
_DATA	SEGMENT
??_R0?AVVuSessionEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuSessionEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuSessionEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuSessionEvent@@6B@
rdata$r	SEGMENT
??_R4VuSessionEvent@@6B@ DD 00H				; VuSessionEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuSessionEvent@@@8
	DD	FLAT:??_R3VuSessionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuGroundCollisionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuGroundCollisionEvent@@8 DD FLAT:??_R0?AVVuGroundCollisionEvent@@@8 ; VuGroundCollisionEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuGroundCollisionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuGroundCollisionEvent@@8
rdata$r	SEGMENT
??_R2VuGroundCollisionEvent@@8 DD FLAT:??_R1A@?0A@EA@VuGroundCollisionEvent@@8 ; VuGroundCollisionEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuGroundCollisionEvent@@8
rdata$r	SEGMENT
??_R3VuGroundCollisionEvent@@8 DD 00H			; VuGroundCollisionEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuGroundCollisionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuGroundCollisionEvent@@@8
_DATA	SEGMENT
??_R0?AVVuGroundCollisionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; VuGroundCollisionEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuGroundCollisionEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuGroundCollisionEvent@@6B@
rdata$r	SEGMENT
??_R4VuGroundCollisionEvent@@6B@ DD 00H			; VuGroundCollisionEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuGroundCollisionEvent@@@8
	DD	FLAT:??_R3VuGroundCollisionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuEntityCollisionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuEntityCollisionEvent@@8 DD FLAT:??_R0?AVVuEntityCollisionEvent@@@8 ; VuEntityCollisionEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuEntityCollisionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuEntityCollisionEvent@@8
rdata$r	SEGMENT
??_R2VuEntityCollisionEvent@@8 DD FLAT:??_R1A@?0A@EA@VuEntityCollisionEvent@@8 ; VuEntityCollisionEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuEntityCollisionEvent@@8
rdata$r	SEGMENT
??_R3VuEntityCollisionEvent@@8 DD 00H			; VuEntityCollisionEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuEntityCollisionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuEntityCollisionEvent@@@8
_DATA	SEGMENT
??_R0?AVVuEntityCollisionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; VuEntityCollisionEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuEntityCollisionEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuEntityCollisionEvent@@6B@
rdata$r	SEGMENT
??_R4VuEntityCollisionEvent@@6B@ DD 00H			; VuEntityCollisionEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuEntityCollisionEvent@@@8
	DD	FLAT:??_R3VuEntityCollisionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuBroadcastGlobalEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuBroadcastGlobalEvent@@8 DD FLAT:??_R0?AVVuBroadcastGlobalEvent@@@8 ; VuBroadcastGlobalEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuBroadcastGlobalEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuBroadcastGlobalEvent@@8
rdata$r	SEGMENT
??_R2VuBroadcastGlobalEvent@@8 DD FLAT:??_R1A@?0A@EA@VuBroadcastGlobalEvent@@8 ; VuBroadcastGlobalEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuBroadcastGlobalEvent@@8
rdata$r	SEGMENT
??_R3VuBroadcastGlobalEvent@@8 DD 00H			; VuBroadcastGlobalEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuBroadcastGlobalEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuBroadcastGlobalEvent@@@8
_DATA	SEGMENT
??_R0?AVVuBroadcastGlobalEvent@@@8 DD FLAT:??_7type_info@@6B@ ; VuBroadcastGlobalEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuBroadcastGlobalEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuBroadcastGlobalEvent@@6B@
rdata$r	SEGMENT
??_R4VuBroadcastGlobalEvent@@6B@ DD 00H			; VuBroadcastGlobalEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuBroadcastGlobalEvent@@@8
	DD	FLAT:??_R3VuBroadcastGlobalEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuPositionUpdateEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuPositionUpdateEvent@@8 DD FLAT:??_R0?AVVuPositionUpdateEvent@@@8 ; VuPositionUpdateEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuPositionUpdateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuPositionUpdateEvent@@8
rdata$r	SEGMENT
??_R2VuPositionUpdateEvent@@8 DD FLAT:??_R1A@?0A@EA@VuPositionUpdateEvent@@8 ; VuPositionUpdateEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuPositionUpdateEvent@@8
rdata$r	SEGMENT
??_R3VuPositionUpdateEvent@@8 DD 00H			; VuPositionUpdateEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuPositionUpdateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuPositionUpdateEvent@@@8
_DATA	SEGMENT
??_R0?AVVuPositionUpdateEvent@@@8 DD FLAT:??_7type_info@@6B@ ; VuPositionUpdateEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuPositionUpdateEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuPositionUpdateEvent@@6B@
rdata$r	SEGMENT
??_R4VuPositionUpdateEvent@@6B@ DD 00H			; VuPositionUpdateEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuPositionUpdateEvent@@@8
	DD	FLAT:??_R3VuPositionUpdateEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuTransferEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuTransferEvent@@8 DD FLAT:??_R0?AVVuTransferEvent@@@8 ; VuTransferEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuTransferEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuTransferEvent@@8
rdata$r	SEGMENT
??_R2VuTransferEvent@@8 DD FLAT:??_R1A@?0A@EA@VuTransferEvent@@8 ; VuTransferEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuTransferEvent@@8
rdata$r	SEGMENT
??_R3VuTransferEvent@@8 DD 00H				; VuTransferEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuTransferEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuTransferEvent@@@8
_DATA	SEGMENT
??_R0?AVVuTransferEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuTransferEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuTransferEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuTransferEvent@@6B@
rdata$r	SEGMENT
??_R4VuTransferEvent@@6B@ DD 00H			; VuTransferEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuTransferEvent@@@8
	DD	FLAT:??_R3VuTransferEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuDeleteEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuDeleteEvent@@8 DD FLAT:??_R0?AVVuDeleteEvent@@@8 ; VuDeleteEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuDeleteEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuDeleteEvent@@8
rdata$r	SEGMENT
??_R2VuDeleteEvent@@8 DD FLAT:??_R1A@?0A@EA@VuDeleteEvent@@8 ; VuDeleteEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuDeleteEvent@@8
rdata$r	SEGMENT
??_R3VuDeleteEvent@@8 DD 00H				; VuDeleteEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuDeleteEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuDeleteEvent@@@8
_DATA	SEGMENT
??_R0?AVVuDeleteEvent@@@8 DD FLAT:??_7type_info@@6B@	; VuDeleteEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuDeleteEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuDeleteEvent@@6B@
rdata$r	SEGMENT
??_R4VuDeleteEvent@@6B@ DD 00H				; VuDeleteEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuDeleteEvent@@@8
	DD	FLAT:??_R3VuDeleteEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuEvent@@8 DD FLAT:??_R0?AVVuEvent@@@8	; VuEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2VuEvent@@8
rdata$r	SEGMENT
??_R2VuEvent@@8 DD FLAT:??_R1A@?0A@EA@VuEvent@@8	; VuEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuEvent@@8
rdata$r	SEGMENT
??_R3VuEvent@@8 DD 00H					; VuEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuEvent@@@8
_DATA	SEGMENT
??_R0?AVVuEvent@@@8 DD FLAT:??_7type_info@@6B@		; VuEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuEvent@@6B@
rdata$r	SEGMENT
??_R4VuEvent@@6B@ DD 00H				; VuEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuEvent@@@8
	DD	FLAT:??_R3VuEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuPullRequest@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuPullRequest@@8 DD FLAT:??_R0?AVVuPullRequest@@@8 ; VuPullRequest::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuPullRequest@@8
rdata$r	ENDS
;	COMDAT ??_R2VuPullRequest@@8
rdata$r	SEGMENT
??_R2VuPullRequest@@8 DD FLAT:??_R1A@?0A@EA@VuPullRequest@@8 ; VuPullRequest::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuRequestMessage@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuPullRequest@@8
rdata$r	SEGMENT
??_R3VuPullRequest@@8 DD 00H				; VuPullRequest::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuPullRequest@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuPullRequest@@@8
_DATA	SEGMENT
??_R0?AVVuPullRequest@@@8 DD FLAT:??_7type_info@@6B@	; VuPullRequest `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuPullRequest@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuPullRequest@@6B@
rdata$r	SEGMENT
??_R4VuPullRequest@@6B@ DD 00H				; VuPullRequest::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuPullRequest@@@8
	DD	FLAT:??_R3VuPullRequest@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuPushRequest@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuPushRequest@@8 DD FLAT:??_R0?AVVuPushRequest@@@8 ; VuPushRequest::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuPushRequest@@8
rdata$r	ENDS
;	COMDAT ??_R2VuPushRequest@@8
rdata$r	SEGMENT
??_R2VuPushRequest@@8 DD FLAT:??_R1A@?0A@EA@VuPushRequest@@8 ; VuPushRequest::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuRequestMessage@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuPushRequest@@8
rdata$r	SEGMENT
??_R3VuPushRequest@@8 DD 00H				; VuPushRequest::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuPushRequest@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuPushRequest@@@8
_DATA	SEGMENT
??_R0?AVVuPushRequest@@@8 DD FLAT:??_7type_info@@6B@	; VuPushRequest `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuPushRequest@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuPushRequest@@6B@
rdata$r	SEGMENT
??_R4VuPushRequest@@6B@ DD 00H				; VuPushRequest::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuPushRequest@@@8
	DD	FLAT:??_R3VuPushRequest@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuGetRequest@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuGetRequest@@8 DD FLAT:??_R0?AVVuGetRequest@@@8 ; VuGetRequest::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuGetRequest@@8
rdata$r	ENDS
;	COMDAT ??_R2VuGetRequest@@8
rdata$r	SEGMENT
??_R2VuGetRequest@@8 DD FLAT:??_R1A@?0A@EA@VuGetRequest@@8 ; VuGetRequest::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuRequestMessage@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuGetRequest@@8
rdata$r	SEGMENT
??_R3VuGetRequest@@8 DD 00H				; VuGetRequest::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuGetRequest@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuGetRequest@@@8
_DATA	SEGMENT
??_R0?AVVuGetRequest@@@8 DD FLAT:??_7type_info@@6B@	; VuGetRequest `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuGetRequest@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuGetRequest@@6B@
rdata$r	SEGMENT
??_R4VuGetRequest@@6B@ DD 00H				; VuGetRequest::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuGetRequest@@@8
	DD	FLAT:??_R3VuGetRequest@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuRequestMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuRequestMessage@@8 DD FLAT:??_R0?AVVuRequestMessage@@@8 ; VuRequestMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuRequestMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2VuRequestMessage@@8
rdata$r	SEGMENT
??_R2VuRequestMessage@@8 DD FLAT:??_R1A@?0A@EA@VuRequestMessage@@8 ; VuRequestMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuRequestMessage@@8
rdata$r	SEGMENT
??_R3VuRequestMessage@@8 DD 00H				; VuRequestMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuRequestMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuRequestMessage@@@8
_DATA	SEGMENT
??_R0?AVVuRequestMessage@@@8 DD FLAT:??_7type_info@@6B@	; VuRequestMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuRequestMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuRequestMessage@@6B@
rdata$r	SEGMENT
??_R4VuRequestMessage@@6B@ DD 00H			; VuRequestMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuRequestMessage@@@8
	DD	FLAT:??_R3VuRequestMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuErrorMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuErrorMessage@@8 DD FLAT:??_R0?AVVuErrorMessage@@@8 ; VuErrorMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuErrorMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2VuErrorMessage@@8
rdata$r	SEGMENT
??_R2VuErrorMessage@@8 DD FLAT:??_R1A@?0A@EA@VuErrorMessage@@8 ; VuErrorMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuErrorMessage@@8
rdata$r	SEGMENT
??_R3VuErrorMessage@@8 DD 00H				; VuErrorMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuErrorMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuErrorMessage@@@8
_DATA	SEGMENT
??_R0?AVVuErrorMessage@@@8 DD FLAT:??_7type_info@@6B@	; VuErrorMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuErrorMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuErrorMessage@@6B@
rdata$r	SEGMENT
??_R4VuErrorMessage@@6B@ DD 00H				; VuErrorMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuErrorMessage@@@8
	DD	FLAT:??_R3VuErrorMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuUnknownMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuUnknownMessage@@8 DD FLAT:??_R0?AVVuUnknownMessage@@@8 ; VuUnknownMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuUnknownMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2VuUnknownMessage@@8
rdata$r	SEGMENT
??_R2VuUnknownMessage@@8 DD FLAT:??_R1A@?0A@EA@VuUnknownMessage@@8 ; VuUnknownMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuUnknownMessage@@8
rdata$r	SEGMENT
??_R3VuUnknownMessage@@8 DD 00H				; VuUnknownMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuUnknownMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuUnknownMessage@@@8
_DATA	SEGMENT
??_R0?AVVuUnknownMessage@@@8 DD FLAT:??_7type_info@@6B@	; VuUnknownMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuUnknownMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuUnknownMessage@@6B@
rdata$r	SEGMENT
??_R4VuUnknownMessage@@6B@ DD 00H			; VuUnknownMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuUnknownMessage@@@8
	DD	FLAT:??_R3VuUnknownMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuTimingMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuTimingMessage@@8 DD FLAT:??_R0?AVVuTimingMessage@@@8 ; VuTimingMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuTimingMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2VuTimingMessage@@8
rdata$r	SEGMENT
??_R2VuTimingMessage@@8 DD FLAT:??_R1A@?0A@EA@VuTimingMessage@@8 ; VuTimingMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3VuTimingMessage@@8
rdata$r	SEGMENT
??_R3VuTimingMessage@@8 DD 00H				; VuTimingMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuTimingMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuTimingMessage@@@8
_DATA	SEGMENT
??_R0?AVVuTimingMessage@@@8 DD FLAT:??_7type_info@@6B@	; VuTimingMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuTimingMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuTimingMessage@@6B@
rdata$r	SEGMENT
??_R4VuTimingMessage@@6B@ DD 00H			; VuTimingMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuTimingMessage@@@8
	DD	FLAT:??_R3VuTimingMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuMessage@@8 DD FLAT:??_R0?AVVuMessage@@@8 ; VuMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2VuMessage@@8
rdata$r	SEGMENT
??_R2VuMessage@@8 DD FLAT:??_R1A@?0A@EA@VuMessage@@8	; VuMessage::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuMessage@@8
rdata$r	SEGMENT
??_R3VuMessage@@8 DD 00H				; VuMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuMessage@@@8
_DATA	SEGMENT
??_R0?AVVuMessage@@@8 DD FLAT:??_7type_info@@6B@	; VuMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuMessage@@6B@
rdata$r	SEGMENT
??_R4VuMessage@@6B@ DD 00H				; VuMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuMessage@@@8
	DD	FLAT:??_R3VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidBufferException@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidBufferException@@8 DD FLAT:??_R0?AVInvalidBufferException@@@8 ; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidBufferException@@8
rdata$r	SEGMENT
??_R2InvalidBufferException@@8 DD FLAT:??_R1A@?0A@EA@InvalidBufferException@@8 ; InvalidBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@out_of_range@std@@8
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidBufferException@@8
rdata$r	SEGMENT
??_R3InvalidBufferException@@8 DD 00H			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidBufferException@@6B@
rdata$r	SEGMENT
??_R4InvalidBufferException@@6B@ DD 00H			; InvalidBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LNKKMGKK@bad?5session?$AA@
CONST	SEGMENT
??_C@_0M@LNKKMGKK@bad?5session?$AA@ DB 'bad session', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7VuUnknownMessage@@6B@
CONST	SEGMENT
??_7VuUnknownMessage@@6B@ DD FLAT:??_R4VuUnknownMessage@@6B@ ; VuUnknownMessage::`vftable'
	DD	FLAT:??_EVuUnknownMessage@@UAEPAXI@Z
	DD	FLAT:?Size@VuUnknownMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuUnknownMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuUnknownMessage@@MAEHE@Z
	DD	FLAT:?Encode@VuUnknownMessage@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuUnknownMessage@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuTimingMessage@@6B@
CONST	SEGMENT
??_7VuTimingMessage@@6B@ DD FLAT:??_R4VuTimingMessage@@6B@ ; VuTimingMessage::`vftable'
	DD	FLAT:??_EVuTimingMessage@@UAEPAXI@Z
	DD	FLAT:?Size@VuTimingMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuTimingMessage@@MAEHE@Z
	DD	FLAT:?Encode@VuTimingMessage@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuTimingMessage@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuShutdownEvent@@6B@
CONST	SEGMENT
??_7VuShutdownEvent@@6B@ DD FLAT:??_R4VuShutdownEvent@@6B@ ; VuShutdownEvent::`vftable'
	DD	FLAT:??_EVuShutdownEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuShutdownEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuShutdownEvent@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuShutdownEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuShutdownEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuShutdownEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuTimerEvent@@6B@
CONST	SEGMENT
??_7VuTimerEvent@@6B@ DD FLAT:??_R4VuTimerEvent@@6B@	; VuTimerEvent::`vftable'
	DD	FLAT:??_EVuTimerEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuTimerEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuTimerEvent@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuTimerEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuTimerEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuTimerEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuSessionEvent@@6B@
CONST	SEGMENT
??_7VuSessionEvent@@6B@ DD FLAT:??_R4VuSessionEvent@@6B@ ; VuSessionEvent::`vftable'
	DD	FLAT:??_EVuSessionEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuSessionEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuSessionEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuSessionEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuSessionEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuGroundCollisionEvent@@6B@
CONST	SEGMENT
??_7VuGroundCollisionEvent@@6B@ DD FLAT:??_R4VuGroundCollisionEvent@@6B@ ; VuGroundCollisionEvent::`vftable'
	DD	FLAT:??_EVuGroundCollisionEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuGroundCollisionEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuEntityCollisionEvent@@6B@
CONST	SEGMENT
??_7VuEntityCollisionEvent@@6B@ DD FLAT:??_R4VuEntityCollisionEvent@@6B@ ; VuEntityCollisionEvent::`vftable'
	DD	FLAT:??_EVuEntityCollisionEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuEntityCollisionEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuEntityCollisionEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuEntityCollisionEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuEntityCollisionEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuFullUpdateEvent@@6B@
CONST	SEGMENT
??_7VuFullUpdateEvent@@6B@ DD FLAT:??_R4VuFullUpdateEvent@@6B@ ; VuFullUpdateEvent::`vftable'
	DD	FLAT:??_EVuFullUpdateEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuCreateEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuCreateEvent@@UAEEXZ
	DD	FLAT:?Activate@VuFullUpdateEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuCreateEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuCreateEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuCreateEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuBroadcastGlobalEvent@@6B@
CONST	SEGMENT
??_7VuBroadcastGlobalEvent@@6B@ DD FLAT:??_R4VuBroadcastGlobalEvent@@6B@ ; VuBroadcastGlobalEvent::`vftable'
	DD	FLAT:??_EVuBroadcastGlobalEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuBroadcastGlobalEvent@@MBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuBroadcastGlobalEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuBroadcastGlobalEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuBroadcastGlobalEvent@@MAEHPAPAE@Z
	DD	FLAT:?Decode@VuBroadcastGlobalEvent@@MAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuPositionUpdateEvent@@6B@
CONST	SEGMENT
??_7VuPositionUpdateEvent@@6B@ DD FLAT:??_R4VuPositionUpdateEvent@@6B@ ; VuPositionUpdateEvent::`vftable'
	DD	FLAT:??_EVuPositionUpdateEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuPositionUpdateEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuPositionUpdateEvent@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuPositionUpdateEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuPositionUpdateEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuPositionUpdateEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuTransferEvent@@6B@
CONST	SEGMENT
??_7VuTransferEvent@@6B@ DD FLAT:??_R4VuTransferEvent@@6B@ ; VuTransferEvent::`vftable'
	DD	FLAT:??_EVuTransferEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuTransferEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuTransferEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuTransferEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuTransferEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuTransferEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuDeleteEvent@@6B@
CONST	SEGMENT
??_7VuDeleteEvent@@6B@ DD FLAT:??_R4VuDeleteEvent@@6B@	; VuDeleteEvent::`vftable'
	DD	FLAT:??_EVuDeleteEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuDeleteEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuDeleteEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuManageEvent@@6B@
CONST	SEGMENT
??_7VuManageEvent@@6B@ DD FLAT:??_R4VuManageEvent@@6B@	; VuManageEvent::`vftable'
	DD	FLAT:??_EVuManageEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuCreateEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuCreateEvent@@UAEEXZ
	DD	FLAT:?Activate@VuCreateEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuCreateEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuCreateEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuCreateEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuCreateEvent@@6B@
CONST	SEGMENT
??_7VuCreateEvent@@6B@ DD FLAT:??_R4VuCreateEvent@@6B@	; VuCreateEvent::`vftable'
	DD	FLAT:??_EVuCreateEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuCreateEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuCreateEvent@@UAEEXZ
	DD	FLAT:?Activate@VuCreateEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuCreateEvent@@MAEHE@Z
	DD	FLAT:?Encode@VuCreateEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuCreateEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuEvent@@6B@
CONST	SEGMENT
??_7VuEvent@@6B@ DD FLAT:??_R4VuEvent@@6B@		; VuEvent::`vftable'
	DD	FLAT:??_EVuEvent@@UAEPAXI@Z
	DD	FLAT:?Size@VuEvent@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?Encode@VuEvent@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuEvent@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuPullRequest@@6B@
CONST	SEGMENT
??_7VuPullRequest@@6B@ DD FLAT:??_R4VuPullRequest@@6B@	; VuPullRequest::`vftable'
	DD	FLAT:??_EVuPullRequest@@UAEPAXI@Z
	DD	FLAT:?Size@VuMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuPullRequest@@MAEHE@Z
	DD	FLAT:?Encode@VuMessage@@MAEHPAPAE@Z
	DD	FLAT:?Decode@VuMessage@@MAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuPushRequest@@6B@
CONST	SEGMENT
??_7VuPushRequest@@6B@ DD FLAT:??_R4VuPushRequest@@6B@	; VuPushRequest::`vftable'
	DD	FLAT:??_EVuPushRequest@@UAEPAXI@Z
	DD	FLAT:?Size@VuMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuPushRequest@@MAEHE@Z
	DD	FLAT:?Encode@VuMessage@@MAEHPAPAE@Z
	DD	FLAT:?Decode@VuMessage@@MAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuGetRequest@@6B@
CONST	SEGMENT
??_7VuGetRequest@@6B@ DD FLAT:??_R4VuGetRequest@@6B@	; VuGetRequest::`vftable'
	DD	FLAT:??_EVuGetRequest@@UAEPAXI@Z
	DD	FLAT:?Size@VuMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuGetRequest@@MAEHE@Z
	DD	FLAT:?Encode@VuMessage@@MAEHPAPAE@Z
	DD	FLAT:?Decode@VuMessage@@MAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuRequestMessage@@6B@
CONST	SEGMENT
??_7VuRequestMessage@@6B@ DD FLAT:??_R4VuRequestMessage@@6B@ ; VuRequestMessage::`vftable'
	DD	FLAT:??_EVuRequestMessage@@UAEPAXI@Z
	DD	FLAT:?Size@VuMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?Encode@VuMessage@@MAEHPAPAE@Z
	DD	FLAT:?Decode@VuMessage@@MAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuErrorMessage@@6B@
CONST	SEGMENT
??_7VuErrorMessage@@6B@ DD FLAT:??_R4VuErrorMessage@@6B@ ; VuErrorMessage::`vftable'
	DD	FLAT:??_EVuErrorMessage@@UAEPAXI@Z
	DD	FLAT:?Size@VuErrorMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuErrorMessage@@MAEHE@Z
	DD	FLAT:?Encode@VuErrorMessage@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuErrorMessage@@UAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT ??_7VuRequestDummyBlockMessage@@6B@
CONST	SEGMENT
??_7VuRequestDummyBlockMessage@@6B@ DD FLAT:??_R4VuRequestDummyBlockMessage@@6B@ ; VuRequestDummyBlockMessage::`vftable'
	DD	FLAT:??_EVuRequestDummyBlockMessage@@UAEPAXI@Z
	DD	FLAT:?Size@VuRequestDummyBlockMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@VuRequestDummyBlockMessage@@UAEHE@Z
	DD	FLAT:?Encode@VuRequestDummyBlockMessage@@UAEHPAPAE@Z
	DD	FLAT:?Decode@VuRequestDummyBlockMessage@@UAEHPAPAEPAJ@Z
	DD	FLAT:?LocalSize@VuRequestDummyBlockMessage@@EBEHXZ
CONST	ENDS
;	COMDAT ??_7VuMessage@@6B@
CONST	SEGMENT
??_7VuMessage@@6B@ DD FLAT:??_R4VuMessage@@6B@		; VuMessage::`vftable'
	DD	FLAT:??_EVuMessage@@UAEPAXI@Z
	DD	FLAT:?Size@VuMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@VuMessage@@MAEHPAVVuEntity@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?Encode@VuMessage@@MAEHPAPAE@Z
	DD	FLAT:?Decode@VuMessage@@MAEHPAPAEPAJ@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0InvalidBufferException@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT
??_R0?AVInvalidBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; InvalidBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT
__CTA4?AVInvalidBufferException@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT
__TI4?AVInvalidBufferException@@ DD 00H
	DD	FLAT:??1InvalidBufferException@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidBufferException@@
xdata$x	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT
??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ DB 'Tryi'
	DB	'ng to write %lu bytes to %ld buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT
??_7InvalidBufferException@@6B@ DD FLAT:??_R4InvalidBufferException@@6B@ ; InvalidBufferException::`vftable'
	DD	FLAT:??_EInvalidBufferException@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z$0
__unwindtable$??1VuTimerEvent@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuTimerEvent@@UAE@XZ$0
__unwindtable$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z$0
__unwindtable$??0VuSessionEvent@@QAE@VVU_ID@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuSessionEvent@@QAE@VVU_ID@@0@Z$0
__unwindtable$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z$0
__unwindtable$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z$0
__unwindtable$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z$0
__unwindtable$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0
__unwindtable$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z$0
__unwindtable$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0
__unwindtable$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0
__unwindtable$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0
__unwindtable$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z$0
__unwindtable$?Process@VuCreateEvent@@MAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuCreateEvent@@MAEHE@Z$0
__unwindtable$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z$0
__unwindtable$??1VuCreateEvent@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuCreateEvent@@UAE@XZ$0
__unwindtable$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z$0
__unwindtable$?Process@VuPullRequest@@MAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuPullRequest@@MAEHE@Z$0
__unwindtable$?Process@VuPushRequest@@MAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuPushRequest@@MAEHE@Z$0
__unwindtable$??0VuErrorMessage@@QAE@VVU_ID@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuErrorMessage@@QAE@VVU_ID@@0@Z$0
__unwindtable$?Process@VuRequestDummyBlockMessage@@UAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuRequestDummyBlockMessage@@UAEHE@Z$0
__unwindtable$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z$0
__unwindtable$??0VuMessage@@IAE@EVVU_ID@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuMessage@@IAE@EVVU_ID@@0@Z$0
__unwindtable$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z$1
__unwindtable$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$1
__unwindtable$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z$1
__unwindtable$??1VuMessage@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuMessage@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1VuMessage@@UAE@XZ$1
__unwindtable$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z$2
__unwindtable$?Process@VuBroadcastGlobalEvent@@MAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuBroadcastGlobalEvent@@MAEHE@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuBroadcastGlobalEvent@@MAEHE@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuBroadcastGlobalEvent@@MAEHE@Z$2
__ehfuncinfo$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuTimerEvent@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VuTimerEvent@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuSessionEvent@@QAE@VVU_ID@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuSessionEvent@@QAE@VVU_ID@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@VuBroadcastGlobalEvent@@MAEHE@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Process@VuBroadcastGlobalEvent@@MAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@VuCreateEvent@@MAEHE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Process@VuCreateEvent@@MAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuCreateEvent@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VuCreateEvent@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@VuPullRequest@@MAEHE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Process@VuPullRequest@@MAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@VuPushRequest@@MAEHE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Process@VuPushRequest@@MAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@VuGetRequest@@MAEHE@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?Process@VuGetRequest@@MAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuErrorMessage@@QAE@VVU_ID@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuErrorMessage@@QAE@VVU_ID@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@VuRequestDummyBlockMessage@@UAEHE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Process@VuRequestDummyBlockMessage@@UAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuMessage@@IAE@EVVU_ID@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuMessage@@IAE@EVVU_ID@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuMessage@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1VuMessage@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Process@VuGetRequest@@MAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$9
	DD	08H
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0
__ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z PROC ; operator!=<VuEntity>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z ENDP ; operator!=<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z PROC ; operator!=<VuSessionEntity>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ENDP ; operator!=<VuSessionEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z PROC ; operator==<VuSessionEntity>, COMDAT

; 72   : template <class E> bool operator==(const void* le, const VuBin<E> &re){ return ((void*)re.get()) == le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ENDP ; operator==<VuSessionEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -52						; size = 8
$T2 = -44						; size = 8
$T3 = -36						; size = 8
$T4 = -28						; size = 8
$T5 = -20						; size = 8
$T6 = -12						; size = 8
_retval$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?ResolveWinner@@YAPAVVuEntity@@PAV1@0@Z PROC		; ResolveWinner

; 47   : static VuEntity *ResolveWinner(VuEntity* ent1, VuEntity* ent2){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi

; 48   : 	VuEntity* retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 49   : 
; 50   : 	if (ent1->EntityType()->createPriority_ >
; 51   : 					ent2->EntityType()->createPriority_) {

	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	movzx	esi, WORD PTR [eax+48]
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	movzx	eax, WORD PTR [eax+48]
	cmp	esi, eax
	jle	SHORT $LN10@ResolveWin

; 52   : 		retval = ent1;

	mov	ecx, DWORD PTR _ent1$[ebp]
	mov	DWORD PTR _retval$[ebp], ecx

; 53   : 	} else if (ent1->EntityType()->createPriority_ <

	jmp	$LN9@ResolveWin
$LN10@ResolveWin:

; 54   : 					ent2->EntityType()->createPriority_) {

	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	movzx	esi, WORD PTR [eax+48]
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	movzx	edx, WORD PTR [eax+48]
	cmp	esi, edx
	jge	SHORT $LN8@ResolveWin

; 55   : 		retval = ent2;

	mov	eax, DWORD PTR _ent2$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
	jmp	$LN9@ResolveWin
$LN8@ResolveWin:

; 56   : 	} else if (ent1->OwnerId().creator_ == ent1->Id().creator_) {

	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	add	eax, 4
	push	eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN6@ResolveWin

; 57   : 		retval = ent1;

	mov	eax, DWORD PTR _ent1$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
	jmp	SHORT $LN9@ResolveWin
$LN6@ResolveWin:

; 58   : 	} else if (ent2->OwnerId().creator_ == ent2->Id().creator_) {

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	add	eax, 4
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN4@ResolveWin

; 59   : 		retval = ent2;

	mov	eax, DWORD PTR _ent2$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
	jmp	SHORT $LN9@ResolveWin
$LN4@ResolveWin:

; 60   : 	} else if (ent1->OwnerId().creator_ < ent2->OwnerId().creator_) {

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent2$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent1$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	add	eax, 4
	mov	ecx, eax
	call	??MVU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator<
	test	eax, eax
	je	SHORT $LN2@ResolveWin

; 61   : 		retval = ent1;

	mov	eax, DWORD PTR _ent1$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 62   : 	} else {

	jmp	SHORT $LN9@ResolveWin
$LN2@ResolveWin:

; 63   : 		retval = ent2;

	mov	ecx, DWORD PTR _ent2$[ebp]
	mov	DWORD PTR _retval$[ebp], ecx
$LN9@ResolveWin:

; 64   : 	}
; 65   : 
; 66   : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 67   : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?ResolveWinner@@YAPAVVuEntity@@PAV1@0@Z ENDP		; ResolveWinner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -56						; size = 4
$T3 = -52						; size = 4
$T4 = -48						; size = 4
tv136 = -44						; size = 4
$T5 = -40						; size = 4
tv91 = -36						; size = 4
$T6 = -32						; size = 4
tv78 = -28						; size = 4
$T7 = -24						; size = 4
tv65 = -20						; size = 4
_retval$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 2
_data$ = 12						; size = 4
_rem$ = 16						; size = 4
?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z PROC		; VuCreateEntity

; 25   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	VuEntity* retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 27   : 
; 28   : 	switch (type) {

	movzx	eax, WORD PTR _type$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 4
	ja	$LN5@VuCreateEn
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN19@VuCreateEn[edx*4]
$LN4@VuCreateEn:

; 29   : 			case VU_SESSION_ENTITY_TYPE:
; 30   : 					retval = new VuSessionEntity(&data, &rem);

	push	416					; 000001a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN9@VuCreateEn
	lea	eax, DWORD PTR _rem$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0VuSessionEntity@@QAE@PAPAEPAJ@Z	; VuSessionEntity::VuSessionEntity
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN10@VuCreateEn
$LN9@VuCreateEn:
	mov	DWORD PTR tv78[ebp], 0
$LN10@VuCreateEn:
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 31   : 					break;

	jmp	$LN5@VuCreateEn
$LN3@VuCreateEn:

; 32   : 			case VU_GROUP_ENTITY_TYPE:
; 33   : 					retval = new VuGroupEntity(&data, &rem);

	push	344					; 00000158H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN11@VuCreateEn
	lea	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0VuGroupEntity@@QAE@PAPAEPAJ@Z	; VuGroupEntity::VuGroupEntity
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN12@VuCreateEn
$LN11@VuCreateEn:
	mov	DWORD PTR tv91[ebp], 0
$LN12@VuCreateEn:
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _retval$[ebp], ecx

; 34   : 					break;

	jmp	SHORT $LN5@VuCreateEn
$LN2@VuCreateEn:

; 35   : 			case VU_GAME_ENTITY_TYPE:
; 36   : 					retval = new VuGameEntity(&data, &rem);

	push	352					; 00000160H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN13@VuCreateEn
	lea	edx, DWORD PTR _rem$[ebp]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0VuGameEntity@@QAE@PAPAEPAJ@Z		; VuGameEntity::VuGameEntity
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN14@VuCreateEn
$LN13@VuCreateEn:
	mov	DWORD PTR tv136[ebp], 0
$LN14@VuCreateEn:
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _retval$[ebp], edx

; 37   : 					break;

	jmp	SHORT $LN5@VuCreateEn
$LN1@VuCreateEn:

; 38   : 			case VU_GLOBAL_GROUP_ENTITY_TYPE:
; 39   : 			case VU_PLAYER_POOL_GROUP_ENTITY_TYPE:
; 40   : 					retval = 0;

	mov	DWORD PTR _retval$[ebp], 0
$LN5@VuCreateEn:

; 41   : 					break;
; 42   : 	}
; 43   : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 44   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN19@VuCreateEn:
	DD	$LN4@VuCreateEn
	DD	$LN3@VuCreateEn
	DD	$LN1@VuCreateEn
	DD	$LN2@VuCreateEn
	DD	$LN1@VuCreateEn
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z$0:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z$1:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z$2:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z ENDP		; VuCreateEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GroupName@VuGroupEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GroupName@VuGroupEntity@@QAEPADXZ PROC			; VuGroupEntity::GroupName, COMDAT
; _this$ = ecx

; 339  : 	char *GroupName()     { return groupName_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+328]
	mov	esp, ebp
	pop	ebp
	ret	0
?GroupName@VuGroupEntity@@QAEPADXZ ENDP			; VuGroupEntity::GroupName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SetLatency@VuSessionEntity@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_latency$ = 8						; size = 4
?SetLatency@VuSessionEntity@@QAEXH@Z PROC		; VuSessionEntity::SetLatency, COMDAT
; _this$ = ecx

; 206  : 	void SetLatency(int latency) { latency_ = latency; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _latency$[ebp]
	mov	DWORD PTR [eax+372], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLatency@VuSessionEntity@@QAEXH@Z ENDP		; VuSessionEntity::SetLatency
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?Latency@VuSessionEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Latency@VuSessionEntity@@QAEHXZ PROC			; VuSessionEntity::Latency, COMDAT
; _this$ = ecx

; 205  : 	int Latency()		{ return latency_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+372]
	mov	esp, ebp
	pop	ebp
	ret	0
?Latency@VuSessionEntity@@QAEHXZ ENDP			; VuSessionEntity::Latency
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SetTimeDelta@VuSessionEntity@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_delta$ = 8						; size = 4
?SetTimeDelta@VuSessionEntity@@QAEXH@Z PROC		; VuSessionEntity::SetTimeDelta, COMDAT
; _this$ = ecx

; 204  : 	void SetTimeDelta(int delta) { timeDelta_ = delta; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _delta$[ebp]
	mov	DWORD PTR [eax+368], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTimeDelta@VuSessionEntity@@QAEXH@Z ENDP		; VuSessionEntity::SetTimeDelta
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?SetAddress@VuSessionEntity@@QAEXVVU_ADDRESS@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_add$ = 8						; size = 8
?SetAddress@VuSessionEntity@@QAEXVVU_ADDRESS@@@Z PROC	; VuSessionEntity::SetAddress, COMDAT
; _this$ = ecx

; 190  : 	void SetAddress(VU_ADDRESS add){address_ = add;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _add$[ebp]
	mov	DWORD PTR [eax+332], ecx
	mov	edx, DWORD PTR _add$[ebp+4]
	mov	DWORD PTR [eax+336], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetAddress@VuSessionEntity@@QAEXVVU_ADDRESS@@@Z ENDP	; VuSessionEntity::SetAddress
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?Callsign@VuSessionEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@VuSessionEntity@@QAEPADXZ PROC		; VuSessionEntity::Callsign, COMDAT
; _this$ = ecx

; 180  : 	char *Callsign()		{ return callsign_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+344]
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@VuSessionEntity@@QAEPADXZ ENDP		; VuSessionEntity::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ PROC	; VuSessionEntity::GetAddress, COMDAT
; _this$ = ecx

; 179  : 	VU_ADDRESS GetAddress()   { return address_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	mov	edx, DWORD PTR [eax+336]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ ENDP	; VuSessionEntity::GetAddress
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ PROC ; VuTargetEntity::GetCommsHandle, COMDAT
; _this$ = ecx

; 109  : 	ComAPIHandle GetCommsHandle() { return bestEffortComms_.handle_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ENDP ; VuTargetEntity::GetCommsHandle
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuUnknownMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuUnknownMessage@@UAEPAXI@Z PROC			; VuUnknownMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuUnknownMessage@@UAE@XZ		; VuUnknownMessage::~VuUnknownMessage
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuUnknownMessage@@UAEPAXI@Z ENDP			; VuUnknownMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuUnknownMessage@@MAEHE@Z PROC			; VuUnknownMessage::Process
; _this$ = ecx

; 1982 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1983 : 	return VU_NO_OP;

	xor	eax, eax

; 1984 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuUnknownMessage@@MAEHE@Z ENDP			; VuUnknownMessage::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoSend@VuUnknownMessage@@UAEEXZ PROC			; VuUnknownMessage::DoSend
; _this$ = ecx

; 1958 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1959 : 	return FALSE;

	xor	al, al

; 1960 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoSend@VuUnknownMessage@@UAEEXZ ENDP			; VuUnknownMessage::DoSend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Encode@VuUnknownMessage@@UAEHPAPAE@Z PROC		; VuUnknownMessage::Encode
; _this$ = ecx

; 1975 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1976 : 	// Not a net event, so just return
; 1977 : 	return 0;

	xor	eax, eax

; 1978 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuUnknownMessage@@UAEHPAPAE@Z ENDP		; VuUnknownMessage::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?Decode@VuUnknownMessage@@UAEHPAPAEPAJ@Z PROC		; VuUnknownMessage::Decode
; _this$ = ecx

; 1968 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1969 : 	// not a net event, so just return
; 1970 : 	return 0;

	xor	eax, eax

; 1971 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuUnknownMessage@@UAEHPAPAEPAJ@Z ENDP		; VuUnknownMessage::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuUnknownMessage@@UBEHXZ PROC			; VuUnknownMessage::Size
; _this$ = ecx

; 1963 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1964 : 	return 0;

	xor	eax, eax

; 1965 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuUnknownMessage@@UBEHXZ ENDP			; VuUnknownMessage::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuUnknownMessage@@UAE@XZ PROC			; VuUnknownMessage::~VuUnknownMessage
; _this$ = ecx

; 1952 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuUnknownMessage@@6B@

; 1953 : 	// empty
; 1954 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuUnknownMessage@@UAE@XZ ENDP			; VuUnknownMessage::~VuUnknownMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuUnknownMessage@@QAE@XZ PROC			; VuUnknownMessage::VuUnknownMessage
; _this$ = ecx

; 1947 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuUnknownMessage@@6B@

; 1948 : 	// empty
; 1949 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuUnknownMessage@@QAE@XZ ENDP			; VuUnknownMessage::VuUnknownMessage
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuTimingMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuTimingMessage@@UAEPAXI@Z PROC			; VuTimingMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuTimingMessage@@UAE@XZ		; VuTimingMessage::~VuTimingMessage
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuTimingMessage@@UAEPAXI@Z ENDP			; VuTimingMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuTimingMessage@@MAEHE@Z PROC			; VuTimingMessage::Process
; _this$ = ecx

; 1938 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1939 : 	return VU_NO_OP;

	xor	eax, eax

; 1940 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuTimingMessage@@MAEHE@Z ENDP			; VuTimingMessage::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_start$ = -8						; size = 4
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuTimingMessage@@UAEHPAPAE@Z PROC		; VuTimingMessage::Encode
; _this$ = ecx

; 1925 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1926 : 	VU_BYTE *start = *buf;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _start$[ebp], ecx

; 1927 : 
; 1928 : 	VuMessage::Encode(buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuMessage@@MAEHPAPAE@Z		; VuMessage::Encode

; 1929 : 
; 1930 : 	memcpy(*buf, &sessionRealSendTime_, sizeof(VU_TIME));  *buf += sizeof(VU_TIME);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1931 : 	memcpy(*buf, &sessionGameSendTime_, sizeof(VU_TIME));  *buf += sizeof(VU_TIME);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1932 : 	memcpy(*buf, &remoteGameTime_,      sizeof(VU_TIME));  *buf += sizeof(VU_TIME);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1933 : 
; 1934 : 	return (int)(*buf-start);

	mov	eax, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _start$[ebp]

; 1935 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuTimingMessage@@UAEHPAPAE@Z ENDP		; VuTimingMessage::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -48						; size = 8
tv203 = -40						; size = 8
_start$ = -32						; size = 4
_delta2$2 = -28						; size = 4
_delta1$3 = -24						; size = 4
_deltal$4 = -20						; size = 4
_compression$5 = -16					; size = 4
tv200 = -12						; size = 4
_session$ = -8						; size = 4
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuTimingMessage@@UAEHPAPAEPAJ@Z PROC		; VuTimingMessage::Decode
; _this$ = ecx

; 1889 : int VuTimingMessage::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1890 : 	VU_BYTE	*start = *buf;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _start$[ebp], ecx

; 1891 : 	VuSessionEntity	*session;
; 1892 : 
; 1893 : 	VuMessage::Decode(buf,rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuMessage@@MAEHPAPAEPAJ@Z	; VuMessage::Decode

; 1894 : 
; 1895 : 	memcpychk(&sessionRealSendTime_, buf, sizeof(VU_TIME), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1896 : 	memcpychk(&sessionGameSendTime_, buf, sizeof(VU_TIME), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1897 : 	memcpychk(&remoteGameTime_,      buf, sizeof(VU_TIME), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1898 : 
; 1899 : 	session = (VuSessionEntity*) vuDatabase->Find(EntityId());

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _session$[ebp], eax

; 1900 : 
; 1901 : 	if (session) {

	cmp	DWORD PTR _session$[ebp], 0
	je	$LN2@Decode

; 1902 : 		float	compression = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _compression$5[ebp], xmm0

; 1903 : 		int		deltal,delta1,delta2;
; 1904 : 		// Apply the new latency
; 1905 : 		session->SetLatency((vuxRealTime - sessionRealSendTime_)/2);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	sub	edx, DWORD PTR [ecx+44]
	shr	edx, 1
	push	edx
	mov	ecx, DWORD PTR _session$[ebp]
	call	?SetLatency@VuSessionEntity@@QAEXH@Z	; VuSessionEntity::SetLatency

; 1906 : 		// Determine game delta - KCK: This is overly complex for now, as I wanted to
; 1907 : 		// check some assumptions.
; 1908 : 		// Determine time compression
; 1909 : 		if (vuxRealTime - sessionRealSendTime_)	{

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	sub	ecx, DWORD PTR [eax+44]
	je	SHORT $LN1@Decode

; 1910 : 			compression = static_cast<float>((vuxGameTime - sessionGameSendTime_) / (vuxRealTime - sessionRealSendTime_)); 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	sub	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	sub	esi, DWORD PTR [ecx+44]
	xor	edx, edx
	div	esi
	mov	DWORD PTR tv200[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv200[ebp]
	mov	edx, DWORD PTR tv200[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv203[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv203[ebp]
	movss	DWORD PTR _compression$5[ebp], xmm0
$LN1@Decode:

; 1911 : 		}
; 1912 : 		// Determine time deltas due to latency
; 1913 : 		deltal = FTOL(-1.0F * session->Latency() * compression);

	mov	ecx, DWORD PTR _session$[ebp]
	call	?Latency@VuSessionEntity@@QAEHXZ	; VuSessionEntity::Latency
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@bf800000
	mulss	xmm0, DWORD PTR _compression$5[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _deltal$4[ebp], eax

; 1914 : 		// Add time deltas due to time differences
; 1915 : 		delta1 = (vuxGameTime - remoteGameTime_) - deltal;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	sub	ecx, DWORD PTR [eax+52]
	sub	ecx, DWORD PTR _deltal$4[ebp]
	mov	DWORD PTR _delta1$3[ebp], ecx

; 1916 : 		delta2 = -1 * ((remoteGameTime_ - sessionGameSendTime_) - deltal);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+52]
	sub	ecx, DWORD PTR [eax+48]
	sub	ecx, DWORD PTR _deltal$4[ebp]
	imul	ecx, -1
	mov	DWORD PTR _delta2$2[ebp], ecx

; 1917 : 		// Apply the new time delta - average the two delta we have
; 1918 : 		session->SetTimeDelta((delta1+delta2)/2);

	mov	eax, DWORD PTR _delta1$3[ebp]
	add	eax, DWORD PTR _delta2$2[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	mov	ecx, DWORD PTR _session$[ebp]
	call	?SetTimeDelta@VuSessionEntity@@QAEXH@Z	; VuSessionEntity::SetTimeDelta
$LN2@Decode:

; 1919 : 	}
; 1920 : 
; 1921 : 	return (int)(*buf-start);

	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR _start$[ebp]

; 1922 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuTimingMessage@@UAEHPAPAEPAJ@Z ENDP		; VuTimingMessage::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuTimingMessage@@UBEHXZ PROC			; VuTimingMessage::Size
; _this$ = ecx

; 1885 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1886 : 	return VuMessage::Size() + sizeof(VU_TIME) + sizeof(VU_TIME) + sizeof(VU_TIME);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@VuMessage@@UBEHXZ			; VuMessage::Size
	add	eax, 12					; 0000000cH

; 1887 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuTimingMessage@@UBEHXZ ENDP			; VuTimingMessage::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuTimingMessage@@UAE@XZ PROC				; VuTimingMessage::~VuTimingMessage
; _this$ = ecx

; 1879 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTimingMessage@@6B@

; 1880 : 	// empty
; 1881 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuTimingMessage@@UAE@XZ ENDP				; VuTimingMessage::~VuTimingMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuTimingMessage@@QAE@VVU_ID@@0@Z PROC		; VuTimingMessage::VuTimingMessage
; _this$ = ecx

; 1875 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@0@Z		; VuMessage::VuMessage
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuTimingMessage@@6B@

; 1876 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuTimingMessage@@QAE@VVU_ID@@0@Z ENDP		; VuTimingMessage::VuTimingMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entityId$ = 8						; size = 8
_target$ = 16						; size = 4
___formal$ = 20						; size = 1
??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z PROC ; VuTimingMessage::VuTimingMessage
; _this$ = ecx

; 1867 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp]
	push	edx
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTimingMessage@@6B@

; 1868 : 	// empty
; 1869 : 	RequestOutOfBandTransmit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 1870 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
__ehhandler$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuTimingMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ENDP ; VuTimingMessage::VuTimingMessage
; Function compile flags: /Odtp
;	COMDAT ??_GVuShutdownEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuShutdownEvent@@UAEPAXI@Z PROC			; VuShutdownEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuShutdownEvent@@UAE@XZ		; VuShutdownEvent::~VuShutdownEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuShutdownEvent@@UAEPAXI@Z ENDP			; VuShutdownEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuShutdownEvent@@MAEHE@Z PROC			; VuShutdownEvent::Process
; _this$ = ecx

; 1854 : VU_ERRCODE VuShutdownEvent::Process(VU_BOOL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1855 : 	if (!done_) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+49]
	test	ecx, ecx
	jne	SHORT $LN1@Process

; 1856 : 		vuCollectionManager->Shutdown(shutdownAll_);

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR ?vuCollectionManager@@3PAVVuCollectionManager@@A ; vuCollectionManager
	call	?Shutdown@VuCollectionManager@@QAEXE@Z	; VuCollectionManager::Shutdown

; 1857 : 		done_ = TRUE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+49], 1

; 1858 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1859 : 	}
; 1860 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1861 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuShutdownEvent@@MAEHE@Z ENDP			; VuShutdownEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoSend@VuShutdownEvent@@UAEEXZ PROC			; VuShutdownEvent::DoSend
; _this$ = ecx

; 1836 : VU_BOOL VuShutdownEvent::DoSend(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1837 : 	return FALSE;

	xor	al, al

; 1838 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoSend@VuShutdownEvent@@UAEEXZ ENDP			; VuShutdownEvent::DoSend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Encode@VuShutdownEvent@@UAEHPAPAE@Z PROC		; VuShutdownEvent::Encode
; _this$ = ecx

; 1849 : int VuShutdownEvent::Encode(VU_BYTE **){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1850 : 	// not a net event, so just return
; 1851 : 	return 0;

	xor	eax, eax

; 1852 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuShutdownEvent@@UAEHPAPAE@Z ENDP		; VuShutdownEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?Decode@VuShutdownEvent@@UAEHPAPAEPAJ@Z PROC		; VuShutdownEvent::Decode
; _this$ = ecx

; 1844 : int VuShutdownEvent::Decode(VU_BYTE **, long *){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1845 : 	// not a net event, so just return
; 1846 : 	return 0;

	xor	eax, eax

; 1847 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuShutdownEvent@@UAEHPAPAEPAJ@Z ENDP		; VuShutdownEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuShutdownEvent@@UBEHXZ PROC			; VuShutdownEvent::Size
; _this$ = ecx

; 1840 : int VuShutdownEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1841 : 	return 0;

	xor	eax, eax

; 1842 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuShutdownEvent@@UBEHXZ ENDP			; VuShutdownEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuShutdownEvent@@UAE@XZ PROC				; VuShutdownEvent::~VuShutdownEvent
; _this$ = ecx

; 1831 : VuShutdownEvent::~VuShutdownEvent(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuShutdownEvent@@6B@

; 1832 : 	// sfr: no more antidb
; 1833 : 	// vuAntiDB->Purge();
; 1834 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuShutdownEvent@@UAE@XZ ENDP				; VuShutdownEvent::~VuShutdownEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_all$ = 8						; size = 1
??0VuShutdownEvent@@QAE@E@Z PROC			; VuShutdownEvent::VuShutdownEvent
; _this$ = ecx

; 1827 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A
	push	ecx
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuShutdownEvent@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _all$[ebp]
	mov	BYTE PTR [eax+48], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+49], 0

; 1828 : 	// empty
; 1829 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VuShutdownEvent@@QAE@E@Z ENDP			; VuShutdownEvent::VuShutdownEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuTimerEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuTimerEvent@@UAEPAXI@Z PROC			; VuTimerEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuTimerEvent@@UAE@XZ			; VuTimerEvent::~VuTimerEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuTimerEvent@@UAEPAXI@Z ENDP			; VuTimerEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
tv148 = -12						; size = 4
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuTimerEvent@@MAEHE@Z PROC			; VuTimerEvent::Process
; _this$ = ecx

; 1787 : VU_ERRCODE VuTimerEvent::Process(VU_BOOL){

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1788 : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 1789 : 
; 1790 : 	if (event_) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN7@Process

; 1791 : 		// MD -- 20050201: messages that come here from VmMessageQueue::PostVuMessage() really
; 1792 : 		// ought to go back there since there is some real processing done there (like the Activate() in
; 1793 : 		// particular...if you bypass that Activate() you end up sending a create message to the client
; 1794 : 		// systems that has a zero length stream...happens a lot with chaff, flares and ejected pilots
; 1795 : 		// it seems -- manifests as all clients CTD at once in busy times like over the FLOT.  Usually
; 1796 : 		// blows up in the SimMover::SimMover(VU_BYTE **stream) constructor or somewhere in that chain.
; 1797 : 		if (timertype_ == VU_POSTVUMSGBW_TIMER){

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+52]
	cmp	edx, 2
	jne	SHORT $LN6@Process

; 1798 : 			VuMessageQueue::PostVuMessage(event_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
	jmp	SHORT $LN5@Process
$LN6@Process:

; 1799 : 		}
; 1800 : 		else if ((event_->Target()) && (event_->Target() != vuLocalSessionEntity)){

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ ; VuMessage::Target
	test	eax, eax
	je	SHORT $LN4@Process
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ ; VuMessage::Target
	push	eax
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Process

; 1801 : 			//me123 from Target() to event_->Target()
; 1802 : 			retval = event_->Send();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Send@VuMessage@@IAEHXZ			; VuMessage::Send
	mov	DWORD PTR _retval$[ebp], eax

; 1803 : 		}
; 1804 : 		else {

	jmp	SHORT $LN5@Process
$LN4@Process:

; 1805 : 			retval = event_->Dispatch(FALSE);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Dispatch@VuMessage@@IAEHE@Z		; VuMessage::Dispatch
	mov	DWORD PTR _retval$[ebp], eax
$LN5@Process:

; 1806 : 		}
; 1807 : 		//VuMessageQueue::PostVuMessage(event_);
; 1808 : 		// sfr: removing unref here, since message may not be processed for some reason
; 1809 : 		// unref in destructor
; 1810 : 		//event_->UnRef();
; 1811 : 		retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN7@Process:

; 1812 : 	}
; 1813 : 
; 1814 : 	if (EntityId() != vuNullId) {

	push	OFFSET ?vuNullId@@3VVU_ID@@A		; vuNullId
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Process

; 1815 : 		if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN2@Process

; 1816 : 			Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv148[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax

; 1817 : 			retval++;

	mov	ecx, DWORD PTR _retval$[ebp]
	add	ecx, 1
	mov	DWORD PTR _retval$[ebp], ecx
$LN2@Process:

; 1818 : 		}
; 1819 : 	}
; 1820 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1821 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuTimerEvent@@MAEHE@Z ENDP			; VuTimerEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoSend@VuTimerEvent@@UAEEXZ PROC			; VuTimerEvent::DoSend
; _this$ = ecx

; 1767 : VU_BOOL VuTimerEvent::DoSend(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1768 : 	return FALSE;

	xor	al, al

; 1769 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoSend@VuTimerEvent@@UAEEXZ ENDP			; VuTimerEvent::DoSend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Encode@VuTimerEvent@@UAEHPAPAE@Z PROC			; VuTimerEvent::Encode
; _this$ = ecx

; 1782 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1783 : 	// not a net event, so just return
; 1784 : 	return 0;

	xor	eax, eax

; 1785 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuTimerEvent@@UAEHPAPAE@Z ENDP			; VuTimerEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?Decode@VuTimerEvent@@UAEHPAPAEPAJ@Z PROC		; VuTimerEvent::Decode
; _this$ = ecx

; 1776 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1777 : 	// not a net event, so just return
; 1778 : 	return 0;

	xor	eax, eax

; 1779 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuTimerEvent@@UAEHPAPAEPAJ@Z ENDP		; VuTimerEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuTimerEvent@@UBEHXZ PROC				; VuTimerEvent::Size
; _this$ = ecx

; 1771 : int VuTimerEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1772 : 	return 0;

	xor	eax, eax

; 1773 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuTimerEvent@@UBEHXZ ENDP				; VuTimerEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuTimerEvent@@UAE@XZ PROC				; VuTimerEvent::~VuTimerEvent
; _this$ = ecx

; 1760 : VuTimerEvent::~VuTimerEvent(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuTimerEvent@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTimerEvent@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1761 : 	// sfr: FUCK!! wheres unref?
; 1762 : 	if (event_){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN2@VuTimerEve

; 1763 : 		event_->UnRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?UnRef@VuMessage@@QAEHXZ		; VuMessage::UnRef
$LN2@VuTimerEve:

; 1764 : 	}
; 1765 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuTimerEvent@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??1VuTimerEvent@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuTimerEvent@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuTimerEvent@@UAE@XZ ENDP				; VuTimerEvent::~VuTimerEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -40						; size = 8
$T3 = -32						; size = 8
$T4 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_mark$ = 12						; size = 4
_timertype$ = 16					; size = 2
_event$ = 20						; size = 4
??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z PROC ; VuTimerEvent::VuTimerEvent
; _this$ = ecx

; 1753 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _entity$[ebp], 0
	je	SHORT $LN4@VuTimerEve
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T4[ebp+4], edx
	jmp	SHORT $LN5@VuTimerEve
$LN4@VuTimerEve:
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR $T3[ebp+4], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR $T4[ebp+4], eax
$LN5@VuTimerEve:
	push	1
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR $T4[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTimerEvent@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _mark$[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _timertype$[ebp]
	mov	WORD PTR [eax+52], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _event$[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], 0

; 1754 : 	SetEntity(entity);

	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1755 : 	if (event_) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN2@VuTimerEve

; 1756 : 		event_->Ref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?Ref@VuMessage@@QAEHXZ			; VuMessage::Ref
$LN2@VuTimerEve:

; 1757 : 	}
; 1758 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuTimerEvent@@QAE@PAVVuEntity@@KGPAVVuMessage@@@Z ENDP ; VuTimerEvent::VuTimerEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuSessionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuSessionEvent@@UAEPAXI@Z PROC			; VuSessionEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuSessionEvent@@UAE@XZ		; VuSessionEvent::~VuSessionEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuSessionEvent@@UAEPAXI@Z ENDP			; VuSessionEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?LocalSize@VuSessionEvent@@ABEHXZ PROC			; VuSessionEvent::LocalSize
; _this$ = ecx

; 1675 : int VuSessionEvent::LocalSize() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1676 : 	return sizeof(sender_) +
; 1677 : 		sizeof(entityId_) +
; 1678 : 		sizeof(group_) +
; 1679 : 		sizeof(subtype_) +
; 1680 : 		sizeof(syncState_) +
; 1681 : 		sizeof(gameTime_) +
; 1682 : 		(callsign_ ? strlen(callsign_)+1 : 1)
; 1683 : 	;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	SHORT $LN3@LocalSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN4@LocalSize
$LN3@LocalSize:
	mov	DWORD PTR tv70[ebp], 1
$LN4@LocalSize:
	mov	eax, DWORD PTR tv70[ebp]
	add	eax, 31					; 0000001fH

; 1684 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuSessionEvent@@ABEHXZ ENDP			; VuSessionEvent::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv81 = -12						; size = 4
_e$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuSessionEvent@@MAEHE@Z PROC			; VuSessionEvent::Process
; _this$ = ecx

; 1737 : VU_ERRCODE VuSessionEvent::Process(VU_BOOL){

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 	VuEntity *e = Entity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR _e$[ebp], eax

; 1739 : 	if (e && e->VuState() == VU_MEM_ACTIVE) {

	cmp	DWORD PTR _e$[ebp], 0
	je	SHORT $LN1@Process
	mov	ecx, DWORD PTR _e$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN1@Process

; 1740 : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv81[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax

; 1741 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1742 : 	}
; 1743 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1744 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuSessionEvent@@MAEHE@Z ENDP			; VuSessionEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_retval$ = -12						; size = 4
_this$ = -8						; size = 4
_len$ = -1						; size = 1
_buf$ = 8						; size = 4
?Encode@VuSessionEvent@@UAEHPAPAE@Z PROC		; VuSessionEvent::Encode
; _this$ = ecx

; 1715 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1716 : 	VU_BYTE len;
; 1717 : 
; 1718 : 	if (callsign_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	SHORT $LN2@Encode

; 1719 : 		len = static_cast<VU_BYTE>(strlen(callsign_));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al

; 1720 : 	else

	jmp	SHORT $LN1@Encode
$LN2@Encode:

; 1721 : 		len = 0;

	mov	BYTE PTR _len$[ebp], 0
$LN1@Encode:

; 1722 : 
; 1723 : 	memcpy(*buf, &sender_,    sizeof(sender_));    *buf += sizeof(sender_);

	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1724 : 	memcpy(*buf, &entityId_,  sizeof(entityId_));  *buf += sizeof(entityId_);

	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1725 : 	memcpy(*buf, &group_,     sizeof(group_));     *buf += sizeof(group_);

	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1726 : 	memcpy(*buf, &subtype_,   sizeof(subtype_));   *buf += sizeof(subtype_);

	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1727 : 	memcpy(*buf, &len,        sizeof(VU_BYTE));    *buf += sizeof(VU_BYTE);

	push	1
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 1728 : 	memcpy(*buf, callsign_,   len);                *buf += len;

	movzx	eax, BYTE PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movzx	edx, BYTE PTR _len$[ebp]
	mov	eax, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx], edx

; 1729 : 	memcpy(*buf, &syncState_, sizeof(syncState_)); *buf += sizeof(syncState_);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx], eax

; 1730 : 	memcpy(*buf, &gameTime_,  sizeof(gameTime_));  *buf += sizeof(gameTime_);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 68					; 00000044H
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx], eax

; 1731 : 
; 1732 : 	int retval = VuSessionEvent::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuSessionEvent@@ABEHXZ	; VuSessionEvent::LocalSize
	mov	DWORD PTR _retval$[ebp], eax

; 1733 : 
; 1734 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1735 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuSessionEvent@@UAEHPAPAE@Z ENDP		; VuSessionEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
_len$ = -1						; size = 1
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuSessionEvent@@UAEHPAPAEPAJ@Z PROC		; VuSessionEvent::Decode
; _this$ = ecx

; 1690 : int VuSessionEvent::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1691 : 	VU_BYTE len = 0;

	mov	BYTE PTR _len$[ebp], 0

; 1692 : 
; 1693 : 	//sfr: why this function doesnt call other Decodes?
; 1694 : 
; 1695 : 	memcpychk(&sender_,   buf, sizeof(sender_), rem);   

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1696 : 	memcpychk(&entityId_, buf, sizeof(entityId_), rem); 

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1697 : 	memcpychk(&group_,    buf, sizeof(group_), rem);    

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1698 : 	memcpychk(&subtype_,  buf, sizeof(subtype_), rem);  

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1699 : 	memcpychk(&len,       buf, sizeof(VU_BYTE), rem);   

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1700 : 
; 1701 : 	if (len) {

	movzx	eax, BYTE PTR _len$[ebp]
	test	eax, eax
	je	SHORT $LN1@Decode

; 1702 : 		delete callsign_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1703 : 		callsign_ = new char[len + 1];

	movzx	ecx, BYTE PTR _len$[ebp]
	add	ecx, 1
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edx+60], eax

; 1704 : 		memcpychk(callsign_, buf, len, rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1705 : 		callsign_[len] = '\0';

	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	BYTE PTR [edx+eax], 0
$LN1@Decode:

; 1706 : 	}
; 1707 : 
; 1708 : 	memcpychk(&syncState_, buf, sizeof(syncState_), rem); 

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1709 : 	memcpychk(&gameTime_,  buf, sizeof(gameTime_), rem);  

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 68					; 00000044H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1710 : 
; 1711 : 	return VuSessionEvent::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuSessionEvent@@ABEHXZ	; VuSessionEvent::LocalSize

; 1712 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuSessionEvent@@UAEHPAPAEPAJ@Z ENDP		; VuSessionEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuSessionEvent@@UBEHXZ PROC			; VuSessionEvent::Size
; _this$ = ecx

; 1686 : int VuSessionEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1687 : 	return VuSessionEvent::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuSessionEvent@@ABEHXZ	; VuSessionEvent::LocalSize

; 1688 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuSessionEvent@@UBEHXZ ENDP			; VuSessionEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1VuSessionEvent@@UAE@XZ PROC				; VuSessionEvent::~VuSessionEvent
; _this$ = ecx

; 1671 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionEvent@@6B@

; 1672 : 	delete [] callsign_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1673 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuSessionEvent@@UAE@XZ ENDP				; VuSessionEvent::~VuSessionEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuSessionEvent@@QAE@VVU_ID@@0@Z PROC			; VuSessionEvent::VuSessionEvent
; _this$ = ecx

; 1665 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuSessionEvent@@QAE@VVU_ID@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuSessionEvent@@6B@
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+48], dx
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+68], ecx

; 1666 : 	//empty
; 1667 : 	RequestReliableTransmit ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 1668 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuSessionEvent@@QAE@VVU_ID@@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuSessionEvent@@QAE@VVU_ID@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuSessionEvent@@QAE@VVU_ID@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuSessionEvent@@QAE@VVU_ID@@0@Z ENDP			; VuSessionEvent::VuSessionEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 8
$T3 = -40						; size = 8
$T4 = -32						; size = 4
$T5 = -28						; size = 4
_len$ = -24						; size = 4
_name$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ent$ = 8						; size = 4
_subtype$ = 12						; size = 2
_target$ = 16						; size = 4
_loopback$ = 20						; size = 1
??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z PROC ; VuSessionEvent::VuSessionEvent
; _this$ = ecx

; 1633 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuSessionEvent@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _subtype$[ebp]
	mov	WORD PTR [ecx+48], dx
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+64], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [edx+68], eax

; 1634 : 	const char *name = "bad session";

	mov	DWORD PTR _name$[ebp], OFFSET ??_C@_0M@LNKKMGKK@bad?5session?$AA@

; 1635 : 	if (ent->IsSession()) {

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@VuSessionE

; 1636 : 		name   = ((VuSessionEntity*)ent)->Callsign();

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Callsign@VuSessionEntity@@QAEPADXZ	; VuSessionEntity::Callsign
	mov	DWORD PTR _name$[ebp], eax

; 1637 : 		group_ = ((VuSessionEntity*)ent)->GameId();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], edx
	jmp	SHORT $LN2@VuSessionE
$LN3@VuSessionE:

; 1638 : 
; 1639 : #if defined(VU_TRACK_LATENCY)
; 1640 : 		syncState_ = ((VuSessionEntity*)ent)->TimeSyncState();
; 1641 : #endif
; 1642 : 
; 1643 : 	} 
; 1644 : 	else if (ent->IsGroup()) {

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@VuSessionE

; 1645 : 		name = ((VuGroupEntity*)ent)->GroupName();

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?GroupName@VuGroupEntity@@QAEPADXZ	; VuGroupEntity::GroupName
	mov	DWORD PTR _name$[ebp], eax
$LN2@VuSessionE:

; 1646 : 	}
; 1647 : 	int len   = strlen(name);

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax

; 1648 : 	callsign_ = new char[len+1];

	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx+60], edx

; 1649 : 	strcpy(callsign_, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_strcpy
	add	esp, 8

; 1650 : 
; 1651 : 	SetEntity(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1652 : 	RequestReliableTransmit ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 1653 : 	RequestOutOfBandTransmit ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 1654 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuSessionEvent@@QAE@PAVVuEntity@@GPAVVuTargetEntity@@E@Z ENDP ; VuSessionEvent::VuSessionEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuGroundCollisionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuGroundCollisionEvent@@UAEPAXI@Z PROC		; VuGroundCollisionEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGroundCollisionEvent@@UAE@XZ	; VuGroundCollisionEvent::~VuGroundCollisionEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuGroundCollisionEvent@@UAEPAXI@Z ENDP		; VuGroundCollisionEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuGroundCollisionEvent@@MAEHE@Z PROC		; VuGroundCollisionEvent::Process
; _this$ = ecx

; 1613 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1614 : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@Process

; 1615 : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax

; 1616 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1617 : 	}
; 1618 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1619 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuGroundCollisionEvent@@MAEHE@Z ENDP		; VuGroundCollisionEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuGroundCollisionEvent@@UAE@XZ PROC			; VuGroundCollisionEvent::~VuGroundCollisionEvent
; _this$ = ecx

; 1607 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGroundCollisionEvent@@6B@

; 1608 : 	// empty
; 1609 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuGroundCollisionEvent@@UAE@XZ ENDP			; VuGroundCollisionEvent::~VuGroundCollisionEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuGroundCollisionEvent@@QAE@VVU_ID@@0@Z PROC		; VuGroundCollisionEvent::VuGroundCollisionEvent
; _this$ = ecx

; 1602 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGroundCollisionEvent@@6B@

; 1603 : 	// empty
; 1604 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuGroundCollisionEvent@@QAE@VVU_ID@@0@Z ENDP		; VuGroundCollisionEvent::VuGroundCollisionEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuGroundCollisionEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuGroundCollisionEvent::VuGroundCollisionEvent
; _this$ = ecx

; 1595 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGroundCollisionEvent@@6B@

; 1596 : 	// empty
; 1597 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VuGroundCollisionEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuGroundCollisionEvent::VuGroundCollisionEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuEntityCollisionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuEntityCollisionEvent@@UAEPAXI@Z PROC		; VuEntityCollisionEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEntityCollisionEvent@@UAE@XZ	; VuEntityCollisionEvent::~VuEntityCollisionEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuEntityCollisionEvent@@UAEPAXI@Z ENDP		; VuEntityCollisionEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuEntityCollisionEvent@@ABEHXZ PROC		; VuEntityCollisionEvent::LocalSize
; _this$ = ecx

; 1550 : int VuEntityCollisionEvent::LocalSize() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1551 : 	return (VUENTITYCOLLISIONEVENT_LOCALSIZE);

	mov	eax, 16					; 00000010H

; 1552 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuEntityCollisionEvent@@ABEHXZ ENDP		; VuEntityCollisionEvent::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuEntityCollisionEvent@@MAEHE@Z PROC		; VuEntityCollisionEvent::Process
; _this$ = ecx

; 1582 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1583 : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@Process

; 1584 : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax

; 1585 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1586 : 	}
; 1587 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1588 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuEntityCollisionEvent@@MAEHE@Z ENDP		; VuEntityCollisionEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuEntityCollisionEvent@@UAEHPAPAE@Z PROC	; VuEntityCollisionEvent::Encode
; _this$ = ecx

; 1571 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 	VuEvent::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuEvent@@UAEHPAPAE@Z		; VuEvent::Encode

; 1573 : 
; 1574 : 	memcpy(*buf, &otherId_,     sizeof(otherId_));     *buf += sizeof(otherId_);

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1575 : 	memcpy(*buf, &hitLocation_, sizeof(hitLocation_)); *buf += sizeof(hitLocation_);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1576 : 	memcpy(*buf, &hitEffect_,   sizeof(hitEffect_));   *buf += sizeof(hitEffect_);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1577 : 
; 1578 : 	return (VUENTITYCOLLISIONEVENT_SIZE);

	mov	eax, 28					; 0000001cH

; 1579 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuEntityCollisionEvent@@UAEHPAPAE@Z ENDP	; VuEntityCollisionEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuEntityCollisionEvent@@UAEHPAPAEPAJ@Z PROC	; VuEntityCollisionEvent::Decode
; _this$ = ecx

; 1560 : int VuEntityCollisionEvent::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1561 : 	VuEvent::Decode(buf, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuEvent@@UAEHPAPAEPAJ@Z		; VuEvent::Decode

; 1562 : 
; 1563 : 	memcpychk(&otherId_,     buf, sizeof(otherId_), rem);     

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1564 : 	memcpychk(&hitLocation_, buf, sizeof(hitLocation_), rem); 

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1565 : 	memcpychk(&hitEffect_,   buf, sizeof(hitEffect_), rem);   

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1566 : 
; 1567 : 	return (VUENTITYCOLLISIONEVENT_SIZE);

	mov	eax, 28					; 0000001cH

; 1568 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuEntityCollisionEvent@@UAEHPAPAEPAJ@Z ENDP	; VuEntityCollisionEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuEntityCollisionEvent@@UBEHXZ PROC		; VuEntityCollisionEvent::Size
; _this$ = ecx

; 1556 : VuEntityCollisionEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1557 : 	return (VUENTITYCOLLISIONEVENT_SIZE);

	mov	eax, 28					; 0000001cH

; 1558 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuEntityCollisionEvent@@UBEHXZ ENDP		; VuEntityCollisionEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuEntityCollisionEvent@@UAE@XZ PROC			; VuEntityCollisionEvent::~VuEntityCollisionEvent
; _this$ = ecx

; 1545 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuEntityCollisionEvent@@6B@

; 1546 : 	// empty
; 1547 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuEntityCollisionEvent@@UAE@XZ ENDP			; VuEntityCollisionEvent::~VuEntityCollisionEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z PROC		; VuEntityCollisionEvent::VuEntityCollisionEvent
; _this$ = ecx

; 1540 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuEntityCollisionEvent@@6B@
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID

; 1541 : 	// empty
; 1542 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuEntityCollisionEvent@@QAE@VVU_ID@@0@Z ENDP		; VuEntityCollisionEvent::VuEntityCollisionEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_otherId$ = 12						; size = 8
_hitLocation$ = 20					; size = 4
_hitEffect$ = 24					; size = 4
_target$ = 28						; size = 4
_loopback$ = 32						; size = 1
??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z PROC ; VuEntityCollisionEvent::VuEntityCollisionEvent
; _this$ = ecx

; 1531 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuEntityCollisionEvent@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _otherId$[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	eax, DWORD PTR _otherId$[ebp+4]
	mov	DWORD PTR [ecx+52], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _hitLocation$[ebp]
	mov	DWORD PTR [ecx+56], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hitEffect$[ebp]
	mov	DWORD PTR [eax+60], ecx

; 1532 : 	SetEntity(entity);

	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1533 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuEntityCollisionEvent@@QAE@PAVVuEntity@@VVU_ID@@KHPAVVuTargetEntity@@E@Z ENDP ; VuEntityCollisionEvent::VuEntityCollisionEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?8VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?8VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z PROC ; operator==<VuEntity>, COMDAT

; 72   : template <class E> bool operator==(const void* le, const VuBin<E> &re){ return ((void*)re.get()) == le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z ENDP ; operator==<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuFullUpdateEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuFullUpdateEvent@@UAEPAXI@Z PROC			; VuFullUpdateEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFullUpdateEvent@@UAE@XZ		; VuFullUpdateEvent::~VuFullUpdateEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuFullUpdateEvent@@UAEPAXI@Z ENDP			; VuFullUpdateEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuFullUpdateEvent@@MAEHPAVVuEntity@@@Z PROC	; VuFullUpdateEvent::Activate
; _this$ = ecx

; 1512 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1513 : 	if (!ent) {

	cmp	DWORD PTR _ent$[ebp], 0
	jne	SHORT $LN1@Activate

; 1514 : 		// morph this into a create event
; 1515 : 		type_ = VU_CREATE_EVENT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 10			; 0000000aH
$LN1@Activate:

; 1516 : 	}
; 1517 : 	return VuEvent::Activate(ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Activate@VuEvent@@MAEHPAVVuEntity@@@Z	; VuEvent::Activate

; 1518 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuFullUpdateEvent@@MAEHPAVVuEntity@@@Z ENDP	; VuFullUpdateEvent::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuFullUpdateEvent@@UAE@XZ PROC			; VuFullUpdateEvent::~VuFullUpdateEvent
; _this$ = ecx

; 1506 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFullUpdateEvent@@6B@

; 1507 : 	// empty
; 1508 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuCreateEvent@@UAE@XZ		; VuCreateEvent::~VuCreateEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuFullUpdateEvent@@UAE@XZ ENDP			; VuFullUpdateEvent::~VuFullUpdateEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderAdd$ = 8						; size = 8
_senderid$ = 16						; size = 8
_target$ = 24						; size = 8
??0VuFullUpdateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z PROC	; VuFullUpdateEvent::VuFullUpdateEvent
; _this$ = ecx

; 1501 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _senderAdd$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _senderAdd$[ebp]
	push	edx
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z ; VuCreateEvent::VuCreateEvent
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFullUpdateEvent@@6B@

; 1502 : 	// empty
; 1503 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0VuFullUpdateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ENDP	; VuFullUpdateEvent::VuFullUpdateEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuFullUpdateEvent::VuFullUpdateEvent
; _this$ = ecx

; 1492 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuCreateEvent::VuCreateEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFullUpdateEvent@@6B@

; 1493 : 	SetEntity(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1494 : 	updateTime_ = entity->LastUpdateTime();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?LastUpdateTime@VuEntity@@QBEKXZ	; VuEntity::LastUpdateTime
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax

; 1495 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuCreateEvent@@UAE@XZ		; VuCreateEvent::~VuCreateEvent
__ehhandler$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuFullUpdateEvent::VuFullUpdateEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuBroadcastGlobalEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuBroadcastGlobalEvent@@UAEPAXI@Z PROC		; VuBroadcastGlobalEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuBroadcastGlobalEvent@@UAE@XZ	; VuBroadcastGlobalEvent::~VuBroadcastGlobalEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuBroadcastGlobalEvent@@UAEPAXI@Z ENDP		; VuBroadcastGlobalEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -104						; size = 8
$T3 = -96						; size = 8
$T4 = -88						; size = 8
$T5 = -80						; size = 8
_serverAdd$6 = -72					; size = 8
$T7 = -64						; size = 4
$T8 = -60						; size = 4
$T9 = -56						; size = 4
tv232 = -52						; size = 4
$T10 = -48						; size = 4
tv212 = -44						; size = 4
$T11 = -40						; size = 4
_msg$12 = -36						; size = 4
tv179 = -32						; size = 4
$T13 = -28						; size = 4
_server$14 = -24					; size = 4
_msg$15 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_autod$ = 8						; size = 1
?Process@VuBroadcastGlobalEvent@@MAEHE@Z PROC		; VuBroadcastGlobalEvent::Process
; _this$ = ecx

; 1420 : VU_ERRCODE VuBroadcastGlobalEvent::Process(VU_BOOL autod){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@VuBroadcastGlobalEvent@@MAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1421 : 	if (autod){

	movzx	eax, BYTE PTR _autod$[ebp]
	test	eax, eax
	je	SHORT $LN8@Process

; 1422 : 		return 0;

	xor	eax, eax
	jmp	$LN9@Process
$LN8@Process:

; 1423 : 	}
; 1424 : 
; 1425 : 	// NULL entity means we dont have it in DB yet.
; 1426 : 	if (Entity() == NULL){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	jne	$LN7@Process

; 1427 : 		//sfr: someone sending himself
; 1428 : 		if (entityAddress.ip == 0){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN6@Process

; 1429 : 			// infer ip
; 1430 : 			entityAddress.ip = senderAddress.ip;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR [edx+56], ecx

; 1431 : 		}
; 1432 : 		// someone sending others
; 1433 : 		else {

	jmp	SHORT $LN5@Process
$LN6@Process:

; 1434 : 			// server is sending an IP
; 1435 : 			// if IP is private, entity is on the same network as server
; 1436 : 			// if we see server as a private IP, 
; 1437 : 			// we are on the same network as server,
; 1438 : 			// so no translation is necessary
; 1439 : 			// otherwise, client is on the same private network as server
; 1440 : 			// and we use server IP
; 1441 : 			// find server address
; 1442 : 			// TODO  check if we can get vuGlobalGroup owner...
; 1443 : 			VuSessionEntity *server = static_cast<VuSessionEntity*>(vuDatabase->Find(vuGlobalGroup->OwnerId()));		

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _server$14[ebp], eax

; 1444 : 			if (server != NULL){

	cmp	DWORD PTR _server$14[ebp], 0
	je	SHORT $LN5@Process

; 1445 : 				VU_ADDRESS serverAdd = server->GetAddress();

	lea	eax, DWORD PTR _serverAdd$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _server$14[ebp]
	call	?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ ; VuSessionEntity::GetAddress

; 1446 : 				if ((entityAddress.IsPrivate()) && (!serverAdd.IsPrivate())){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?IsPrivate@VU_ADDRESS@@QBE_NXZ		; VU_ADDRESS::IsPrivate
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@Process
	lea	ecx, DWORD PTR _serverAdd$6[ebp]
	call	?IsPrivate@VU_ADDRESS@@QBE_NXZ		; VU_ADDRESS::IsPrivate
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Process

; 1447 : 					entityAddress.ip = serverAdd.ip;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _serverAdd$6[ebp+4]
	mov	DWORD PTR [eax+56], ecx
$LN5@Process:

; 1448 : 				}
; 1449 : 			}
; 1450 : 		}
; 1451 : 		// open a dangling session so we can send messages to the entity
; 1452 : 		VuxAddDanglingSession(EntityId(), entityAddress);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?VuxAddDanglingSession@@YA_NVVU_ID@@VVU_ADDRESS@@@Z ; VuxAddDanglingSession
	add	esp, 16					; 00000010H

; 1453 : 
; 1454 : 		// someone broadcasted an event (not a session)
; 1455 : 		if (EntityId().num_ != VU_SESSION_ENTITY_ID) {

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	cmp	DWORD PTR [eax], 3
	je	SHORT $LN2@Process

; 1456 : 			// Send a get request for the entity if its not a session
; 1457 : 			VuGetRequest *msg = new VuGetRequest(EntityId(), vuGlobalGroup);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN11@Process
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0VuGetRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuGetRequest::VuGetRequest
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN12@Process
$LN11@Process:
	mov	DWORD PTR tv179[ebp], 0
$LN12@Process:
	mov	eax, DWORD PTR tv179[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _msg$12[ebp], ecx

; 1458 : 			msg->RequestOutOfBandTransmit();

	mov	ecx, DWORD PTR _msg$12[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 1459 : 			VuMessageQueue::PostVuMessage(msg);

	mov	edx, DWORD PTR _msg$12[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 1460 : 		}
; 1461 : 		// someone broadcasted a session
; 1462 : 		else {

	jmp	$LN7@Process
$LN2@Process:

; 1463 : 			// broadcasting a session
; 1464 : 			// Send full update unreliably
; 1465 : 			VuMessage *msg;
; 1466 : 			//vuLocalSessionEntity->SetDirty ();
; 1467 : 			msg = new VuFullUpdateEvent(vuLocalSessionEntity.get(), vuGlobalGroup);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN13@Process
	push	0
	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv212[ebp], eax
	jmp	SHORT $LN14@Process
$LN13@Process:
	mov	DWORD PTR tv212[ebp], 0
$LN14@Process:
	mov	ecx, DWORD PTR tv212[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _msg$15[ebp], edx

; 1468 : 			msg->RequestOutOfBandTransmit();

	mov	ecx, DWORD PTR _msg$15[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 1469 : 			VuMessageQueue::PostVuMessage(msg);

	mov	eax, DWORD PTR _msg$15[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 1470 : 			//msg->Send();
; 1471 : 
; 1472 : 			// request dummy block from everyone to open NATS
; 1473 : 			// cause this one is prolly comming in
; 1474 : 			msg = new VuRequestDummyBlockMessage(entityAddress, vuGlobalGroup);

	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN15@Process
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	push	ecx
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0VuRequestDummyBlockMessage@@QAE@VVU_ADDRESS@@PAVVuTargetEntity@@@Z ; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
	mov	DWORD PTR tv232[ebp], eax
	jmp	SHORT $LN16@Process
$LN15@Process:
	mov	DWORD PTR tv232[ebp], 0
$LN16@Process:
	mov	edx, DWORD PTR tv232[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR _msg$15[ebp], eax

; 1475 : 			msg->RequestReliableTransmit();

	mov	ecx, DWORD PTR _msg$15[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 1476 : 			//msg->Send();
; 1477 : 			VuMessageQueue::PostVuMessage(msg);

	mov	ecx, DWORD PTR _msg$15[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN7@Process:

; 1478 : 		}
; 1479 : 	}
; 1480 : 
; 1481 : 	return 1;

	mov	eax, 1
$LN9@Process:

; 1482 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@VuBroadcastGlobalEvent@@MAEHE@Z$0:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuBroadcastGlobalEvent@@MAEHE@Z$1:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuBroadcastGlobalEvent@@MAEHE@Z$2:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Process@VuBroadcastGlobalEvent@@MAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@VuBroadcastGlobalEvent@@MAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@VuBroadcastGlobalEvent@@MAEHE@Z ENDP		; VuBroadcastGlobalEvent::Process
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuBroadcastGlobalEvent@@MAEHPAVVuEntity@@@Z PROC ; VuBroadcastGlobalEvent::Activate
; _this$ = ecx

; 1416 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1417 : 	return VuEvent::Activate(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Activate@VuEvent@@MAEHPAVVuEntity@@@Z	; VuEvent::Activate

; 1418 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuBroadcastGlobalEvent@@MAEHPAVVuEntity@@@Z ENDP ; VuBroadcastGlobalEvent::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_retval$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuBroadcastGlobalEvent@@MAEHPAPAE@Z PROC	; VuBroadcastGlobalEvent::Encode
; _this$ = ecx

; 1408 : int VuBroadcastGlobalEvent::Encode (VU_BYTE** buf){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1409 : 	int retval = VuEvent::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuEvent@@UAEHPAPAE@Z		; VuEvent::Encode
	mov	DWORD PTR _retval$[ebp], eax

; 1410 : 	retval += entityAddress.Encode(buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Encode@VU_ADDRESS@@QAEHPAPAE@Z		; VU_ADDRESS::Encode
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 1411 : 
; 1412 : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 1413 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuBroadcastGlobalEvent@@MAEHPAPAE@Z ENDP	; VuBroadcastGlobalEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_initRem$ = -8						; size = 4
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuBroadcastGlobalEvent@@MAEHPAPAEPAJ@Z PROC	; VuBroadcastGlobalEvent::Decode
; _this$ = ecx

; 1401 : int VuBroadcastGlobalEvent::Decode (VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1402 : 	long initRem = *rem;

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _initRem$[ebp], ecx

; 1403 : 	VuEvent::Decode(buf, rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuEvent@@UAEHPAPAEPAJ@Z		; VuEvent::Decode

; 1404 : 	entityAddress.Decode(buf, rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Decode@VU_ADDRESS@@QAEXPAPAEPAJ@Z	; VU_ADDRESS::Decode

; 1405 : 	return (int)(initRem - *rem);

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR _initRem$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx

; 1406 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuBroadcastGlobalEvent@@MAEHPAPAEPAJ@Z ENDP	; VuBroadcastGlobalEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuBroadcastGlobalEvent@@MBEHXZ PROC		; VuBroadcastGlobalEvent::Size
; _this$ = ecx

; 1397 : int VuBroadcastGlobalEvent::Size() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1398 : 	return VUEVENT_SIZE + entityAddress.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Size@VU_ADDRESS@@QBEHXZ		; VU_ADDRESS::Size
	add	eax, 12					; 0000000cH

; 1399 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuBroadcastGlobalEvent@@MBEHXZ ENDP		; VuBroadcastGlobalEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuBroadcastGlobalEvent@@UAE@XZ PROC			; VuBroadcastGlobalEvent::~VuBroadcastGlobalEvent
; _this$ = ecx

; 1394 : VuBroadcastGlobalEvent::~VuBroadcastGlobalEvent (){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuBroadcastGlobalEvent@@6B@

; 1395 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuBroadcastGlobalEvent@@UAE@XZ ENDP			; VuBroadcastGlobalEvent::~VuBroadcastGlobalEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_senderAddress$ = 8					; size = 8
_senderId$ = 16						; size = 8
_target$ = 24						; size = 8
??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z PROC ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
; _this$ = ecx

; 1385 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderId$[ebp]
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuBroadcastGlobalEvent@@6B@
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS

; 1386 : #if defined(VU_USE_CLASS_INFO)
; 1387 : 	memset(classInfo_, '\0', CLASS_NUM_BYTES);
; 1388 : #endif
; 1389 : 	vutype_ = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+48], dx

; 1390 : 	this->senderAddress = senderAddress;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _senderAddress$[ebp]
	mov	DWORD PTR [ecx+60], edx
	mov	eax, DWORD PTR _senderAddress$[ebp+4]
	mov	DWORD PTR [ecx+64], eax

; 1391 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuBroadcastGlobalEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ENDP ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 8
$T3 = -40						; size = 8
$T4 = -32						; size = 8
$T5 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
; _this$ = ecx

; 1359 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuBroadcastGlobalEvent@@6B@
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS

; 1360 : 
; 1361 : #if defined(VU_USE_CLASS_INFO)
; 1362 : 	memcpy(classInfo_, entity->EntityType()->classInfo_, CLASS_NUM_BYTES);
; 1363 : #endif
; 1364 : 
; 1365 : 	vutype_ = entity->Type();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+48], ax

; 1366 : 	SetEntity(entity);

	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1367 : 	updateTime_ = entity->LastUpdateTime();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?LastUpdateTime@VuEntity@@QBEKXZ	; VuEntity::LastUpdateTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 1368 : 
; 1369 : 	// sft address handling
; 1370 : 	if (entity->IsSession()){

	mov	edx, DWORD PTR _entity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _entity$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@VuBroadcas

; 1371 : 		// sending myself
; 1372 : 		if ((entity->Id().creator_ == vuLocalSession.creator_)){

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A+4
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	add	eax, 4
	mov	ecx, eax
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN2@VuBroadcas

; 1373 : 			// does not include IP, will be discovered on the other side
; 1374 : 			entityAddress = VU_ADDRESS(0, ComAPIGetMyRecvPort(), ComAPIGetMyReliableRecvPort());

	call	_ComAPIGetMyReliableRecvPort
	movzx	edx, ax
	push	edx
	call	_ComAPIGetMyRecvPort
	movzx	eax, ax
	push	eax
	push	0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], edx

; 1375 : 		}
; 1376 : 		//send another entity
; 1377 : 		else {

	jmp	SHORT $LN4@VuBroadcas
$LN2@VuBroadcas:

; 1378 : 			entityAddress = static_cast<VuSessionEntity*>(entity)->GetAddress();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ ; VuSessionEntity::GetAddress
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], edx
	mov	DWORD PTR [ecx+56], eax
$LN4@VuBroadcas:

; 1379 : 		}
; 1380 : 	}
; 1381 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuPositionUpdateEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuPositionUpdateEvent@@UAEPAXI@Z PROC		; VuPositionUpdateEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuPositionUpdateEvent@@UAE@XZ	; VuPositionUpdateEvent::~VuPositionUpdateEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuPositionUpdateEvent@@UAEPAXI@Z ENDP		; VuPositionUpdateEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuPositionUpdateEvent@@ABEHXZ PROC		; VuPositionUpdateEvent::LocalSize
; _this$ = ecx

; 1284 : int VuPositionUpdateEvent::LocalSize() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1285 : 	return (
; 1286 : 		sizeof(yc_)+sizeof(pc_)+sizeof(rc_)+
; 1287 : 		sizeof(x_)+sizeof(y_)+sizeof(z_)+
; 1288 : 		sizeof(sdx_)+sizeof(sdy_)+sizeof(sdz_)
; 1289 : 	);

	mov	eax, 21					; 00000015H

; 1290 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuPositionUpdateEvent@@ABEHXZ ENDP		; VuPositionUpdateEvent::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuPositionUpdateEvent@@MAEHE@Z PROC		; VuPositionUpdateEvent::Process
; _this$ = ecx

; 1345 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1346 : 	if (Entity()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@Process

; 1347 : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax

; 1348 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1349 : 	}
; 1350 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1351 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuPositionUpdateEvent@@MAEHE@Z ENDP		; VuPositionUpdateEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoSend@VuPositionUpdateEvent@@UAEEXZ PROC		; VuPositionUpdateEvent::DoSend
; _this$ = ecx

; 1279 : VU_BOOL VuPositionUpdateEvent::DoSend(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1280 : 	// test is done in vudriver.cpp, prior to generation of event
; 1281 : 	return TRUE;

	mov	al, 1

; 1282 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoSend@VuPositionUpdateEvent@@UAEEXZ ENDP		; VuPositionUpdateEvent::DoSend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuPositionUpdateEvent@@UAEHPAPAE@Z PROC		; VuPositionUpdateEvent::Encode
; _this$ = ecx

; 1321 : int VuPositionUpdateEvent::Encode(VU_BYTE** buf){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1322 : 	VuEvent::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuEvent@@UAEHPAPAE@Z		; VuEvent::Encode

; 1323 : 
; 1324 : 	memcpy(*buf, &x_,  sizeof(x_));  *buf += sizeof(x_);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 63					; 0000003fH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1325 : 	memcpy(*buf, &y_,  sizeof(y_));  *buf += sizeof(y_);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 67					; 00000043H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1326 : 	memcpy(*buf, &z_,  sizeof(z_));  *buf += sizeof(z_);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 71					; 00000047H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1327 : 	// convert to short and send through the wire
; 1328 : 	sdx_ = static_cast<short>(dx_ * D2SHORT);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+75]
	mulss	xmm0, DWORD PTR __real@4151b646
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+87], dx

; 1329 : 	sdy_ = static_cast<short>(dy_ * D2SHORT);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+79]
	mulss	xmm0, DWORD PTR __real@4151b646
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+89], dx

; 1330 : 	sdz_ = static_cast<short>(dz_ * D2SHORT);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+83]
	mulss	xmm0, DWORD PTR __real@4151b646
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+91], dx

; 1331 : 	memcpy(*buf, &sdx_, sizeof(sdx_)); *buf += sizeof(sdx_);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 87					; 00000057H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 2
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1332 : 	memcpy(*buf, &sdy_, sizeof(sdy_)); *buf += sizeof(sdy_);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 89					; 00000059H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 2
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1333 : 	memcpy(*buf, &sdz_, sizeof(sdz_)); *buf += sizeof(sdz_);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 91					; 0000005bH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 2
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1334 : 	// convert from radians to char and send through the wire
; 1335 : 	yc_  = static_cast<char>(yaw_   * RAD2CHAR);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+48]
	mulss	xmm0, DWORD PTR __real@4222f983
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+60], dl

; 1336 : 	pc_  = static_cast<char>(pitch_ * RAD2CHAR);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+52]
	mulss	xmm0, DWORD PTR __real@4222f983
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+61], dl

; 1337 : 	rc_  = static_cast<char>(roll_  * RAD2CHAR);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	mulss	xmm0, DWORD PTR __real@4222f983
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+62], dl

; 1338 : 	memcpy(*buf, &yc_, sizeof(yc_));  *buf += sizeof(yc_);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1339 : 	memcpy(*buf, &pc_, sizeof(pc_));  *buf += sizeof(pc_);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 61					; 0000003dH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1340 : 	memcpy(*buf, &rc_, sizeof(rc_));  *buf += sizeof(rc_);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 62					; 0000003eH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1341 : 	return (LocalSize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuPositionUpdateEvent@@ABEHXZ ; VuPositionUpdateEvent::LocalSize

; 1342 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuPositionUpdateEvent@@UAEHPAPAE@Z ENDP		; VuPositionUpdateEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuPositionUpdateEvent@@UAEHPAPAEPAJ@Z PROC	; VuPositionUpdateEvent::Decode
; _this$ = ecx

; 1296 : int VuPositionUpdateEvent::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1297 : 	VuEvent::Decode(buf, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuEvent@@UAEHPAPAEPAJ@Z		; VuEvent::Decode

; 1298 : 
; 1299 : 	memcpychk(&x_,  buf, sizeof(x_), rem);  

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 63					; 0000003fH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1300 : 	memcpychk(&y_,  buf, sizeof(y_), rem);  

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 67					; 00000043H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1301 : 	memcpychk(&z_,  buf, sizeof(z_), rem); 

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 71					; 00000047H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1302 : 	// receive from wire, convert to dot
; 1303 : 	memcpychk(&sdx_, buf, sizeof(sdx_), rem); 

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 87					; 00000057H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1304 : 	memcpychk(&sdy_, buf, sizeof(sdy_), rem); 

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 89					; 00000059H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1305 : 	memcpychk(&sdz_, buf, sizeof(sdz_), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 91					; 0000005bH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1306 : 	dx_ = sdx_ * SHORT2D;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+87]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3d9c409c
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+75], xmm0

; 1307 : 	dy_ = sdy_ * SHORT2D;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+89]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3d9c409c
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+79], xmm0

; 1308 : 	dz_ = sdz_ * SHORT2D;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+91]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3d9c409c
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+83], xmm0

; 1309 : 	// receive from wire and convert to radians
; 1310 : 	memcpychk(&yc_,  buf, sizeof(yc_), rem);    

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1311 : 	memcpychk(&pc_,  buf, sizeof(pc_), rem);  

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 61					; 0000003dH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1312 : 	memcpychk(&rc_,  buf, sizeof(rc_), rem);  

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 62					; 0000003eH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1313 : 	yaw_   = yc_ * CHAR2RAD;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+60]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3cc90fdb
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+48], xmm0

; 1314 : 	pitch_ = pc_ * CHAR2RAD;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+61]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3cc90fdb
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+52], xmm0

; 1315 : 	roll_  = rc_ * CHAR2RAD;

	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+62]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3cc90fdb
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+56], xmm0

; 1316 : 
; 1317 : 	return LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuPositionUpdateEvent@@ABEHXZ ; VuPositionUpdateEvent::LocalSize

; 1318 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuPositionUpdateEvent@@UAEHPAPAEPAJ@Z ENDP	; VuPositionUpdateEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuPositionUpdateEvent@@UBEHXZ PROC		; VuPositionUpdateEvent::Size
; _this$ = ecx

; 1292 : int VuPositionUpdateEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1293 : 	return (LocalSize() + VUEVENT_SIZE);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuPositionUpdateEvent@@ABEHXZ ; VuPositionUpdateEvent::LocalSize
	add	eax, 12					; 0000000cH

; 1294 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuPositionUpdateEvent@@UBEHXZ ENDP		; VuPositionUpdateEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuPositionUpdateEvent@@UAE@XZ PROC			; VuPositionUpdateEvent::~VuPositionUpdateEvent
; _this$ = ecx

; 1275 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPositionUpdateEvent@@6B@

; 1276 : 	// empty
; 1277 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuPositionUpdateEvent@@UAE@XZ ENDP			; VuPositionUpdateEvent::~VuPositionUpdateEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuPositionUpdateEvent@@QAE@VVU_ID@@0@Z PROC		; VuPositionUpdateEvent::VuPositionUpdateEvent
; _this$ = ecx

; 1270 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuPositionUpdateEvent@@6B@

; 1271 : 	// empty
; 1272 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuPositionUpdateEvent@@QAE@VVU_ID@@0@Z ENDP		; VuPositionUpdateEvent::VuPositionUpdateEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuPositionUpdateEvent::VuPositionUpdateEvent
; _this$ = ecx

; 1237 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPositionUpdateEvent@@6B@

; 1238 : 	if (entity) {

	cmp	DWORD PTR _entity$[ebp], 0
	je	$LN19@VuPosition

; 1239 : 		SetEntity(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1240 : 		updateTime_ = entity->LastUpdateTime();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?LastUpdateTime@VuEntity@@QBEKXZ	; VuEntity::LastUpdateTime
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax

; 1241 : 
; 1242 : 		x_  = entity->XPos();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+63]

; 1243 : 		y_  = entity->YPos();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+67]

; 1244 : 		z_  = entity->ZPos();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+71]

; 1245 : 
; 1246 : 		dx_ = entity->XDelta();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?XDelta@VuEntity@@QBEMXZ		; VuEntity::XDelta
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+75]

; 1247 : 		dy_ = entity->YDelta();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?YDelta@VuEntity@@QBEMXZ		; VuEntity::YDelta
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+79]

; 1248 : 		dz_ = entity->ZDelta();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?ZDelta@VuEntity@@QBEMXZ		; VuEntity::ZDelta
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+83]
$LN18@VuPosition:

; 1249 : #define CHK_MAXSPEED(d)\
; 1250 : 		do { if (d > MAX_SPEED){ d = MAX_SPEED; } else if (d < -MAX_SPEED){ d = -MAX_SPEED; } } while(0)
; 1251 : 		CHK_MAXSPEED(dx_);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+75]
	comiss	xmm0, DWORD PTR __real@459c4000
	jbe	SHORT $LN15@VuPosition
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@459c4000
	movss	DWORD PTR [ecx+75], xmm0
	jmp	SHORT $LN13@VuPosition
$LN15@VuPosition:
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c59c4000
	comiss	xmm0, DWORD PTR [edx+75]
	jbe	SHORT $LN13@VuPosition
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c59c4000
	movss	DWORD PTR [eax+75], xmm0
$LN13@VuPosition:
	xor	ecx, ecx
	jne	SHORT $LN18@VuPosition
$LN16@VuPosition:

; 1252 : 		CHK_MAXSPEED(dy_);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+79]
	comiss	xmm0, DWORD PTR __real@459c4000
	jbe	SHORT $LN9@VuPosition
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@459c4000
	movss	DWORD PTR [eax+79], xmm0
	jmp	SHORT $LN7@VuPosition
$LN9@VuPosition:
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c59c4000
	comiss	xmm0, DWORD PTR [ecx+79]
	jbe	SHORT $LN7@VuPosition
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c59c4000
	movss	DWORD PTR [edx+79], xmm0
$LN7@VuPosition:
	xor	eax, eax
	jne	SHORT $LN16@VuPosition
$LN10@VuPosition:

; 1253 : 		CHK_MAXSPEED(dz_);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+83]
	comiss	xmm0, DWORD PTR __real@459c4000
	jbe	SHORT $LN3@VuPosition
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@459c4000
	movss	DWORD PTR [edx+83], xmm0
	jmp	SHORT $LN1@VuPosition
$LN3@VuPosition:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c59c4000
	comiss	xmm0, DWORD PTR [eax+83]
	jbe	SHORT $LN1@VuPosition
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c59c4000
	movss	DWORD PTR [ecx+83], xmm0
$LN1@VuPosition:
	xor	edx, edx
	jne	SHORT $LN10@VuPosition

; 1254 : #undef CHKSPEED
; 1255 : 		// turn from radians to VU_BYTE
; 1256 : 		yaw_    = entity->Yaw();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Yaw@VuEntity@@QBEMXZ			; VuEntity::Yaw
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+48]

; 1257 : 		pitch_  = entity->Pitch();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Pitch@VuEntity@@QBEMXZ			; VuEntity::Pitch
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+52]

; 1258 : 		roll_   = entity->Roll();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Roll@VuEntity@@QBEMXZ			; VuEntity::Roll
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+56]
$LN19@VuPosition:

; 1259 : 
; 1260 : 		//dyaw_   = entity->YawDelta();
; 1261 : 		//dpitch_ = entity->PitchDelta();
; 1262 : 		//droll_  = entity->RollDelta();
; 1263 : 		//VU_PRINT("yaw=%3.3f, pitch=%3.3f, roll=%3.3f, dyaw=%3.3f, dpitch=%3.3f, droll=%3.3f\n", yaw_, pitch_, roll_, dyaw_, dpitch_, droll_);
; 1264 : 	}
; 1265 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuPositionUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuPositionUpdateEvent::VuPositionUpdateEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuTransferEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuTransferEvent@@UAEPAXI@Z PROC			; VuTransferEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuTransferEvent@@UAE@XZ		; VuTransferEvent::~VuTransferEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuTransferEvent@@UAEPAXI@Z ENDP			; VuTransferEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuTransferEvent@@ABEHXZ PROC			; VuTransferEvent::LocalSize
; _this$ = ecx

; 1187 : int VuTransferEvent::LocalSize() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1188 : 	return(VUTRANSFEREVENT_LOCALSIZE);

	mov	eax, 8

; 1189 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuTransferEvent@@ABEHXZ ENDP			; VuTransferEvent::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuTransferEvent@@MAEHE@Z PROC			; VuTransferEvent::Process
; _this$ = ecx

; 1222 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1223 : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@Process

; 1224 : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax

; 1225 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1226 : 	}
; 1227 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1228 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuTransferEvent@@MAEHE@Z ENDP			; VuTransferEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuTransferEvent@@MAEHPAVVuEntity@@@Z PROC	; VuTransferEvent::Activate
; _this$ = ecx

; 1216 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1217 : 	return VuEvent::Activate(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Activate@VuEvent@@MAEHPAVVuEntity@@@Z	; VuEvent::Activate

; 1218 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuTransferEvent@@MAEHPAVVuEntity@@@Z ENDP	; VuTransferEvent::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuTransferEvent@@UAEHPAPAE@Z PROC		; VuTransferEvent::Encode
; _this$ = ecx

; 1206 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1207 : 	VuEvent::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuEvent@@UAEHPAPAE@Z		; VuEvent::Encode

; 1208 : 
; 1209 : 	memcpy(*buf, &newOwnerId_, sizeof(newOwnerId_)); *buf += sizeof(newOwnerId_);

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 1210 : 
; 1211 : 	return(VUTRANSFEREVENT_SIZE);

	mov	eax, 20					; 00000014H

; 1212 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuTransferEvent@@UAEHPAPAE@Z ENDP		; VuTransferEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuTransferEvent@@UAEHPAPAEPAJ@Z PROC		; VuTransferEvent::Decode
; _this$ = ecx

; 1197 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 	VuEvent::Decode(buf, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuEvent@@UAEHPAPAEPAJ@Z		; VuEvent::Decode

; 1199 : 	memcpychk(&newOwnerId_, buf, sizeof(newOwnerId_), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 1200 : 
; 1201 : 	return(VUTRANSFEREVENT_SIZE);

	mov	eax, 20					; 00000014H

; 1202 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuTransferEvent@@UAEHPAPAEPAJ@Z ENDP		; VuTransferEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuTransferEvent@@UBEHXZ PROC			; VuTransferEvent::Size
; _this$ = ecx

; 1192 : int VuTransferEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 	return(VUTRANSFEREVENT_SIZE);

	mov	eax, 20					; 00000014H

; 1194 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuTransferEvent@@UBEHXZ ENDP			; VuTransferEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuTransferEvent@@UAE@XZ PROC				; VuTransferEvent::~VuTransferEvent
; _this$ = ecx

; 1182 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTransferEvent@@6B@

; 1183 : 	// empty
; 1184 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuTransferEvent@@UAE@XZ ENDP				; VuTransferEvent::~VuTransferEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuTransferEvent@@QAE@VVU_ID@@0@Z PROC		; VuTransferEvent::VuTransferEvent
; _this$ = ecx

; 1177 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuTransferEvent@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+48], eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+52], ecx

; 1178 : 	// empty
; 1179 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuTransferEvent@@QAE@VVU_ID@@0@Z ENDP		; VuTransferEvent::VuTransferEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuTransferEvent::VuTransferEvent
; _this$ = ecx

; 1170 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuTransferEvent@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId

; 1171 : 	SetEntity(entity);

	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1172 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuTransferEvent::VuTransferEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuDeleteEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuDeleteEvent@@UAEPAXI@Z PROC			; VuDeleteEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuDeleteEvent@@UAE@XZ		; VuDeleteEvent::~VuDeleteEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuDeleteEvent@@UAEPAXI@Z ENDP			; VuDeleteEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuDeleteEvent@@MAEHPAVVuEntity@@@Z PROC	; VuDeleteEvent::Activate
; _this$ = ecx

; 1017 : VU_ERRCODE VuDeleteEvent::Activate(VuEntity* ent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1018 : 	if (ent) {

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN5@Activate

; 1019 : 		SetEntity(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity
$LN5@Activate:

; 1020 : 	}
; 1021 : 
; 1022 : 	if (ent) {

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN4@Activate

; 1023 : 		if (ent->VuState() == VU_MEM_ACTIVE) {

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN3@Activate

; 1024 : #if NO_RELEASE_EVENT
; 1025 : 			vuDatabase->Remove(ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 1026 : #else
; 1027 : 			vuDatabase->DeleteRemove(ent);
; 1028 : #endif
; 1029 : 			return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN6@Activate
	jmp	SHORT $LN4@Activate
$LN3@Activate:

; 1030 : 		} 
; 1031 : 		else if (!Entity()->IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@Activate

; 1032 : 			// prevent duplicate delete event from remote source
; 1033 : 			SetEntity(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity
$LN4@Activate:

; 1034 : 		}
; 1035 : 	}
; 1036 : 	return VU_NO_OP;

	xor	eax, eax
$LN6@Activate:

; 1037 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuDeleteEvent@@MAEHPAVVuEntity@@@Z ENDP	; VuDeleteEvent::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuDeleteEvent@@MAEHE@Z PROC			; VuDeleteEvent::Process
; _this$ = ecx

; 1039 : VU_ERRCODE VuDeleteEvent::Process(VU_BOOL){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1040 : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@Process

; 1041 : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax

; 1042 : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 1043 : 	}
; 1044 : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 1045 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuDeleteEvent@@MAEHE@Z ENDP			; VuDeleteEvent::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuDeleteEvent@@UAE@XZ PROC				; VuDeleteEvent::~VuDeleteEvent
; _this$ = ecx

; 1014 : VuDeleteEvent::~VuDeleteEvent(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuDeleteEvent@@6B@

; 1015 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuDeleteEvent@@UAE@XZ ENDP				; VuDeleteEvent::~VuDeleteEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuDeleteEvent@@QAE@VVU_ID@@0@Z PROC			; VuDeleteEvent::VuDeleteEvent
; _this$ = ecx

; 1011 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuDeleteEvent@@6B@

; 1012 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuDeleteEvent@@QAE@VVU_ID@@0@Z ENDP			; VuDeleteEvent::VuDeleteEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 8
tv87 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z PROC		; VuDeleteEvent::VuDeleteEvent
; _this$ = ecx

; 1005 : ){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@VuDeleteEv
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN4@VuDeleteEv
$LN3@VuDeleteEv:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv87[ebp], eax
$LN4@VuDeleteEv:
	push	0
	mov	edx, DWORD PTR tv87[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuDeleteEvent@@6B@

; 1006 : 	SetEntity(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 1007 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuDeleteEvent@@QAE@PAVVuEntity@@@Z ENDP		; VuDeleteEvent::VuDeleteEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuManageEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuManageEvent@@UAEPAXI@Z PROC			; VuManageEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuManageEvent@@UAE@XZ		; VuManageEvent::~VuManageEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuManageEvent@@UAEPAXI@Z ENDP			; VuManageEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuManageEvent@@UAE@XZ PROC				; VuManageEvent::~VuManageEvent
; _this$ = ecx

; 987  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuManageEvent@@6B@

; 988  : 	// empty
; 989  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuCreateEvent@@UAE@XZ		; VuCreateEvent::~VuCreateEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuManageEvent@@UAE@XZ ENDP				; VuManageEvent::~VuManageEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuManageEvent@@QAE@VVU_ID@@0@Z PROC			; VuManageEvent::VuManageEvent
; _this$ = ecx

; 982  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T1[ebp], esp
	push	0
	push	0
	push	9
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ; VuCreateEvent::VuCreateEvent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuManageEvent@@6B@

; 983  : 	// empty
; 984  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuManageEvent@@QAE@VVU_ID@@0@Z ENDP			; VuManageEvent::VuManageEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuManageEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuManageEvent::VuManageEvent
; _this$ = ecx

; 975  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _entity$[ebp]
	push	edx
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuCreateEvent::VuCreateEvent
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuManageEvent@@6B@

; 976  : 	// empty
; 977  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VuManageEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuManageEvent::VuManageEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuCreateEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuCreateEvent@@UAEPAXI@Z PROC			; VuCreateEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuCreateEvent@@UAE@XZ		; VuCreateEvent::~VuCreateEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuCreateEvent@@UAEPAXI@Z ENDP			; VuCreateEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv79 = -12						; size = 4
_this$ = -8						; size = 4
_size$ = -4						; size = 2
?LocalSize@VuCreateEvent@@ABEHXZ PROC			; VuCreateEvent::LocalSize
; _this$ = ecx

; 767  : int VuCreateEvent::LocalSize() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 768  : 	ushort size = size_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _size$[ebp], cx

; 769  : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@LocalSize

; 770  : 		size = static_cast<ushort>(Entity()->SaveSize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv79[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	mov	WORD PTR _size$[ebp], ax
$LN1@LocalSize:

; 771  : 	}
; 772  : 	return 
; 773  : #if defined(VU_USE_CLASS_INFO)
; 774  : 		CLASS_NUM_BYTES +
; 775  : #endif
; 776  : 		sizeof(vutype_) +
; 777  : 		sizeof(size_) +
; 778  : 		size
; 779  : 	;

	movzx	eax, WORD PTR _size$[ebp]
	add	eax, 4

; 780  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuCreateEvent@@ABEHXZ ENDP			; VuCreateEvent::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -104						; size = 8
$T3 = -96						; size = 8
$T4 = -88						; size = 8
$T5 = -80						; size = 8
$T6 = -72						; size = 8
_entAdd$7 = -64						; size = 8
$T8 = -56						; size = 4
_expandedSession$9 = -52				; size = 4
tv451 = -48						; size = 4
tv432 = -44						; size = 4
tv345 = -40						; size = 4
tv328 = -36						; size = 4
$T10 = -32						; size = 4
_winner$11 = -28					; size = 4
_dest$12 = -24						; size = 4
_event$13 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
?Process@VuCreateEvent@@MAEHE@Z PROC			; VuCreateEvent::Process
; _this$ = ecx

; 852  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@VuCreateEvent@@MAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 853  : 	if (expandedData_) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??B?$VuBin@VVuEntity@@@@QBE_NXZ		; VuBin<VuEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@Process

; 854  : 		return VU_NO_OP;    // already done...

	xor	eax, eax
	jmp	$LN22@Process
$LN21@Process:

; 855  : 	}
; 856  : 
; 857  : 	if (vutype_ < VU_LAST_ENTITY_TYPE) {

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+52]
	cmp	edx, 100				; 00000064H
	jge	SHORT $LN20@Process

; 858  : 		//create a vu entity
; 859  : 		expandedData_.reset(VuCreateEntity(vutype_, data_, size_));

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+52]
	push	edx
	call	?VuCreateEntity@@YAPAVVuEntity@@GPAEJ@Z	; VuCreateEntity
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z ; VuBin<VuEntity>::reset

; 860  : 	}
; 861  : 	else {

	jmp	SHORT $LN19@Process
$LN20@Process:

; 862  : 		//create a vu external entity
; 863  : 		expandedData_.reset(VuxCreateEntity(vutype_, size_, data_));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+54]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+52]
	push	edx
	call	?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z ; VuxCreateEntity
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z ; VuBin<VuEntity>::reset
$LN19@Process:

; 864  : 	}
; 865  : 
; 866  : 	if (expandedData_.get() == NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	test	eax, eax
	jne	SHORT $LN18@Process

; 867  : 		return VU_ERROR;

	or	eax, -1
	jmp	$LN22@Process
$LN18@Process:

; 868  : 	}
; 869  : 
; 870  : 	if (!expandedData_->IsLocal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN17@Process

; 871  : 		expandedData_->SetTransmissionTime(postTime_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?SetTransmissionTime@VuEntity@@QAEXK@Z	; VuEntity::SetTransmissionTime
$LN17@Process:

; 872  : 	}
; 873  : 
; 874  : 	if (
; 875  : 		Entity() && 
; 876  : 		(Entity()->OwnerId() != expandedData_->OwnerId()) && 
; 877  : 		Entity() != expandedData_
; 878  : 	){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	$LN16@Process
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN16@Process
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	call	??$?9VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z ; operator!=<VuEntity>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN16@Process

; 879  : 		if (Entity()->IsPrivate()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?IsPrivate@VuEntity@@QBEEXZ		; VuEntity::IsPrivate
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@Process

; 880  : 			//Entity()->ChangeId(expandedData_.get());
; 881  : 			vuDatabase->Remove(Entity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove

; 882  : 			Entity()->SetId(VuxGetId()); // will get a new one upon insertion

	call	?VuxGetId@@YAKXZ			; VuxGetId
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?SetId@VuEntity@@IAEXK@Z		; VuEntity::SetId

; 883  : 			vuDatabase->Insert(Entity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert

; 884  : 			SetEntity(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 885  : 		} 
; 886  : 		else {

	jmp	$LN16@Process
$LN15@Process:

; 887  : 			VuEntity* winner = ResolveWinner(Entity(), expandedData_.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	call	?ResolveWinner@@YAPAVVuEntity@@PAV1@0@Z	; ResolveWinner
	add	esp, 8
	mov	DWORD PTR _winner$11[ebp], eax

; 888  : 			if (winner == Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	cmp	DWORD PTR _winner$11[ebp], eax
	jne	SHORT $LN13@Process

; 889  : 				// this will prevent a db insert of expandedData
; 890  : 				SetEntity(expandedData_.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity
	jmp	$LN16@Process
$LN13@Process:

; 891  : 			} 
; 892  : 			else if (winner == expandedData_) {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _winner$11[ebp]
	push	ecx
	call	??$?8VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z ; operator==<VuEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN16@Process

; 893  : 				Entity()->SetOwnerId(expandedData_->OwnerId());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z	; VuEntity::SetOwnerId

; 894  : 				if (Entity()->Type() == expandedData_->Type()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	esi, ax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	movzx	eax, ax
	cmp	esi, eax
	jne	$LN10@Process

; 895  : 					// if we have the same type, then just transfer to winner
; 896  : 					VuTargetEntity *dest = 0;

	mov	DWORD PTR _dest$12[ebp], 0

; 897  : 					if (Entity()->IsGlobal()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@Process

; 898  : 						dest = vuGlobalGroup;

	mov	edx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	mov	DWORD PTR _dest$12[ebp], edx

; 899  : 					}
; 900  : 					else {

	jmp	SHORT $LN8@Process
$LN9@Process:

; 901  : 						dest = vuLocalSessionEntity->Game();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR _dest$12[ebp], eax
$LN8@Process:

; 902  : 					}
; 903  : 					VuTransferEvent *event = new VuTransferEvent(Entity(),dest);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN24@Process
	push	0
	mov	eax, DWORD PTR _dest$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0VuTransferEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuTransferEvent::VuTransferEvent
	mov	DWORD PTR tv328[ebp], eax
	jmp	SHORT $LN25@Process
$LN24@Process:
	mov	DWORD PTR tv328[ebp], 0
$LN25@Process:
	mov	ecx, DWORD PTR tv328[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _event$13[ebp], edx

; 904  : 					event->Ref();

	mov	ecx, DWORD PTR _event$13[ebp]
	call	?Ref@VuMessage@@QAEHXZ			; VuMessage::Ref

; 905  : 					VuMessageQueue::PostVuMessage(event);

	mov	eax, DWORD PTR _event$13[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 906  : 					Entity()->Handle(event);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv345[ebp], eax
	mov	ecx, DWORD PTR _event$13[ebp]
	push	ecx
	mov	edx, DWORD PTR tv345[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv345[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx

; 907  : 					vuDatabase->Handle(event);

	mov	eax, DWORD PTR _event$13[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Handle@VuDatabase@@QAEHPAVVuMessage@@@Z ; VuDatabase::Handle

; 908  : 					event->UnRef();

	mov	ecx, DWORD PTR _event$13[ebp]
	call	?UnRef@VuMessage@@QAEHXZ		; VuMessage::UnRef

; 909  : 					SetEntity(expandedData_.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 910  : 				} 
; 911  : 				else {

	jmp	SHORT $LN16@Process
$LN10@Process:

; 912  : 					type_ = VU_CREATE_EVENT;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+5], 10			; 0000000aH

; 913  : 					if (Entity()->VuState() == VU_MEM_ACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN6@Process

; 914  : 						// note: this will cause a memory leak! (but is extrememly rare)
; 915  : 						//   Basically, we have two ents with the same id, and we cannot
; 916  : 						//   keep track of both, even to know when it is safe to delete
; 917  : 						//   the abandoned entity -- so we remove it from VU, but don't
; 918  : 						//   call its destructor... the last thing we do with it is call 
; 919  : 						//   VuxRetireEntity, leaving ultimate cleanup up to the app
; 920  : 						// sfr: do we ever get here?
; 921  : 						VuReferenceEntity(Entity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 922  : 						vuDatabase->Remove(Entity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Remove@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Remove
$LN6@Process:

; 923  : 						// sfr: no more antidb
; 924  : 						//vuAntiDB->Remove(Entity());
; 925  : 					}
; 926  : 					VuxRetireEntity(Entity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	call	?VuxRetireEntity@@YAXPAVVuEntity@@@Z	; VuxRetireEntity
	add	esp, 4

; 927  : 					SetEntity(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity
$LN16@Process:

; 928  : 				}
; 929  : 			}
; 930  : 		}
; 931  : 	}
; 932  : 	if (Entity() && (type_ == VU_FULL_UPDATE_EVENT)) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN5@Process
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	cmp	eax, 15					; 0000000fH
	jne	SHORT $LN5@Process

; 933  : 		Entity()->Handle((VuFullUpdateEvent *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv432[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv432[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv432[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 934  : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	$LN22@Process
	jmp	$LN4@Process
$LN5@Process:

; 935  : 	}
; 936  : 	else if (!Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	jne	$LN4@Process

; 937  : 		// received a session entity
; 938  : 		if (expandedData_->IsSession()){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	DWORD PTR tv451[ebp], eax
	mov	eax, DWORD PTR tv451[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv451[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Process

; 939  : 			// this is address we receive. Can be a full valid address or a partial one
; 940  : 			VuSessionEntity *expandedSession = static_cast<VuSessionEntity*>(expandedData_.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	mov	DWORD PTR _expandedSession$9[ebp], eax

; 941  : 			VU_ADDRESS entAdd = expandedSession->GetAddress();

	lea	edx, DWORD PTR _entAdd$7[ebp]
	push	edx
	mov	ecx, DWORD PTR _expandedSession$9[ebp]
	call	?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ ; VuSessionEntity::GetAddress

; 942  : 			//infer IP
; 943  : 			entAdd.ip = senderAddress.ip;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _entAdd$7[ebp+4], ecx

; 944  : 			// adds entity to address table using the receive ports he told us
; 945  : 			// and IP and send inferred
; 946  : 			//VU_ADDRESSTranslation.insert(expandedData_->Id().creator_);
; 947  : 			//VU_ADDRESSTranslation.setIP(entAdd.ip, expandedData_->Id().creator_);
; 948  : 			//VU_ADDRESSTranslation.setRecvPort(entAdd.recvPort, expandedData_->Id().creator_);
; 949  : 			//VU_ADDRESSTranslation.setReliableRecvPort(entAdd.reliableRecvPort, expandedData_->Id().creator_);
; 950  : 			//VU_ADDRESSTranslation.setSendPort(entAdd.sendPort, expandedData_->Id().creator_);
; 951  : 
; 952  : 			// set entity address correctly now
; 953  : 			expandedSession->SetAddress(entAdd);

	mov	edx, DWORD PTR _entAdd$7[ebp+4]
	push	edx
	mov	eax, DWORD PTR _entAdd$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _expandedSession$9[ebp]
	call	?SetAddress@VuSessionEntity@@QAEXVVU_ADDRESS@@@Z ; VuSessionEntity::SetAddress

; 954  : 
; 955  : 			// sfr: globalgroup has no owner, and this is first client
; 956  : 			// set its owner
; 957  : 			if (vuGlobalGroup->OwnerId().creator_.value_ == 0){

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@Process

; 958  : 				vuGlobalGroup->SetOwnerId(expandedData_->OwnerId());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?SetOwnerId@VuEntity@@QAEXVVU_ID@@@Z	; VuEntity::SetOwnerId
$LN2@Process:

; 959  : 			}
; 960  : 		}
; 961  : 		SetEntity(expandedData_.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 962  : 		// OW: me123 MP Fix
; 963  : 		vuDatabase->/*Silent*/Insert(Entity());	 //me123 to silent otherwise this will

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Insert@VuDatabase@@QAEHPAVVuEntity@@@Z	; VuDatabase::Insert

; 964  : 
; 965  : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN22@Process
$LN4@Process:

; 966  : 	}
; 967  : 	return VU_NO_OP;

	xor	eax, eax
$LN22@Process:

; 968  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@VuCreateEvent@@MAEHE@Z$0:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Process@VuCreateEvent@@MAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@VuCreateEvent@@MAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@VuCreateEvent@@MAEHE@Z ENDP			; VuCreateEvent::Process
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuCreateEvent@@MAEHPAVVuEntity@@@Z PROC	; VuCreateEvent::Activate
; _this$ = ecx

; 847  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 848  : 	return VuEvent::Activate(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Activate@VuEvent@@MAEHPAVVuEntity@@@Z	; VuEvent::Activate

; 849  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuCreateEvent@@MAEHPAVVuEntity@@@Z ENDP	; VuCreateEvent::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 1
_senderAddress$ = 12					; size = 8
_senderid$ = 20						; size = 8
_target$ = 28						; size = 8
??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z PROC	; VuCreateEvent::VuCreateEvent
; _this$ = ecx

; 736  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuCreateEvent@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+52], ax
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+54], dx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _senderAddress$[ebp]
	mov	DWORD PTR [edx+60], eax
	mov	ecx, DWORD PTR _senderAddress$[ebp+4]
	mov	DWORD PTR [edx+64], ecx

; 737  : #if defined(VU_USE_CLASS_INFO)
; 738  : 	memset(classInfo_, '\0', CLASS_NUM_BYTES);
; 739  : #endif
; 740  : 	/*
; 741  : 	size_   = 0;
; 742  : 	data_   = 0;
; 743  : 	vutype_ = 0;
; 744  : 	expandedData_ = 0;
; 745  : 
; 746  : 	this->senderAddress = senderAddress;*/
; 747  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuCreateEvent@@IAE@EVVU_ADDRESS@@VVU_ID@@1@Z ENDP	; VuCreateEvent::VuCreateEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 1
_ent$ = 12						; size = 4
_target$ = 16						; size = 4
_loopback$ = 20						; size = 1
??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuCreateEvent::VuCreateEvent
; _this$ = ecx

; 716  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	movzx	eax, BYTE PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuCreateEvent@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+52], ax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+54], ax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], 0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS

; 717  : 	SetEntity(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 718  : #if defined(VU_USE_CLASS_INFO)
; 719  : 	memcpy(classInfo_, ent->EntityType()->classInfo_, CLASS_NUM_BYTES);
; 720  : #endif
; 721  : 	/*
; 722  : 	vutype_ = ent->Type();
; 723  : 	size_ = 0;
; 724  : 	data_ = 0;
; 725  : 	expandedData_ = 0;*/
; 726  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__unwindfunclet$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuCreateEvent@@IAE@EPAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuCreateEvent::VuCreateEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoSend@VuCreateEvent@@UAEEXZ PROC			; VuCreateEvent::DoSend
; _this$ = ecx

; 807  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 808  : 	if (Entity() && Entity()->VuState() == VU_MEM_ACTIVE) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@DoSend
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN1@DoSend

; 809  : 		return TRUE;

	mov	al, 1
	jmp	SHORT $LN2@DoSend
$LN1@DoSend:

; 810  : 	}
; 811  : 	return FALSE;

	xor	al, al
$LN2@DoSend:

; 812  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoSend@VuCreateEvent@@UAEEXZ ENDP			; VuCreateEvent::DoSend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_ptr$1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
tv148 = -20						; size = 4
tv80 = -16						; size = 4
_retval$ = -12						; size = 4
_this$ = -8						; size = 4
_oldsize$ = -4						; size = 2
_buf$ = 8						; size = 4
?Encode@VuCreateEvent@@UAEHPAPAE@Z PROC			; VuCreateEvent::Encode
; _this$ = ecx

; 815  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 816  : 	ushort oldsize = size_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _oldsize$[ebp], cx

; 817  : 
; 818  : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN4@Encode

; 819  : 		size_ = static_cast<ushort>(Entity()->SaveSize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv80[ebp], eax
	mov	edx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+54], ax
$LN4@Encode:

; 820  : 	}
; 821  : 	if (Entity() && size_) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN3@Encode
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+54]
	test	eax, eax
	je	SHORT $LN3@Encode

; 822  : 		// copying ent in save allows multiple send's of same event
; 823  : 		if (size_ > oldsize) {

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+54]
	movzx	eax, WORD PTR _oldsize$[ebp]
	cmp	edx, eax
	jle	SHORT $LN2@Encode

; 824  : 			if (data_) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN1@Encode

; 825  : 				delete [] data_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@Encode:

; 826  : 			}
; 827  : 			data_ = new VU_BYTE[size_];

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+54]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+56], edx
$LN2@Encode:

; 828  : 		}
; 829  : 		VU_BYTE *ptr = data_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ptr$1[ebp], ecx

; 830  : 		Entity()->Save(&ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv148[ebp], eax
	lea	edx, DWORD PTR _ptr$1[ebp]
	push	edx
	mov	eax, DWORD PTR tv148[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv148[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
$LN3@Encode:

; 831  : 	}
; 832  : 
; 833  : 	int retval = VuEvent::Encode(buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuEvent@@UAEHPAPAE@Z		; VuEvent::Encode
	mov	DWORD PTR _retval$[ebp], eax

; 834  : 
; 835  : #if defined(VU_USE_CLASS_INFO)
; 836  : 	memcpy(*buf, classInfo_, CLASS_NUM_BYTES); *buf += CLASS_NUM_BYTES;
; 837  : #endif
; 838  : 	memcpy(*buf, &vutype_,  sizeof(vutype_));  *buf += sizeof(vutype_);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx], eax

; 839  : 	memcpy(*buf, &size_,    sizeof(size_));    *buf += sizeof(size_);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 54					; 00000036H
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx], eax

; 840  : 	memcpy(*buf, data_,     size_);	     *buf += size_;

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+54]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+54]
	mov	ecx, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], eax

; 841  : 	retval += VuCreateEvent::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuCreateEvent@@ABEHXZ	; VuCreateEvent::LocalSize
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 842  : 
; 843  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 844  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuCreateEvent@@UAEHPAPAE@Z ENDP			; VuCreateEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_retval$ = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
_oldsize$ = -4						; size = 2
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuCreateEvent@@UAEHPAPAEPAJ@Z PROC		; VuCreateEvent::Decode
; _this$ = ecx

; 786  : int VuCreateEvent::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 787  : 
; 788  : 	ushort oldsize = size_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _oldsize$[ebp], cx

; 789  : 	int retval = VuEvent::Decode(buf, rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuEvent@@UAEHPAPAEPAJ@Z		; VuEvent::Decode
	mov	DWORD PTR _retval$[ebp], eax

; 790  : #if defined(VU_USE_CLASS_INFO)
; 791  : 	memcpychk(classInfo_, buf, CLASS_NUM_BYTES, rem);
; 792  : #endif
; 793  : 	memcpychk(&vutype_,   buf, sizeof(vutype_), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 794  : 	memcpychk(&size_,     buf, sizeof(size_), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 54					; 00000036H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 795  : 
; 796  : 	if (!data_ || oldsize != size_) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN1@Decode
	movzx	edx, WORD PTR _oldsize$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	cmp	edx, ecx
	je	SHORT $LN2@Decode
$LN1@Decode:

; 797  : 		delete [] data_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 798  : 		data_ = new VU_BYTE[size_];

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+54]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+56], edx
$LN2@Decode:

; 799  : 	}
; 800  : 	memcpychk(data_, buf, size_, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+54]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 801  : 
; 802  : 	// note: this MUST be called after capturing size_ (above)
; 803  : 	return (retval + VuCreateEvent::LocalSize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuCreateEvent@@ABEHXZ	; VuCreateEvent::LocalSize
	add	eax, DWORD PTR _retval$[ebp]

; 804  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuCreateEvent@@UAEHPAPAEPAJ@Z ENDP		; VuCreateEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuCreateEvent@@UBEHXZ PROC			; VuCreateEvent::Size
; _this$ = ecx

; 782  : int VuCreateEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 783  : 	return VUEVENT_SIZE + VuCreateEvent::LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LocalSize@VuCreateEvent@@ABEHXZ	; VuCreateEvent::LocalSize
	add	eax, 12					; 0000000cH

; 784  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuCreateEvent@@UBEHXZ ENDP			; VuCreateEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuCreateEvent@@UAE@XZ PROC				; VuCreateEvent::~VuCreateEvent
; _this$ = ecx

; 750  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuCreateEvent@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuCreateEvent@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 751  : 	delete [] data_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 752  : 	// sfr: no more antidb
; 753  : 	/*
; 754  : 	if (
; 755  : 		Entity() && // we have an ent ...
; 756  : 		Entity()->VuState() == VU_MEM_ACTIVE &&	               // & have not yet removed it...
; 757  : 		Entity()->Id().creator_ == vuLocalSession.creator_ &&  // & it has our session tag...
; 758  : 		vuDatabase->Find(Entity()->Id()) == 0 	               // & it's not in the DB...
; 759  : 	) {
; 760  : 		vuAntiDB->Insert(Entity());			// ==> put it in the anti DB
; 761  : 	}
; 762  : 	*/
; 763  : 	// sfr: smartpointer
; 764  : 	//VuDeReferenceEntity(expandedData_);
; 765  : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuCreateEvent@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??1VuCreateEvent@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuCreateEvent@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuCreateEvent@@UAE@XZ ENDP				; VuCreateEvent::~VuCreateEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_senderAddress$ = 8					; size = 8
_senderid$ = 16						; size = 8
_target$ = 24						; size = 8
??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z PROC	; VuCreateEvent::VuCreateEvent
; _this$ = ecx

; 696  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@0@Z		; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuCreateEvent@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+52], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+54], cx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _senderAddress$[ebp]
	mov	DWORD PTR [ecx+60], edx
	mov	eax, DWORD PTR _senderAddress$[ebp+4]
	mov	DWORD PTR [ecx+64], eax

; 697  : #if defined(VU_USE_CLASS_INFO)
; 698  : 	memset(classInfo_, '\0', CLASS_NUM_BYTES);
; 699  : #endif
; 700  : 	/*
; 701  : 	size_   = 0;
; 702  : 	data_   = 0;
; 703  : 	vutype_ = 0;
; 704  : 	expandedData_ = 0;
; 705  : 	this->senderAddress = senderAddress;*/
; 706  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__ehhandler$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuCreateEvent@@QAE@VVU_ADDRESS@@VVU_ID@@1@Z ENDP	; VuCreateEvent::VuCreateEvent
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_target$ = 12						; size = 4
_loopback$ = 16						; size = 1
??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z PROC ; VuCreateEvent::VuCreateEvent
; _this$ = ecx

; 679  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuEvent::VuEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuCreateEvent@@6B@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Type@VuEntity@@QBEGXZ			; VuEntity::Type
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+52], ax
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+54], dx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], 0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS

; 680  : #if defined(VU_USE_CLASS_INFO)
; 681  : 	memcpy(classInfo_, entity->EntityType()->classInfo_, CLASS_NUM_BYTES);
; 682  : #endif
; 683  : /*	vutype_ = entity->Type();
; 684  : 	size_   = 0;
; 685  : 	data_   = 0;
; 686  : 	expandedData_ = 0;*/
; 687  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
__unwindfunclet$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuCreateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ENDP ; VuCreateEvent::VuCreateEvent
; Function compile flags: /Odtp
;	COMDAT ??_GVuEvent@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuEvent@@UAEPAXI@Z PROC				; VuEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuEvent@@UAE@XZ			; VuEvent::~VuEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuEvent@@UAEPAXI@Z ENDP				; VuEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuEvent@@ABEHXZ PROC				; VuEvent::LocalSize
; _this$ = ecx

; 647  : int VuEvent::LocalSize() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 648  : 	return (VUEVENT_LOCALSIZE);

	mov	eax, 4

; 649  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuEvent@@ABEHXZ ENDP				; VuEvent::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuEvent@@MAEHPAVVuEntity@@@Z PROC		; VuEvent::Activate
; _this$ = ecx

; 636  : int VuEvent::Activate(VuEntity* ent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 637  : 	SetEntity(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 638  : 	if (IsLocal() && ent){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuMessage@@QBEEXZ		; VuMessage::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Activate
	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN1@Activate

; 639  : 		updateTime_ = ent->LastUpdateTime();

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?LastUpdateTime@VuEntity@@QBEKXZ	; VuEntity::LastUpdateTime
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax
$LN1@Activate:

; 640  : 	}
; 641  : 	return VU_SUCCESS;

	mov	eax, 1

; 642  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuEvent@@MAEHPAVVuEntity@@@Z ENDP		; VuEvent::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 1
_senderid$ = 12						; size = 8
_target$ = 20						; size = 8
??0VuEvent@@IAE@EVVU_ID@@0@Z PROC			; VuEvent::VuEvent
; _this$ = ecx

; 630  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@0@Z		; VuMessage::VuMessage
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuEvent@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+44], ecx

; 631  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0VuEvent@@IAE@EVVU_ID@@0@Z ENDP			; VuEvent::VuEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 1
_entityId$ = 12						; size = 8
_target$ = 20						; size = 4
_loopback$ = 24						; size = 1
??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z PROC	; VuEvent::VuEvent
; _this$ = ecx

; 625  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _entityId$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuEvent@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	mov	DWORD PTR [eax+44], ecx

; 626  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0VuEvent@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ENDP	; VuEvent::VuEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuEvent@@UAEHPAPAE@Z PROC			; VuEvent::Encode
; _this$ = ecx

; 663  : int VuEvent::Encode(VU_BYTE** buf){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 664  : 	VuMessage::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuMessage@@MAEHPAPAE@Z		; VuMessage::Encode

; 665  : 
; 666  : 	memcpy(*buf, &updateTime_, sizeof(updateTime_)); *buf += sizeof(updateTime_);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 667  : 
; 668  : 	return (VUEVENT_SIZE);

	mov	eax, 12					; 0000000cH

; 669  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuEvent@@UAEHPAPAE@Z ENDP			; VuEvent::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuEvent@@UAEHPAPAEPAJ@Z PROC			; VuEvent::Decode
; _this$ = ecx

; 657  : int VuEvent::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 658  : 	VuMessage::Decode(buf, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuMessage@@MAEHPAPAEPAJ@Z	; VuMessage::Decode

; 659  : 	memcpychk(&updateTime_, buf, sizeof(updateTime_), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 660  : 	return (VUEVENT_SIZE);

	mov	eax, 12					; 0000000cH

; 661  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuEvent@@UAEHPAPAEPAJ@Z ENDP			; VuEvent::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuEvent@@UBEHXZ PROC				; VuEvent::Size
; _this$ = ecx

; 653  : int VuEvent::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 654  : 	return (VUEVENT_SIZE);

	mov	eax, 12					; 0000000cH

; 655  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuEvent@@UBEHXZ ENDP				; VuEvent::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuEvent@@UAE@XZ PROC					; VuEvent::~VuEvent
; _this$ = ecx

; 633  : VuEvent::~VuEvent(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuEvent@@6B@

; 634  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuEvent@@UAE@XZ ENDP					; VuEvent::~VuEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuPullRequest@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuPullRequest@@UAEPAXI@Z PROC			; VuPullRequest::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuPullRequest@@UAE@XZ		; VuPullRequest::~VuPullRequest
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuPullRequest@@UAEPAXI@Z ENDP			; VuPullRequest::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -76						; size = 8
$T3 = -68						; size = 8
$T4 = -60						; size = 8
$T5 = -52						; size = 8
$T6 = -44						; size = 4
_resp$7 = -40						; size = 4
tv188 = -36						; size = 4
$T8 = -32						; size = 4
tv130 = -28						; size = 4
_retval$ = -24						; size = 4
_sender$9 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
?Process@VuPullRequest@@MAEHE@Z PROC			; VuPullRequest::Process
; _this$ = ecx

; 599  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@VuPullRequest@@MAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 600  : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 601  : 
; 602  : 	if (!IsLocal() && Destination() == vuLocalSession) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuMessage@@QBEEXZ		; VuMessage::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	$LN4@Process
	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN4@Process

; 603  : 		if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN3@Process

; 604  : 			retval = Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv130[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv130[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	mov	DWORD PTR _retval$[ebp], eax

; 605  : 		}
; 606  : 		else {

	jmp	$LN4@Process
$LN3@Process:

; 607  : 			VuTargetEntity* sender = (VuTargetEntity*)vuDatabase->Find(Sender());

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sender$9[ebp], eax

; 608  : 			if (sender && sender->IsTarget()) {

	cmp	DWORD PTR _sender$9[ebp], 0
	je	$LN4@Process
	mov	ecx, DWORD PTR _sender$9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sender$9[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@Process

; 609  : 				VuMessage* resp = new VuErrorMessage(VU_NO_SUCH_ENTITY_ERROR, Sender(),
; 610  : 								EntityId(), sender);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN7@Process
	mov	edx, DWORD PTR _sender$9[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	1
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z ; VuErrorMessage::VuErrorMessage
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN8@Process
$LN7@Process:
	mov	DWORD PTR tv188[ebp], 0
$LN8@Process:
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _resp$7[ebp], ecx

; 611  : 				resp->RequestReliableTransmit();

	mov	ecx, DWORD PTR _resp$7[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 612  : 				VuMessageQueue::PostVuMessage(resp);

	mov	edx, DWORD PTR _resp$7[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 613  : 				retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN4@Process:

; 614  : 			}
; 615  : 		}
; 616  : 	}
; 617  : 
; 618  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 619  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@VuPullRequest@@MAEHE@Z$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Process@VuPullRequest@@MAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@VuPullRequest@@MAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@VuPullRequest@@MAEHE@Z ENDP			; VuPullRequest::Process
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuPullRequest@@UAE@XZ PROC				; VuPullRequest::~VuPullRequest
; _this$ = ecx

; 593  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPullRequest@@6B@

; 594  : 	// empty
; 595  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRequestMessage@@UAE@XZ		; VuRequestMessage::~VuRequestMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuPullRequest@@UAE@XZ ENDP				; VuPullRequest::~VuPullRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuPullRequest@@QAE@VVU_ID@@0@Z PROC			; VuPullRequest::VuPullRequest
; _this$ = ecx

; 588  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@0@Z	; VuRequestMessage::VuRequestMessage
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuPullRequest@@6B@

; 589  : 	// empty
; 590  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuPullRequest@@QAE@VVU_ID@@0@Z ENDP			; VuPullRequest::VuPullRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_entityId$ = 8						; size = 8
_target$ = 16						; size = 4
??0VuPullRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z PROC ; VuPullRequest::VuPullRequest
; _this$ = ecx

; 581  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp]
	push	edx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z ; VuRequestMessage::VuRequestMessage
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPullRequest@@6B@

; 582  : 	// empty
; 583  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VuPullRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ENDP ; VuPullRequest::VuPullRequest
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuPushRequest@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuPushRequest@@UAEPAXI@Z PROC			; VuPushRequest::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuPushRequest@@UAE@XZ		; VuPushRequest::~VuPushRequest
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuPushRequest@@UAEPAXI@Z ENDP			; VuPushRequest::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -76						; size = 8
$T3 = -68						; size = 8
$T4 = -60						; size = 8
$T5 = -52						; size = 8
$T6 = -44						; size = 4
_resp$7 = -40						; size = 4
tv188 = -36						; size = 4
$T8 = -32						; size = 4
tv130 = -28						; size = 4
_retval$ = -24						; size = 4
_sender$9 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 1
?Process@VuPushRequest@@MAEHE@Z PROC			; VuPushRequest::Process
; _this$ = ecx

; 556  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@VuPushRequest@@MAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 558  : 
; 559  : 	if (!IsLocal() && Destination() == vuLocalSession) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuMessage@@QBEEXZ		; VuMessage::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	$LN4@Process
	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	$LN4@Process

; 560  : 		if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN3@Process

; 561  : 			retval = Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv130[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv130[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	mov	DWORD PTR _retval$[ebp], eax

; 562  : 		}
; 563  : 		else {

	jmp	$LN4@Process
$LN3@Process:

; 564  : 			VuTargetEntity* sender = (VuTargetEntity*)vuDatabase->Find(Sender());

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sender$9[ebp], eax

; 565  : 			if (sender && sender->IsTarget()) {

	cmp	DWORD PTR _sender$9[ebp], 0
	je	$LN4@Process
	mov	ecx, DWORD PTR _sender$9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sender$9[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@Process

; 566  : 				VuMessage* resp = new VuErrorMessage(VU_NO_SUCH_ENTITY_ERROR, Sender(),
; 567  : 								EntityId(), sender);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN7@Process
	mov	edx, DWORD PTR _sender$9[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	1
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z ; VuErrorMessage::VuErrorMessage
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN8@Process
$LN7@Process:
	mov	DWORD PTR tv188[ebp], 0
$LN8@Process:
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _resp$7[ebp], ecx

; 568  : 				resp->RequestReliableTransmit();

	mov	ecx, DWORD PTR _resp$7[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 569  : 				VuMessageQueue::PostVuMessage(resp);

	mov	edx, DWORD PTR _resp$7[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 570  : 				retval = VU_SUCCESS;

	mov	DWORD PTR _retval$[ebp], 1
$LN4@Process:

; 571  : 			}
; 572  : 		}
; 573  : 	}
; 574  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 575  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@VuPushRequest@@MAEHE@Z$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Process@VuPushRequest@@MAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@VuPushRequest@@MAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@VuPushRequest@@MAEHE@Z ENDP			; VuPushRequest::Process
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuPushRequest@@UAE@XZ PROC				; VuPushRequest::~VuPushRequest
; _this$ = ecx

; 550  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPushRequest@@6B@

; 551  : 	// empty
; 552  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRequestMessage@@UAE@XZ		; VuRequestMessage::~VuRequestMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuPushRequest@@UAE@XZ ENDP				; VuPushRequest::~VuPushRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuPushRequest@@QAE@VVU_ID@@0@Z PROC			; VuPushRequest::VuPushRequest
; _this$ = ecx

; 545  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@0@Z	; VuRequestMessage::VuRequestMessage
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuPushRequest@@6B@

; 546  : 	// empty
; 547  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuPushRequest@@QAE@VVU_ID@@0@Z ENDP			; VuPushRequest::VuPushRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_entityId$ = 8						; size = 8
_target$ = 16						; size = 4
??0VuPushRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z PROC ; VuPushRequest::VuPushRequest
; _this$ = ecx

; 538  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp]
	push	edx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z ; VuRequestMessage::VuRequestMessage
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuPushRequest@@6B@

; 539  : 	// empty
; 540  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VuPushRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ENDP ; VuPushRequest::VuPushRequest
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuGetRequest@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuGetRequest@@UAEPAXI@Z PROC			; VuGetRequest::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGetRequest@@UAE@XZ			; VuGetRequest::~VuGetRequest
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuGetRequest@@UAEPAXI@Z ENDP			; VuGetRequest::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -356						; size = 8
$T3 = -348						; size = 8
$T4 = -340						; size = 8
$T5 = -332						; size = 8
$T6 = -324						; size = 8
$T7 = -316						; size = 8
$T8 = -308						; size = 8
$T9 = -300						; size = 8
$T10 = -292						; size = 8
$T11 = -284						; size = 8
$T12 = -276						; size = 8
$T13 = -268						; size = 8
$T14 = -260						; size = 8
$T15 = -252						; size = 8
$T16 = -244						; size = 8
_iter$17 = -236						; size = 24
_iter$18 = -212						; size = 24
_iter$19 = -188						; size = 24
$T20 = -164						; size = 4
$T21 = -160						; size = 4
$T22 = -156						; size = 4
$T23 = -152						; size = 4
$T24 = -148						; size = 4
$T25 = -144						; size = 4
$T26 = -140						; size = 4
$T27 = -136						; size = 4
$T28 = -132						; size = 4
$T29 = -128						; size = 4
$T30 = -124						; size = 4
$T31 = -120						; size = 4
_resp$32 = -116						; size = 4
tv159 = -112						; size = 4
tv586 = -108						; size = 4
$T33 = -104						; size = 4
$T34 = -100						; size = 4
tv339 = -96						; size = 4
tv541 = -92						; size = 4
tv247 = -88						; size = 4
$T35 = -84						; size = 4
$T36 = -80						; size = 4
tv525 = -76						; size = 4
$T37 = -72						; size = 4
$T38 = -68						; size = 4
$T39 = -64						; size = 4
tv461 = -60						; size = 4
$T40 = -56						; size = 4
$T41 = -52						; size = 4
tv388 = -48						; size = 4
tv264 = -44						; size = 4
_resp$42 = -40						; size = 4
_ent$43 = -36						; size = 4
_ent$44 = -32						; size = 4
_ent$45 = -28						; size = 4
_sender$ = -24						; size = 4
_resp$46 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_autod$ = 8						; size = 1
?Process@VuGetRequest@@MAEHE@Z PROC			; VuGetRequest::Process
; _this$ = ecx

; 420  : VU_ERRCODE VuGetRequest::Process(VU_BOOL autod){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@VuGetRequest@@MAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 421  : 	VuTargetEntity* sender = (VuTargetEntity *)vuDatabase->Find(Sender());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _sender$[ebp], eax

; 422  : 
; 423  : 	//sfr: took sender out of if and return noop here
; 424  : 	if (IsLocal() || (sender == NULL)) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuMessage@@QBEEXZ		; VuMessage::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN34@Process
	cmp	DWORD PTR _sender$[ebp], 0
	jne	SHORT $LN35@Process
$LN34@Process:

; 425  : 		return VU_NO_OP;

	xor	eax, eax
	jmp	$LN36@Process
$LN35@Process:

; 426  : 	}
; 427  : 
; 428  : 	// sender is a target entity
; 429  : 	if (sender->IsTarget()){

	mov	ecx, DWORD PTR _sender$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sender$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN33@Process

; 430  : 		VuMessage *resp = 0;

	mov	DWORD PTR _resp$46[ebp], 0

; 431  : 		if (autod){

	movzx	edx, BYTE PTR _autod$[ebp]
	test	edx, edx
	je	SHORT $LN32@Process

; 432  : 			resp = new VuErrorMessage(VU_NOT_AVAILABLE_ERROR, Sender(), EntityId(), sender);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T33[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T33[ebp], 0
	je	SHORT $LN38@Process
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	6
	mov	ecx, DWORD PTR $T33[ebp]
	call	??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z ; VuErrorMessage::VuErrorMessage
	mov	DWORD PTR tv159[ebp], eax
	jmp	SHORT $LN39@Process
$LN38@Process:
	mov	DWORD PTR tv159[ebp], 0
$LN39@Process:
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR $T21[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T21[ebp]
	mov	DWORD PTR _resp$46[ebp], edx
	jmp	$LN31@Process
$LN32@Process:

; 433  : 		}
; 434  : 		// get ALL ents
; 435  : 		else if (entityId_ == vuNullId){

	push	OFFSET ?vuNullId@@3VVU_ID@@A		; vuNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN30@Process

; 436  : 			if ((tgtid_ == vuGlobalGroup->Id()) || (tgtid_ == vuLocalSession)){

	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN28@Process
	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN29@Process
$LN28@Process:

; 437  : 				// get all _global_ ents
; 438  : 				VuDatabaseIterator iter;

	lea	ecx, DWORD PTR _iter$18[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 439  : 				VuEntity* ent = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$18[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$45[ebp], eax
$LN27@Process:

; 440  : 				while (ent) {

	cmp	DWORD PTR _ent$45[ebp], 0
	je	$LN26@Process

; 441  : 					if (!ent->IsPrivate() && ent->IsGlobal()) {

	mov	ecx, DWORD PTR _ent$45[ebp]
	call	?IsPrivate@VuEntity@@QBEEXZ		; VuEntity::IsPrivate
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN25@Process
	mov	ecx, DWORD PTR _ent$45[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	edx, al
	test	edx, edx
	je	$LN25@Process

; 442  : 						if (ent->Id() != sender->Id()) {

	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T13[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$45[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN25@Process

; 443  : 							if (ent->IsLocal ()){

	mov	ecx, DWORD PTR _ent$45[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@Process

; 444  : 								resp = new VuFullUpdateEvent(ent, sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T40[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T40[ebp], 0
	je	SHORT $LN40@Process
	push	0
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$45[ebp]
	push	edx
	mov	ecx, DWORD PTR $T40[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv247[ebp], eax
	jmp	SHORT $LN41@Process
$LN40@Process:
	mov	DWORD PTR tv247[ebp], 0
$LN41@Process:
	mov	eax, DWORD PTR tv247[ebp]
	mov	DWORD PTR $T31[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T31[ebp]
	mov	DWORD PTR _resp$46[ebp], ecx

; 445  : 								resp->RequestOutOfBandTransmit ();

	mov	ecx, DWORD PTR _resp$46[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 446  : 								resp->RequestReliableTransmit();

	mov	ecx, DWORD PTR _resp$46[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 447  : 								VuMessageQueue::PostVuMessage(resp);

	mov	edx, DWORD PTR _resp$46[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 448  : 								//resp->Send();
; 449  : 							}
; 450  : 							else {

	jmp	SHORT $LN25@Process
$LN23@Process:

; 451  : 								resp = new VuBroadcastGlobalEvent(ent, sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T39[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T39[ebp], 0
	je	SHORT $LN42@Process
	push	0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$45[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T39[ebp]
	call	??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
	mov	DWORD PTR tv264[ebp], eax
	jmp	SHORT $LN43@Process
$LN42@Process:
	mov	DWORD PTR tv264[ebp], 0
$LN43@Process:
	mov	edx, DWORD PTR tv264[ebp]
	mov	DWORD PTR $T28[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T28[ebp]
	mov	DWORD PTR _resp$46[ebp], eax

; 452  : 								resp->RequestReliableTransmit();

	mov	ecx, DWORD PTR _resp$46[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 453  : 								resp->RequestOutOfBandTransmit ();

	mov	ecx, DWORD PTR _resp$46[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 454  : 								VuMessageQueue::PostVuMessage(resp);

	mov	ecx, DWORD PTR _resp$46[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN25@Process:

; 455  : 								//resp->Send();
; 456  : 							}
; 457  : 						}
; 458  : 					}
; 459  : 					ent = iter.GetNext();

	lea	ecx, DWORD PTR _iter$18[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _ent$45[ebp], eax

; 460  : 				}

	jmp	$LN27@Process
$LN26@Process:

; 461  : 				return VU_SUCCESS;

	mov	DWORD PTR $T22[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$18[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
	mov	eax, DWORD PTR $T22[ebp]
	jmp	$LN36@Process
	jmp	$LN21@Process
$LN29@Process:

; 462  : 			} 
; 463  : 			else if (tgtid_ == vuLocalSessionEntity->GameId()){

	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?GameId@VuSessionEntity@@QAE?AVVU_ID@@XZ ; VuSessionEntity::GameId
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN21@Process

; 464  : 				// get all _game_ ents
; 465  : 				VuDatabaseIterator iter;

	lea	ecx, DWORD PTR _iter$17[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 466  : 				VuEntity* ent = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$17[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$43[ebp], eax
$LN19@Process:

; 467  : 				while (ent){

	cmp	DWORD PTR _ent$43[ebp], 0
	je	$LN18@Process

; 468  : 					if (!ent->IsPrivate() && ent->IsLocal() && !ent->IsGlobal()){

	mov	ecx, DWORD PTR _ent$43[ebp]
	call	?IsPrivate@VuEntity@@QBEEXZ		; VuEntity::IsPrivate
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN17@Process
	mov	ecx, DWORD PTR _ent$43[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	$LN17@Process
	mov	ecx, DWORD PTR _ent$43[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	eax, al
	test	eax, eax
	jne	$LN17@Process

; 469  : 						if (ent->Id() != sender->Id()){

	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sender$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _ent$43[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@Process

; 470  : 							resp = new VuFullUpdateEvent(ent, sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T37[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T37[ebp], 0
	je	SHORT $LN44@Process
	push	0
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$43[ebp]
	push	edx
	mov	ecx, DWORD PTR $T37[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv339[ebp], eax
	jmp	SHORT $LN45@Process
$LN44@Process:
	mov	DWORD PTR tv339[ebp], 0
$LN45@Process:
	mov	eax, DWORD PTR tv339[ebp]
	mov	DWORD PTR $T26[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T26[ebp]
	mov	DWORD PTR _resp$46[ebp], ecx

; 471  : 							resp->RequestReliableTransmit();

	mov	ecx, DWORD PTR _resp$46[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 472  : 							VuMessageQueue::PostVuMessage(resp);

	mov	edx, DWORD PTR _resp$46[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN17@Process:

; 473  : 						}
; 474  : 					}
; 475  : 					ent = iter.GetNext();

	lea	ecx, DWORD PTR _iter$17[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _ent$43[ebp], eax

; 476  : 				}

	jmp	$LN19@Process
$LN18@Process:

; 477  : 				return VU_SUCCESS;

	mov	DWORD PTR $T20[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$17[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
	mov	eax, DWORD PTR $T20[ebp]
	jmp	$LN36@Process
$LN21@Process:

; 478  : 			}
; 479  : 		} 

	jmp	$LN31@Process
$LN30@Process:

; 480  : 		else if (Entity() && (Entity()->OwnerId() == vuLocalSession)){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	$LN14@Process
	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@Process

; 481  : 			resp = new VuFullUpdateEvent(Entity(), sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T36[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T36[ebp], 0
	je	SHORT $LN46@Process
	push	0
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR $T36[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv388[ebp], eax
	jmp	SHORT $LN47@Process
$LN46@Process:
	mov	DWORD PTR tv388[ebp], 0
$LN47@Process:
	mov	eax, DWORD PTR tv388[ebp]
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T24[ebp]
	mov	DWORD PTR _resp$46[ebp], ecx
	jmp	$LN31@Process
$LN14@Process:

; 482  : 		} 
; 483  : 		else if (Destination() == vuLocalSession){

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A	; vuLocalSession
	lea	edx, DWORD PTR $T15[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destination@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Destination
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@Process

; 484  : 			// we were asked specifically, so send the error response
; 485  : 			resp = new VuErrorMessage(VU_NO_SUCH_ENTITY_ERROR, Sender(), EntityId(), sender);

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T41[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T41[ebp], 0
	je	SHORT $LN48@Process
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T14[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sender@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::Sender
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	1
	mov	ecx, DWORD PTR $T41[ebp]
	call	??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z ; VuErrorMessage::VuErrorMessage
	mov	DWORD PTR tv461[ebp], eax
	jmp	SHORT $LN49@Process
$LN48@Process:
	mov	DWORD PTR tv461[ebp], 0
$LN49@Process:
	mov	eax, DWORD PTR tv461[ebp]
	mov	DWORD PTR $T30[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T30[ebp]
	mov	DWORD PTR _resp$46[ebp], ecx
$LN31@Process:

; 486  : 		}
; 487  : 		//send response
; 488  : 		if (resp){

	cmp	DWORD PTR _resp$46[ebp], 0
	je	SHORT $LN11@Process

; 489  : 			resp->RequestReliableTransmit();

	mov	ecx, DWORD PTR _resp$46[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 490  : 			VuMessageQueue::PostVuMessage(resp);

	mov	edx, DWORD PTR _resp$46[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 491  : 			return VU_SUCCESS;

	mov	eax, 1
	jmp	$LN36@Process
$LN11@Process:

; 492  : 		}
; 493  : 	}
; 494  : 	// how can we get here?
; 495  : 	// does it mean sender == NULL or sender is not a targetEntity?
; 496  : 	else {

	jmp	$LN10@Process
$LN33@Process:

; 497  : 		if (entityId_ == vuNullId){

	push	OFFSET ?vuNullId@@3VVU_ID@@A		; vuNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	$LN9@Process

; 498  : 			// get all _global_ ents
; 499  : 			VuDatabaseIterator iter;

	lea	ecx, DWORD PTR _iter$19[ebp]
	call	??0VuDatabaseIterator@@QAE@XZ		; VuDatabaseIterator::VuDatabaseIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 8

; 500  : 			VuEntity* ent = iter.GetFirst();

	lea	ecx, DWORD PTR _iter$19[ebp]
	call	?GetFirst@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetFirst
	mov	DWORD PTR _ent$44[ebp], eax

; 501  : 			VuMessage *resp = 0;

	mov	DWORD PTR _resp$42[ebp], 0
$LN8@Process:

; 502  : 			while (ent){

	cmp	DWORD PTR _ent$44[ebp], 0
	je	$LN7@Process

; 503  : 				if (!ent->IsPrivate() && ent->IsGlobal()){

	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?IsPrivate@VuEntity@@QBEEXZ		; VuEntity::IsPrivate
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN6@Process
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	edx, al
	test	edx, edx
	je	$LN6@Process

; 504  : 					if ((ent->Id() != sender->Id())){

	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN6@Process

; 505  : 						if (ent->IsLocal ()){

	mov	ecx, DWORD PTR _ent$44[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Process

; 506  : 							resp = new VuFullUpdateEvent(ent, sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T38[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T38[ebp], 0
	je	SHORT $LN50@Process
	push	0
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$44[ebp]
	push	edx
	mov	ecx, DWORD PTR $T38[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv525[ebp], eax
	jmp	SHORT $LN51@Process
$LN50@Process:
	mov	DWORD PTR tv525[ebp], 0
$LN51@Process:
	mov	eax, DWORD PTR tv525[ebp]
	mov	DWORD PTR $T29[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR $T29[ebp]
	mov	DWORD PTR _resp$42[ebp], ecx

; 507  : 							resp->RequestOutOfBandTransmit ();

	mov	ecx, DWORD PTR _resp$42[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 508  : 							VuMessageQueue::PostVuMessage(resp);

	mov	edx, DWORD PTR _resp$42[ebp]
	push	edx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 509  : 						}
; 510  : 						else {

	jmp	SHORT $LN6@Process
$LN4@Process:

; 511  : 							resp = new VuBroadcastGlobalEvent(ent, sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T35[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T35[ebp], 0
	je	SHORT $LN52@Process
	push	0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$44[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T35[ebp]
	call	??0VuBroadcastGlobalEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuBroadcastGlobalEvent::VuBroadcastGlobalEvent
	mov	DWORD PTR tv541[ebp], eax
	jmp	SHORT $LN53@Process
$LN52@Process:
	mov	DWORD PTR tv541[ebp], 0
$LN53@Process:
	mov	edx, DWORD PTR tv541[ebp]
	mov	DWORD PTR $T27[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR $T27[ebp]
	mov	DWORD PTR _resp$42[ebp], eax

; 512  : 							resp->RequestOutOfBandTransmit ();

	mov	ecx, DWORD PTR _resp$42[ebp]
	call	?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestOutOfBandTransmit

; 513  : 							VuMessageQueue::PostVuMessage(resp);

	mov	ecx, DWORD PTR _resp$42[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4
$LN6@Process:

; 514  : 						}
; 515  : 					}
; 516  : 				}
; 517  : 				ent = iter.GetNext();

	lea	ecx, DWORD PTR _iter$19[ebp]
	call	?GetNext@VuHashIterator@@QAEPAVVuEntity@@XZ ; VuHashIterator::GetNext
	mov	DWORD PTR _ent$44[ebp], eax

; 518  : 			}

	jmp	$LN8@Process
$LN7@Process:

; 519  : 			return VU_SUCCESS;

	mov	DWORD PTR $T25[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$19[ebp]
	call	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
	mov	eax, DWORD PTR $T25[ebp]
	jmp	$LN36@Process
	jmp	$LN10@Process
$LN9@Process:

; 520  : 		}
; 521  : 		else if ((Entity()) && (Entity ()->IsLocal ()))	{

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	$LN10@Process
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	ecx, eax
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@Process

; 522  : 			VuMessage *resp = 0;

	mov	DWORD PTR _resp$32[ebp], 0

; 523  : 			resp = new VuFullUpdateEvent(Entity (), sender);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T34[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T34[ebp], 0
	je	SHORT $LN54@Process
	push	0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	push	eax
	mov	ecx, DWORD PTR $T34[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv586[ebp], eax
	jmp	SHORT $LN55@Process
$LN54@Process:
	mov	DWORD PTR tv586[ebp], 0
$LN55@Process:
	mov	ecx, DWORD PTR tv586[ebp]
	mov	DWORD PTR $T23[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T23[ebp]
	mov	DWORD PTR _resp$32[ebp], edx

; 524  : 			VuMessageQueue::PostVuMessage(resp);

	mov	eax, DWORD PTR _resp$32[ebp]
	push	eax
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 525  : 			return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN36@Process
$LN10@Process:

; 526  : 		}
; 527  : 	}
; 528  : 	return VU_NO_OP;

	xor	eax, eax
$LN36@Process:

; 529  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$0:
	mov	eax, DWORD PTR $T33[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$1:
	lea	ecx, DWORD PTR _iter$18[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$2:
	mov	eax, DWORD PTR $T40[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$3:
	mov	eax, DWORD PTR $T39[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$4:
	lea	ecx, DWORD PTR _iter$17[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$5:
	mov	eax, DWORD PTR $T37[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$6:
	mov	eax, DWORD PTR $T36[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$7:
	mov	eax, DWORD PTR $T41[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$8:
	lea	ecx, DWORD PTR _iter$19[ebp]
	jmp	??1VuDatabaseIterator@@UAE@XZ		; VuDatabaseIterator::~VuDatabaseIterator
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$9:
	mov	eax, DWORD PTR $T38[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$10:
	mov	eax, DWORD PTR $T35[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Process@VuGetRequest@@MAEHE@Z$11:
	mov	eax, DWORD PTR $T34[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Process@VuGetRequest@@MAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@VuGetRequest@@MAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@VuGetRequest@@MAEHE@Z ENDP			; VuGetRequest::Process
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuGetRequest@@UAE@XZ PROC				; VuGetRequest::~VuGetRequest
; _this$ = ecx

; 412  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGetRequest@@6B@

; 413  : 	// empty
; 414  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRequestMessage@@UAE@XZ		; VuRequestMessage::~VuRequestMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuGetRequest@@UAE@XZ ENDP				; VuGetRequest::~VuGetRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuGetRequest@@QAE@VVU_ID@@0@Z PROC			; VuGetRequest::VuGetRequest
; _this$ = ecx

; 407  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@0@Z	; VuRequestMessage::VuRequestMessage
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGetRequest@@6B@

; 408  : 	// empty
; 409  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuGetRequest@@QAE@VVU_ID@@0@Z ENDP			; VuGetRequest::VuGetRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_entityId$ = 8						; size = 8
_target$ = 16						; size = 4
??0VuGetRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z PROC	; VuGetRequest::VuGetRequest
; _this$ = ecx

; 400  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp]
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z ; VuRequestMessage::VuRequestMessage
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGetRequest@@6B@

; 401  : 	// empty
; 402  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VuGetRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ENDP	; VuGetRequest::VuGetRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv89 = -12						; size = 4
tv87 = -8						; size = 4
_this$ = -4						; size = 4
_sgt$ = 8						; size = 4
_sess$ = 12						; size = 4
??0VuGetRequest@@QAE@W4VU_SPECIAL_GET_TYPE@@PAVVuSessionEntity@@@Z PROC ; VuGetRequest::VuGetRequest
; _this$ = ecx

; 394  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _sess$[ebp], 0
	je	SHORT $LN5@VuGetReque
	mov	eax, DWORD PTR _sess$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@VuGetReque
$LN5@VuGetReque:
	cmp	DWORD PTR _sgt$[ebp], 1
	jne	SHORT $LN3@VuGetReque
	mov	ecx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN4@VuGetReque
$LN3@VuGetReque:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv87[ebp], eax
$LN4@VuGetReque:
	mov	edx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv89[ebp], edx
$LN6@VuGetReque:
	mov	eax, DWORD PTR tv89[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuNullId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?vuNullId@@3VVU_ID@@A
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z ; VuRequestMessage::VuRequestMessage
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGetRequest@@6B@

; 395  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VuGetRequest@@QAE@W4VU_SPECIAL_GET_TYPE@@PAVVuSessionEntity@@@Z ENDP ; VuGetRequest::VuGetRequest
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuRequestMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuRequestMessage@@UAEPAXI@Z PROC			; VuRequestMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRequestMessage@@UAE@XZ		; VuRequestMessage::~VuRequestMessage
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuRequestMessage@@UAEPAXI@Z ENDP			; VuRequestMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 1
_senderid$ = 12						; size = 8
_dest$ = 20						; size = 8
??0VuRequestMessage@@IAE@EVVU_ID@@0@Z PROC		; VuRequestMessage::VuRequestMessage
; _this$ = ecx

; 378  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dest$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@0@Z		; VuMessage::VuMessage
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7VuRequestMessage@@6B@

; 379  : 	// empty
; 380  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0VuRequestMessage@@IAE@EVVU_ID@@0@Z ENDP		; VuRequestMessage::VuRequestMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 1
_entityId$ = 12						; size = 8
_target$ = 20						; size = 4
??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z PROC ; VuRequestMessage::VuRequestMessage
; _this$ = ecx

; 370  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp]
	push	edx
	movzx	eax, BYTE PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuRequestMessage@@6B@

; 371  : 	// empty
; 372  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0VuRequestMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@@Z ENDP ; VuRequestMessage::VuRequestMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuRequestMessage@@UAE@XZ PROC			; VuRequestMessage::~VuRequestMessage
; _this$ = ecx

; 383  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuRequestMessage@@6B@

; 384  : 	// empty
; 385  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuRequestMessage@@UAE@XZ ENDP			; VuRequestMessage::~VuRequestMessage
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuErrorMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuErrorMessage@@UAEPAXI@Z PROC			; VuErrorMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuErrorMessage@@UAE@XZ		; VuErrorMessage::~VuErrorMessage
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuErrorMessage@@UAEPAXI@Z ENDP			; VuErrorMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuErrorMessage@@ABEHXZ PROC			; VuErrorMessage::LocalSize
; _this$ = ecx

; 325  : int VuErrorMessage::LocalSize() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 326  : 	return (VUERRORMESSAGE_LOCALSIZE);

	mov	eax, 10					; 0000000aH

; 327  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuErrorMessage@@ABEHXZ ENDP			; VuErrorMessage::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?Process@VuErrorMessage@@MAEHE@Z PROC			; VuErrorMessage::Process
; _this$ = ecx

; 357  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 358  : 	if (Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	je	SHORT $LN1@Process

; 359  : 		Entity()->Handle(this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax

; 360  : 		return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN2@Process
$LN1@Process:

; 361  : 	}
; 362  : 	return VU_NO_OP;

	xor	eax, eax
$LN2@Process:

; 363  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Process@VuErrorMessage@@MAEHE@Z ENDP			; VuErrorMessage::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuErrorMessage@@UAEHPAPAE@Z PROC		; VuErrorMessage::Encode
; _this$ = ecx

; 346  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 347  : 	VuMessage::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuMessage@@MAEHPAPAE@Z		; VuMessage::Encode

; 348  : 
; 349  : 	memcpy(*buf, &srcmsgid_, sizeof(srcmsgid_)); *buf += sizeof(srcmsgid_);

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 350  : 	memcpy(*buf, &etype_,    sizeof(etype_));    *buf += sizeof(etype_);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 2
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 351  : 
; 352  : 	return (VUERRORMESSAGE_SIZE);

	mov	eax, 18					; 00000012H

; 353  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuErrorMessage@@UAEHPAPAE@Z ENDP		; VuErrorMessage::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuErrorMessage@@UAEHPAPAEPAJ@Z PROC		; VuErrorMessage::Decode
; _this$ = ecx

; 336  : int VuErrorMessage::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 337  : 	VuMessage::Decode(buf, rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuMessage@@MAEHPAPAEPAJ@Z	; VuMessage::Decode

; 338  : 
; 339  : 	memcpychk(&srcmsgid_, buf, sizeof(srcmsgid_), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 340  : 	memcpychk(&etype_,    buf, sizeof(etype_), rem);    

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 341  : 
; 342  : 	return (VUERRORMESSAGE_SIZE);

	mov	eax, 18					; 00000012H

; 343  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuErrorMessage@@UAEHPAPAEPAJ@Z ENDP		; VuErrorMessage::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuErrorMessage@@UBEHXZ PROC			; VuErrorMessage::Size
; _this$ = ecx

; 332  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 333  : 	return (VUERRORMESSAGE_SIZE);

	mov	eax, 18					; 00000012H

; 334  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuErrorMessage@@UBEHXZ ENDP			; VuErrorMessage::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuErrorMessage@@UAE@XZ PROC				; VuErrorMessage::~VuErrorMessage
; _this$ = ecx

; 321  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuErrorMessage@@6B@

; 322  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuErrorMessage@@UAE@XZ ENDP				; VuErrorMessage::~VuErrorMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_senderid$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuErrorMessage@@QAE@VVU_ID@@0@Z PROC			; VuErrorMessage::VuErrorMessage
; _this$ = ecx

; 315  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuErrorMessage@@QAE@VVU_ID@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@0@Z		; VuMessage::VuMessage
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuErrorMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+52], dx

; 316  : 	srcmsgid_.num_     = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], 0

; 317  : 	srcmsgid_.creator_ = (0);

	push	0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+48], eax

; 318  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuErrorMessage@@QAE@VVU_ID@@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
__ehhandler$??0VuErrorMessage@@QAE@VVU_ID@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuErrorMessage@@QAE@VVU_ID@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuErrorMessage@@QAE@VVU_ID@@0@Z ENDP			; VuErrorMessage::VuErrorMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_errorType$ = 8						; size = 4
_srcmsgid$ = 12						; size = 8
_entityId$ = 20						; size = 8
_target$ = 28						; size = 4
??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z PROC ; VuErrorMessage::VuErrorMessage
; _this$ = ecx

; 308  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuErrorMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _srcmsgid$[ebp]
	mov	DWORD PTR [ecx+44], edx
	mov	eax, DWORD PTR _srcmsgid$[ebp+4]
	mov	DWORD PTR [ecx+48], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _errorType$[ebp]
	mov	WORD PTR [ecx+52], dx

; 309  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0VuErrorMessage@@QAE@HVVU_ID@@0PAVVuTargetEntity@@@Z ENDP ; VuErrorMessage::VuErrorMessage
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuRequestDummyBlockMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuRequestDummyBlockMessage@@UAEPAXI@Z PROC		; VuRequestDummyBlockMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRequestDummyBlockMessage@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuRequestDummyBlockMessage@@UAEPAXI@Z ENDP		; VuRequestDummyBlockMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1VuRequestDummyBlockMessage@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuRequestDummyBlockMessage@@UAE@XZ PROC		; VuRequestDummyBlockMessage::~VuRequestDummyBlockMessage, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuRequestDummyBlockMessage@@UAE@XZ ENDP		; VuRequestDummyBlockMessage::~VuRequestDummyBlockMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuRequestDummyBlockMessage@@EBEHXZ PROC	; VuRequestDummyBlockMessage::LocalSize
; _this$ = ecx

; 252  : int VuRequestDummyBlockMessage::LocalSize() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 253  : 	return address_.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@VU_ADDRESS@@QBEHXZ		; VU_ADDRESS::Size

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuRequestDummyBlockMessage@@EBEHXZ ENDP	; VuRequestDummyBlockMessage::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_iter$ = -52						; size = 12
$T2 = -40						; size = 8
_sendAddress$ = -32					; size = 8
$T3 = -24						; size = 4
_this$ = -20						; size = 4
_s$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_autod$ = 8						; size = 1
?Process@VuRequestDummyBlockMessage@@UAEHE@Z PROC	; VuRequestDummyBlockMessage::Process
; _this$ = ecx

; 273  : VU_ERRCODE VuRequestDummyBlockMessage::Process(VU_BOOL autod){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@VuRequestDummyBlockMessage@@UAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 274  : 	// send dummy block
; 275  : 	// get any session, we just need the handle send socket
; 276  : 	VuSessionsIterator iter(vuGlobalGroup);

	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 277  : 	VuSessionEntity *s;
; 278  : 	for (s = iter.GetFirst();(s != NULL);s = iter.GetNext()){

	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _s$[ebp], eax
	jmp	SHORT $LN6@Process
$LN5@Process:
	lea	ecx, DWORD PTR _iter$[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _s$[ebp], eax
$LN6@Process:
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN4@Process

; 279  : 		if (s->GetCommsHandle() != NULL){

	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	test	eax, eax
	je	SHORT $LN3@Process

; 280  : 			break;

	jmp	SHORT $LN4@Process
$LN3@Process:

; 281  : 		}
; 282  : 	}

	jmp	SHORT $LN5@Process
$LN4@Process:

; 283  : 	VU_ADDRESS sendAddress(address_.ip, address_.recvPort, address_.reliableRecvPort);

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+46]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	lea	ecx, DWORD PTR _sendAddress$[ebp]
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS

; 284  : 	// server sent a private address, use his own
; 285  : 	if (sendAddress.IsPrivate()){

	lea	ecx, DWORD PTR _sendAddress$[ebp]
	call	?IsPrivate@VU_ADDRESS@@QBE_NXZ		; VU_ADDRESS::IsPrivate
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Process

; 286  : 		s = (VuSessionEntity*)vuDatabase->Find(sender_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _s$[ebp], eax

; 287  : 		sendAddress.ip = s->GetAddress().ip;

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetAddress@VuSessionEntity@@QAE?AVVU_ADDRESS@@XZ ; VuSessionEntity::GetAddress
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _sendAddress$[ebp+4], eax
$LN2@Process:

; 288  : 	}
; 289  : 
; 290  : 	if (s != NULL){

	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN1@Process

; 291  : 		ComAPISendDummy(s->GetCommsHandle(), sendAddress.ip, sendAddress.recvPort);

	movzx	ecx, WORD PTR _sendAddress$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sendAddress$[ebp+4]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	push	eax
	call	_ComAPISendDummy
	add	esp, 12					; 0000000cH

; 292  : 		ComAPISendDummy(s->GetCommsHandle(), sendAddress.ip, sendAddress.recvPort+1);

	movzx	eax, WORD PTR _sendAddress$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _sendAddress$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	push	eax
	call	_ComAPISendDummy
	add	esp, 12					; 0000000cH

; 293  : 		ComAPISendDummy(s->GetCommsHandle(), sendAddress.ip, sendAddress.recvPort+2);

	movzx	edx, WORD PTR _sendAddress$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _sendAddress$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	push	eax
	call	_ComAPISendDummy
	add	esp, 12					; 0000000cH

; 294  : 		ComAPISendDummy(s->GetCommsHandle(), sendAddress.ip, sendAddress.recvPort+3);

	movzx	ecx, WORD PTR _sendAddress$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _sendAddress$[ebp+4]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetCommsHandle@VuTargetEntity@@QAEPAUcomapihandle@@XZ ; VuTargetEntity::GetCommsHandle
	push	eax
	call	_ComAPISendDummy
	add	esp, 12					; 0000000cH
$LN1@Process:

; 295  : 	}
; 296  : 
; 297  : 	return VU_SUCCESS;

	mov	DWORD PTR $T3[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	mov	eax, DWORD PTR $T3[ebp]

; 298  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@VuRequestDummyBlockMessage@@UAEHE@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?Process@VuRequestDummyBlockMessage@@UAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@VuRequestDummyBlockMessage@@UAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@VuRequestDummyBlockMessage@@UAEHE@Z ENDP	; VuRequestDummyBlockMessage::Process
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuRequestDummyBlockMessage@@UAEHPAPAE@Z PROC	; VuRequestDummyBlockMessage::Encode
; _this$ = ecx

; 267  : int VuRequestDummyBlockMessage::Encode(VU_BYTE **buf){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 268  : 	VuMessage::Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@VuMessage@@MAEHPAPAE@Z		; VuMessage::Encode

; 269  : 	address_.Encode(buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Encode@VU_ADDRESS@@QAEHPAPAE@Z		; VU_ADDRESS::Encode

; 270  : 	return Size();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx

; 271  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuRequestDummyBlockMessage@@UAEHPAPAE@Z ENDP	; VuRequestDummyBlockMessage::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_length$ = 12						; size = 4
?Decode@VuRequestDummyBlockMessage@@UAEHPAPAEPAJ@Z PROC	; VuRequestDummyBlockMessage::Decode
; _this$ = ecx

; 261  : int VuRequestDummyBlockMessage::Decode(VU_BYTE **buf, long *length){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 262  : 	VuMessage::Decode(buf, length);

	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@VuMessage@@MAEHPAPAEPAJ@Z	; VuMessage::Decode

; 263  : 	address_.Decode(buf, length);

	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Decode@VU_ADDRESS@@QAEXPAPAEPAJ@Z	; VU_ADDRESS::Decode

; 264  : 	return Size();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 265  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuRequestDummyBlockMessage@@UAEHPAPAEPAJ@Z ENDP	; VuRequestDummyBlockMessage::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuRequestDummyBlockMessage@@UBEHXZ PROC		; VuRequestDummyBlockMessage::Size
; _this$ = ecx

; 257  : int VuRequestDummyBlockMessage::Size() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 258  : 	return VuMessage::Size() + LocalSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@VuMessage@@UBEHXZ			; VuMessage::Size
	mov	esi, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	eax, esi

; 259  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuRequestDummyBlockMessage@@UBEHXZ ENDP		; VuRequestDummyBlockMessage::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_sender$ = 8						; size = 8
_target$ = 16						; size = 8
??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z PROC	; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
; _this$ = ecx

; 248  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sender$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@0@Z		; VuMessage::VuMessage
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuRequestDummyBlockMessage@@6B@
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0VU_ADDRESS@@QAE@KGG@Z		; VU_ADDRESS::VU_ADDRESS

; 249  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
__ehhandler$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuRequestDummyBlockMessage@@QAE@VVU_ID@@0@Z ENDP	; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
_address$ = 8						; size = 8
_target$ = 16						; size = 4
??0VuRequestDummyBlockMessage@@QAE@VVU_ADDRESS@@PAVVuTargetEntity@@@Z PROC ; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
; _this$ = ecx

; 243  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	21					; 00000015H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ; VuMessage::VuMessage
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuRequestDummyBlockMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _address$[ebp]
	mov	DWORD PTR [ecx+44], edx
	mov	eax, DWORD PTR _address$[ebp+4]
	mov	DWORD PTR [ecx+48], eax

; 244  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VuRequestDummyBlockMessage@@QAE@VVU_ADDRESS@@PAVVuTargetEntity@@@Z ENDP ; VuRequestDummyBlockMessage::VuRequestDummyBlockMessage
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuMessage@@UAEPAXI@Z PROC				; VuMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuMessage@@UAE@XZ			; VuMessage::~VuMessage
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuMessage@@UAEPAXI@Z ENDP				; VuMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z PROC	; VuBin<VuEntity>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z ENDP	; VuBin<VuEntity>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC	; VuBin<VuEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP	; VuBin<VuEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC		; VuBin<VuEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP		; VuBin<VuEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuEntity@@@@QBE_NXZ PROC			; VuBin<VuEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuEntity@@@@QBE_NXZ ENDP			; VuBin<VuEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VVuEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VVuEntity@@@@QAE@XZ PROC			; VuBin<VuEntity>::~VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VVuEntity@@@@QAE@XZ ENDP			; VuBin<VuEntity>::~VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z PROC	; VuBin<VuEntity>::VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ENDP	; VuBin<VuEntity>::VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z PROC ; VuBin<VuTargetEntity>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z ENDP ; VuBin<VuTargetEntity>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ PROC ; VuBin<VuTargetEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ ENDP ; VuBin<VuTargetEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ PROC ; VuBin<VuTargetEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ ENDP ; VuBin<VuTargetEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuTargetEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuTargetEntity@@@@QBE_NXZ PROC		; VuBin<VuTargetEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuTargetEntity@@@@QBE_NXZ ENDP		; VuBin<VuTargetEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VVuTargetEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VVuTargetEntity@@@@QAE@XZ PROC		; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VVuTargetEntity@@@@QAE@XZ ENDP		; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuTargetEntity@@@@QAE@PAVVuTargetEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VVuTargetEntity@@@@QAE@PAVVuTargetEntity@@@Z PROC ; VuBin<VuTargetEntity>::VuBin<VuTargetEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuTargetEntity@@@@QAE@PAVVuTargetEntity@@@Z ENDP ; VuBin<VuTargetEntity>::VuBin<VuTargetEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LocalSize@VuMessage@@ABEHXZ PROC			; VuMessage::LocalSize
; _this$ = ecx

; 215  : int VuMessage::LocalSize() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 	return (VUMESSAGE_LOCALSIZE);

	mov	eax, 8

; 217  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LocalSize@VuMessage@@ABEHXZ ENDP			; VuMessage::LocalSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z PROC		; VuMessage::SetEntity, COMDAT
; _this$ = ecx

; 204  : 	void SetEntity(VuEntity *ent){ ent_.reset(ent); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z ; VuBin<VuEntity>::reset
	mov	esp, ebp
	pop	ebp
	ret	4
?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ENDP		; VuMessage::SetEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@VuMessage@@MAEHPAPAEPAJ@Z PROC			; VuMessage::Decode
; _this$ = ecx

; 225  : int VuMessage::Decode(VU_BYTE** buf, long *rem){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 	// sfr: check creator
; 227  : 	memcpychk(&entityId_.creator_, buf, sizeof(entityId_.creator_), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 228  : 	memcpychk(&entityId_.num_,     buf, sizeof(entityId_.num_), rem);

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 229  : 	return (VUMESSAGE_LOCALSIZE);

	mov	eax, 8

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@VuMessage@@MAEHPAPAEPAJ@Z ENDP			; VuMessage::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@VuMessage@@MAEHPAPAE@Z PROC			; VuMessage::Encode
; _this$ = ecx

; 232  : int VuMessage::Encode(VU_BYTE** buf) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 	memcpy(*buf, &entityId_.creator_, sizeof(entityId_.creator_)); *buf += sizeof(entityId_.creator_);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 234  : 	memcpy(*buf, &entityId_.num_,     sizeof(entityId_.num_));     *buf += sizeof(entityId_.num_);

	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], ecx

; 235  : 
; 236  : 	return (VUMESSAGE_LOCALSIZE);

	mov	eax, 8

; 237  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@VuMessage@@MAEHPAPAE@Z ENDP			; VuMessage::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?Activate@VuMessage@@MAEHPAVVuEntity@@@Z PROC		; VuMessage::Activate
; _this$ = ecx

; 208  : VU_ERRCODE VuMessage::Activate(VuEntity* ent) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 	SetEntity(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 210  : 	return VU_SUCCESS;

	mov	eax, 1

; 211  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Activate@VuMessage@@MAEHPAVVuEntity@@@Z ENDP		; VuMessage::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 1
_senderid$ = 12						; size = 8
_target$ = 20						; size = 8
??0VuMessage@@IAE@EVVU_ID@@0@Z PROC			; VuMessage::VuMessage
; _this$ = ecx

; 111  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuMessage@@IAE@EVVU_ID@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _type$[ebp]
	mov	BYTE PTR [edx+5], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+6], 32			; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _senderid$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _senderid$[ebp+4]
	mov	DWORD PTR [edx+12], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _target$[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR _target$[ebp+4]
	mov	DWORD PTR [edx+20], ecx
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	0
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z	; VU_ID::VU_ID
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$VuBin@VVuTargetEntity@@@@QAE@PAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::VuBin<VuTargetEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>

; 112  : 	// sfr: temp test
; 113  : 	++nmsgs;

	mov	eax, DWORD PTR ?nmsgs@@3HA		; nmsgs
	add	eax, 1
	mov	DWORD PTR ?nmsgs@@3HA, eax		; nmsgs

; 114  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuMessage@@IAE@EVVU_ID@@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$VuBin@VVuTargetEntity@@@@QAE@XZ	; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>
__ehhandler$??0VuMessage@@IAE@EVVU_ID@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuMessage@@IAE@EVVU_ID@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuMessage@@IAE@EVVU_ID@@0@Z ENDP			; VuMessage::VuMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 1
_entityId$ = 12						; size = 8
_target$ = 20						; size = 4
_loopback$ = 24						; size = 1
??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z PROC	; VuMessage::VuMessage
; _this$ = ecx

; 80   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _type$[ebp]
	mov	BYTE PTR [edx+5], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+6], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _entityId$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	ecx, DWORD PTR _entityId$[ebp+4]
	mov	DWORD PTR [edx+28], ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$VuBin@VVuTargetEntity@@@@QAE@PAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::VuBin<VuTargetEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 81   : 	// sfr: temp test
; 82   : 	++nmsgs;

	mov	ecx, DWORD PTR ?nmsgs@@3HA		; nmsgs
	add	ecx, 1
	mov	DWORD PTR ?nmsgs@@3HA, ecx		; nmsgs

; 83   : 	if (target == vuLocalSessionEntity) {

	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	call	??$?8VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator==<VuSessionEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@VuMessage

; 84   : 		loopback = TRUE;

	mov	BYTE PTR _loopback$[ebp], 1
$LN7@VuMessage:

; 85   : 	}
; 86   : 	if (target) {

	cmp	DWORD PTR _target$[ebp], 0
	je	SHORT $LN6@VuMessage

; 87   : 		target_.reset(target);

	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::reset
	jmp	SHORT $LN5@VuMessage
$LN6@VuMessage:

; 88   : 	}
; 89   : 	else if (vuGlobalGroup) {

	cmp	DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A, 0 ; vuGlobalGroup
	je	SHORT $LN4@VuMessage

; 90   : 		target_.reset(vuGlobalGroup);

	mov	edx, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::reset

; 91   : 	}
; 92   : 	else {

	jmp	SHORT $LN5@VuMessage
$LN4@VuMessage:

; 93   : 		target_.reset(vuLocalSessionEntity.get());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?reset@?$VuBin@VVuTargetEntity@@@@QAEXPAVVuTargetEntity@@@Z ; VuBin<VuTargetEntity>::reset
$LN5@VuMessage:

; 94   : 	} 
; 95   : 
; 96   : 	if (target_) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??B?$VuBin@VVuTargetEntity@@@@QBE_NXZ	; VuBin<VuTargetEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@VuMessage

; 97   : 		tgtid_ = target_->Id();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??C?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ ; VuBin<VuTargetEntity>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], eax
$LN2@VuMessage:

; 98   : 	}
; 99   : 	if (loopback) {

	movzx	edx, BYTE PTR _loopback$[ebp]
	test	edx, edx
	je	SHORT $LN1@VuMessage

; 100  : 		flags_ |= VU_LOOPBACK_MSG_FLAG;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
$LN1@VuMessage:

; 101  : 	}
; 102  : 	// note: msg id is set only for external messages which are sent out
; 103  : 	sender_.num_     = vuLocalSession.num_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?vuLocalSession@@3VVU_ID@@A
	mov	DWORD PTR [eax+8], ecx

; 104  : 	sender_.creator_ = vuLocalSession.creator_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?vuLocalSession@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+12], eax

; 105  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$VuBin@VVuTargetEntity@@@@QAE@XZ	; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>
__unwindfunclet$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuMessage@@IAE@EVVU_ID@@PAVVuTargetEntity@@E@Z ENDP	; VuMessage::VuMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoSend@VuMessage@@UAEEXZ PROC				; VuMessage::DoSend
; _this$ = ecx

; 127  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 	return TRUE;

	mov	al, 1

; 129  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoSend@VuMessage@@UAEEXZ ENDP				; VuMessage::DoSend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_retval$ = -24						; size = 4
tv77 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
tv66 = -1						; size = 1
?UnRef@VuMessage@@QAEHXZ PROC				; VuMessage::UnRef
; _this$ = ecx

; 155  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 156  : 	// NOTE: must assign temp here as memory may be freed prior to return
; 157  : 	int retval = --refcnt_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+4]
	sub	cl, 1
	mov	BYTE PTR tv66[ebp], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv66[ebp]
	mov	BYTE PTR [edx+4], al
	movzx	ecx, BYTE PTR tv66[ebp]
	mov	DWORD PTR _retval$[ebp], ecx

; 158  : 	if (refcnt_ <= 0)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	test	eax, eax
	jg	SHORT $LN1@UnRef

; 159  : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@UnRef
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN1@UnRef
$LN4@UnRef:
	mov	DWORD PTR tv77[ebp], 0
$LN1@UnRef:

; 160  : 
; 161  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 162  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UnRef@VuMessage@@QAEHXZ ENDP				; VuMessage::UnRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -1						; size = 1
?Ref@VuMessage@@QAEHXZ PROC				; VuMessage::Ref
; _this$ = ecx

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 151  : 	return ++refcnt_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+4]
	add	cl, 1
	mov	BYTE PTR tv66[ebp], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv66[ebp]
	mov	BYTE PTR [edx+4], al
	movzx	eax, BYTE PTR tv66[ebp]

; 152  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Ref@VuMessage@@QAEHXZ ENDP				; VuMessage::Ref
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?RequestOutOfBandTransmit@VuMessage@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestOutOfBandTransmit@VuMessage@@QAEXXZ PROC	; VuMessage::RequestOutOfBandTransmit, COMDAT
; _this$ = ecx

; 181  : 	void RequestOutOfBandTransmit() { flags_ |= VU_OUT_OF_BAND_MSG_FLAG; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
	mov	esp, ebp
	pop	ebp
	ret	0
?RequestOutOfBandTransmit@VuMessage@@QAEXXZ ENDP	; VuMessage::RequestOutOfBandTransmit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?RequestReliableTransmit@VuMessage@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestReliableTransmit@VuMessage@@QAEXXZ PROC		; VuMessage::RequestReliableTransmit, COMDAT
; _this$ = ecx

; 180  : 	void RequestReliableTransmit() { flags_ |= VU_RELIABLE_MSG_FLAG; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
	mov	esp, ebp
	pop	ebp
	ret	0
?RequestReliableTransmit@VuMessage@@QAEXXZ ENDP		; VuMessage::RequestReliableTransmit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
?Send@VuMessage@@IAEHXZ PROC				; VuMessage::Send
; _this$ = ecx

; 177  : int VuMessage::Send() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 178  : 	int retval = -1;

	mov	DWORD PTR _retval$[ebp], -1

; 179  : 	if (Target() && Target() != vuLocalSessionEntity) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ ; VuMessage::Target
	test	eax, eax
	je	SHORT $LN2@Send
	push	OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ ; VuMessage::Target
	push	eax
	call	??$?9VVuSessionEntity@@@@YA_NPBXABV?$VuBin@VVuSessionEntity@@@@@Z ; operator!=<VuSessionEntity>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Send

; 180  : 		retval = Target()->SendMessage(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ ; VuMessage::Target
	mov	ecx, eax
	call	?SendMessageA@VuTargetEntity@@QAEHPAVVuMessage@@@Z ; VuTargetEntity::SendMessageA
	mov	DWORD PTR _retval$[ebp], eax

; 181  : 		if (retval <= 0){

	cmp	DWORD PTR _retval$[ebp], 0
	jg	SHORT $LN2@Send

; 182  : 			flags_ |= VU_SEND_FAILED_MSG_FLAG;

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+6]
	or	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+6], al
$LN2@Send:

; 183  : 		}
; 184  : 	}
; 185  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 186  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Send@VuMessage@@IAEHXZ ENDP				; VuMessage::Send
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_retval$ = -12						; size = 4
_ent$1 = -8						; size = 4
_this$ = -4						; size = 4
_autod$ = 8						; size = 1
?Dispatch@VuMessage@@IAEHE@Z PROC			; VuMessage::Dispatch
; _this$ = ecx

; 188  : VU_ERRCODE VuMessage::Dispatch(VU_BOOL autod) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 189  : 	int retval = VU_NO_OP;

	mov	DWORD PTR _retval$[ebp], 0

; 190  : 
; 191  : 	if (!IsLocal() || (flags_ & VU_LOOPBACK_MSG_FLAG)) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuMessage@@QBEEXZ		; VuMessage::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Dispatch
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	and	edx, 16					; 00000010H
	je	SHORT $LN4@Dispatch
$LN3@Dispatch:

; 192  : 		if (!Entity()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Entity@VuMessage@@QBEPAVVuEntity@@XZ	; VuMessage::Entity
	test	eax, eax
	jne	SHORT $LN2@Dispatch

; 193  : 			// try to find ent again -- may have been in queue
; 194  : 			VuEntity *ent = vuDatabase->Find(entityId_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ent$1[ebp], eax

; 195  : 			if (ent) {

	cmp	DWORD PTR _ent$1[ebp], 0
	je	SHORT $LN2@Dispatch

; 196  : 				Activate(ent);

	mov	eax, DWORD PTR _ent$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN2@Dispatch:

; 197  : 			}
; 198  : 		}
; 199  : 		retval = Process(autod);

	movzx	ecx, BYTE PTR _autod$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	mov	DWORD PTR _retval$[ebp], eax

; 200  : 		vuDatabase->Handle(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Handle@VuDatabase@@QAEHPAVVuMessage@@@Z ; VuDatabase::Handle

; 201  : 		// mark as sent
; 202  : 		flags_ |= VU_PROCESSED_MSG_FLAG;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+6], dl
$LN4@Dispatch:

; 203  : 	}
; 204  : 
; 205  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 206  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Dispatch@VuMessage@@IAEHE@Z ENDP			; VuMessage::Dispatch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?Write@VuMessage@@IAEHPAPAE@Z PROC			; VuMessage::Write
; _this$ = ecx

; 173  : int VuMessage::Write(VU_BYTE** buf) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 	return Encode(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 175  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@VuMessage@@IAEHPAPAE@Z ENDP			; VuMessage::Write
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_length$ = 12						; size = 4
?Read@VuMessage@@IAEHPAPAEPAJ@Z PROC			; VuMessage::Read
; _this$ = ecx

; 164  : int VuMessage::Read(VU_BYTE** buf, long *length){

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 	int retval = Decode(buf, length);

	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	mov	DWORD PTR _retval$[ebp], eax

; 166  : 	//assert (*length == 0);
; 167  : 
; 168  : 	refcnt_ = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 169  : 	SetEntity(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 170  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 171  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Read@VuMessage@@IAEHPAPAEPAJ@Z ENDP			; VuMessage::Read
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VuMessage@@UBEHXZ PROC				; VuMessage::Size
; _this$ = ecx

; 221  : int VuMessage::Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 222  : 	return (VUMESSAGE_SIZE);

	mov	eax, 8

; 223  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VuMessage@@UBEHXZ ENDP				; VuMessage::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ PROC	; VuMessage::Target, COMDAT
; _this$ = ecx

; 161  : 	VuTargetEntity *Target() const { return target_.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?get@?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ ; VuBin<VuTargetEntity>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?Target@VuMessage@@QBEPAVVuTargetEntity@@XZ ENDP	; VuMessage::Target
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Entity@VuMessage@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Entity@VuMessage@@QBEPAVVuEntity@@XZ PROC		; VuMessage::Entity, COMDAT
; _this$ = ecx

; 159  : 	VuEntity *Entity() const { return ent_.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?Entity@VuMessage@@QBEPAVVuEntity@@XZ ENDP		; VuMessage::Entity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?EntityId@VuMessage@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EntityId@VuMessage@@QBE?AVVU_ID@@XZ PROC		; VuMessage::EntityId, COMDAT
; _this$ = ecx

; 157  : 	VU_ID EntityId() const { return entityId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EntityId@VuMessage@@QBE?AVVU_ID@@XZ ENDP		; VuMessage::EntityId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
?IsLocal@VuMessage@@QBEEXZ PROC				; VuMessage::IsLocal
; _this$ = ecx

; 122  : VU_BOOL VuMessage::IsLocal() const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 	return (VU_BOOL)(sender_.creator_ == vuLocalSession.creator_ ? TRUE : FALSE); 

	push	OFFSET ?vuLocalSession@@3VVU_ID@@A+4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@IsLocal
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsLocal
$LN3@IsLocal:
	mov	DWORD PTR tv70[ebp], 0
$LN4@IsLocal:
	mov	al, BYTE PTR tv70[ebp]

; 124  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocal@VuMessage@@QBEEXZ ENDP				; VuMessage::IsLocal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Destination@VuMessage@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Destination@VuMessage@@QBE?AVVU_ID@@XZ PROC		; VuMessage::Destination, COMDAT
; _this$ = ecx

; 155  : 	VU_ID Destination() const { return tgtid_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Destination@VuMessage@@QBE?AVVU_ID@@XZ ENDP		; VuMessage::Destination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?Sender@VuMessage@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Sender@VuMessage@@QBE?AVVU_ID@@XZ PROC			; VuMessage::Sender, COMDAT
; _this$ = ecx

; 154  : 	VU_ID Sender() const { return sender_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Sender@VuMessage@@QBE?AVVU_ID@@XZ ENDP			; VuMessage::Sender
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vuevent.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuMessage@@UAE@XZ PROC				; VuMessage::~VuMessage
; _this$ = ecx

; 116  : VuMessage::~VuMessage() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuMessage@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuMessage@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 117  : 	// sfr: temp test
; 118  : 	--nmsgs;

	mov	ecx, DWORD PTR ?nmsgs@@3HA		; nmsgs
	sub	ecx, 1
	mov	DWORD PTR ?nmsgs@@3HA, ecx		; nmsgs

; 119  : 	SetEntity(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntity@VuMessage@@IAEXPAVVuEntity@@@Z ; VuMessage::SetEntity

; 120  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$VuBin@VVuTargetEntity@@@@QAE@XZ	; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuMessage@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$VuBin@VVuTargetEntity@@@@QAE@XZ	; VuBin<VuTargetEntity>::~VuBin<VuTargetEntity>
__unwindfunclet$??1VuMessage@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$??1VuMessage@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuMessage@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuMessage@@UAE@XZ ENDP				; VuMessage::~VuMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetId@VuEntity@@IAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newId$ = 8						; size = 4
?SetId@VuEntity@@IAEXK@Z PROC				; VuEntity::SetId, COMDAT
; _this$ = ecx

; 228  : 	void SetId(VU_ID_NUMBER newId){ share_.id_.num_ = newId; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newId$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetId@VuEntity@@IAEXK@Z ENDP				; VuEntity::SetId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?LastUpdateTime@VuEntity@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LastUpdateTime@VuEntity@@QBEKXZ PROC			; VuEntity::LastUpdateTime, COMDAT
; _this$ = ecx

; 172  : 	VU_TIME LastUpdateTime() const { return lastUpdateTime_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	mov	esp, ebp
	pop	ebp
	ret	0
?LastUpdateTime@VuEntity@@QBEKXZ ENDP			; VuEntity::LastUpdateTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Roll@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Roll@VuEntity@@QBEMXZ PROC				; VuEntity::Roll, COMDAT
; _this$ = ecx

; 166  : 	SM_SCALAR Roll() const { return orient_.roll_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+68]
	mov	esp, ebp
	pop	ebp
	ret	0
?Roll@VuEntity@@QBEMXZ ENDP				; VuEntity::Roll
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Pitch@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Pitch@VuEntity@@QBEMXZ PROC				; VuEntity::Pitch, COMDAT
; _this$ = ecx

; 165  : 	SM_SCALAR Pitch() const { return orient_.pitch_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Pitch@VuEntity@@QBEMXZ ENDP				; VuEntity::Pitch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Yaw@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Yaw@VuEntity@@QBEMXZ PROC				; VuEntity::Yaw, COMDAT
; _this$ = ecx

; 164  : 	SM_SCALAR Yaw() const { return orient_.yaw_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?Yaw@VuEntity@@QBEMXZ ENDP				; VuEntity::Yaw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?ZDelta@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZDelta@VuEntity@@QBEMXZ PROC				; VuEntity::ZDelta, COMDAT
; _this$ = ecx

; 163  : 	SM_SCALAR ZDelta() const { return pos_.dz_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?ZDelta@VuEntity@@QBEMXZ ENDP				; VuEntity::ZDelta
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YDelta@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YDelta@VuEntity@@QBEMXZ PROC				; VuEntity::YDelta, COMDAT
; _this$ = ecx

; 162  : 	SM_SCALAR YDelta() const { return pos_.dy_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+52]
	mov	esp, ebp
	pop	ebp
	ret	0
?YDelta@VuEntity@@QBEMXZ ENDP				; VuEntity::YDelta
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XDelta@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XDelta@VuEntity@@QBEMXZ PROC				; VuEntity::XDelta, COMDAT
; _this$ = ecx

; 161  : 	SM_SCALAR XDelta() const { return pos_.dx_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?XDelta@VuEntity@@QBEMXZ ENDP				; VuEntity::XDelta
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?ZPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZPos@VuEntity@@QBEMXZ PROC				; VuEntity::ZPos, COMDAT
; _this$ = ecx

; 160  : 	BIG_SCALAR ZPos()	const { return pos_.z_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?ZPos@VuEntity@@QBEMXZ ENDP				; VuEntity::ZPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Type@VuEntity@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuEntity@@QBEGXZ PROC				; VuEntity::Type, COMDAT
; _this$ = ecx

; 154  : 	ushort Type() const       { return share_.entityType_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuEntity@@QBEGXZ ENDP				; VuEntity::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ PROC		; VuEntity::VuState, COMDAT
; _this$ = ecx

; 153  : 	VU_MEM VuState() const    { return vuState_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ ENDP		; VuEntity::VuState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::OwnerId, COMDAT
; _this$ = ecx

; 152  : 	VU_ID OwnerId() const     { return share_.ownerId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::OwnerId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsGlobal@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGlobal@VuEntity@@QBEEXZ PROC				; VuEntity::IsGlobal, COMDAT
; _this$ = ecx

; 138  : 	VU_BOOL IsGlobal() const        { return (VU_BOOL)share_.flags_.breakdown_.global_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	shr	eax, 4
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGlobal@VuEntity@@QBEEXZ ENDP				; VuEntity::IsGlobal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsPrivate@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPrivate@VuEntity@@QBEEXZ PROC			; VuEntity::IsPrivate, COMDAT
; _this$ = ecx

; 134  : 	VU_BOOL IsPrivate() const       { return (VU_BOOL)share_.flags_.breakdown_.private_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPrivate@VuEntity@@QBEEXZ ENDP			; VuEntity::IsPrivate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?SetTransmissionTime@VuEntity@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_currentTime$ = 8					; size = 4
?SetTransmissionTime@VuEntity@@QAEXK@Z PROC		; VuEntity::SetTransmissionTime, COMDAT
; _this$ = ecx

; 120  : 	void SetTransmissionTime(VU_TIME currentTime){ lastTransmissionTime_ = currentTime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _currentTime$[ebp]
	mov	DWORD PTR [eax+108], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTransmissionTime@VuEntity@@QAEXK@Z ENDP		; VuEntity::SetTransmissionTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT
$T2 = -152						; size = 12
_s$3 = -140						; size = 24
_err$4 = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_rem$ = 20						; size = 4
?memcpychk@@YAXPAXPAPAEIPAJ@Z PROC			; memcpychk, COMDAT

; 25   : inline void memcpychk(void *dst, VU_BYTE **src, size_t size, long *rem){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	if ((size_t)*rem < size){

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memcpychk

; 27   : 		char err[100];
; 28   : 		sprintf(err, "Trying to write %lu bytes to %ld buffer", static_cast<unsigned long>(size), *rem);

	mov	edx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
	lea	edx, DWORD PTR _err$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 29   : 		std::string s(err);

	lea	eax, DWORD PTR _err$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 30   : 		throw InvalidBufferException(s);

	lea	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
	push	OFFSET __TI4?AVInvalidBufferException@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8

; 31   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@memcpychk:

; 32   : 	memcpy(dst, *src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 33   : 	*rem -= size;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _rem$[ebp]
	mov	DWORD PTR [eax], edx

; 34   : 	*src += size;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@memcpychk:

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0:
	lea	ecx, DWORD PTR _s$3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?memcpychk@@YAXPAXPAPAEIPAJ@Z ENDP			; memcpychk
; Function compile flags: /Odtp
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInvalidBufferException@@UAEPAXI@Z PROC		; InvalidBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InvalidBufferException@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInvalidBufferException@@UAEPAXI@Z ENDP		; InvalidBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV0@@Z PROC		; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV0@@Z ENDP		; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1InvalidBufferException@@UAE@XZ PROC			; InvalidBufferException::~InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1InvalidBufferException@@UAE@XZ ENDP			; InvalidBufferException::~InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx

; 19   : 	InvalidBufferException(const std::string &msg) : out_of_range(msg){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ?Size@VU_ADDRESS@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@VU_ADDRESS@@QBEHXZ PROC				; VU_ADDRESS::Size, COMDAT
; _this$ = ecx

; 200  : 	int Size() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 201  : 		// ip + ports
; 202  : 		return sizeof(long) + sizeof(short)*2;

	mov	eax, 8

; 203  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@VU_ADDRESS@@QBEHXZ ENDP				; VU_ADDRESS::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ADDRESS@@QAE@KGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ip$ = 8						; size = 4
_recvPort$ = 12						; size = 2
_reliableRecvPort$ = 16					; size = 2
??0VU_ADDRESS@@QAE@KGG@Z PROC				; VU_ADDRESS::VU_ADDRESS, COMDAT
; _this$ = ecx

; 189  : 	VU_ADDRESS(

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 190  : 		unsigned long ip = 0,                                //< entity IP
; 191  : 		unsigned short recvPort = 0,//CAPI_UDP_PORT,         //< port where he receives
; 192  : 		unsigned short reliableRecvPort = 0 //CAPI_TCP_PORT  //< port where he receives reliable data
; 193  : 	){
; 194  : 		this->ip = ip;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ip$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 195  : 		this->recvPort = recvPort;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _recvPort$[ebp]
	mov	WORD PTR [edx], ax

; 196  : 		this->reliableRecvPort = reliableRecvPort;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _reliableRecvPort$[ebp]
	mov	WORD PTR [ecx+2], dx

; 197  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0VU_ADDRESS@@QAE@KGG@Z ENDP				; VU_ADDRESS::VU_ADDRESS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sessionpart$ = 8					; size = 4
_idpart$ = 12						; size = 4
??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z PROC			; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 101  : 	VU_ID(VU_SESSION_ID sessionpart, VU_ID_NUMBER idpart) : num_(idpart), creator_(sessionpart){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idpart$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _sessionpart$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0VU_ID@@QAE@VVU_SESSION_ID@@K@Z ENDP			; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??MVU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??MVU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator<, COMDAT
; _this$ = ecx

; 71   : 	int operator < (const VU_SESSION_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 72   : 		return (value_ < rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 73   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??MVU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator<
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@PBD@Z		; std::logic_error::logic_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1717 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1718 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1719 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 963  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 964  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 965  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	esp, ebp
	pop	ebp
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 38   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
