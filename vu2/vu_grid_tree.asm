; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\vu2\src\vu_grid_tree.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
PUBLIC	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ		; VuEntity::VuState
PUBLIC	?GetMutex@VuCollection@@QBEPAXXZ		; VuCollection::GetMutex
PUBLIC	??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z	; VuGridTree::VuGridTree
PUBLIC	??1VuGridTree@@UAE@XZ				; VuGridTree::~VuGridTree
PUBLIC	?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z		; VuGridTree::Move
PUBLIC	?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ ; VuGridTree::GetBiKeyFilter
PUBLIC	?PrivateInsert@VuGridTree@@MAEHPAVVuEntity@@@Z	; VuGridTree::PrivateInsert
PUBLIC	?PrivateRemove@VuGridTree@@MAEHPAVVuEntity@@@Z	; VuGridTree::PrivateRemove
PUBLIC	?PrivateFind@VuGridTree@@MBE_NPAVVuEntity@@@Z	; VuGridTree::PrivateFind
PUBLIC	?Purge@VuGridTree@@UAEIE@Z			; VuGridTree::Purge
PUBLIC	?Count@VuGridTree@@UBEIXZ			; VuGridTree::Count
PUBLIC	?Type@VuGridTree@@UBE?AW4VU_COLL_TYPE@@XZ	; VuGridTree::Type
PUBLIC	??_GVuGridTree@@UAEPAXI@Z			; VuGridTree::`scalar deleting destructor'
PUBLIC	??0VuScopeLock@@QAE@PAX@Z			; VuScopeLock::VuScopeLock
PUBLIC	??1VuScopeLock@@QAE@XZ				; VuScopeLock::~VuScopeLock
PUBLIC	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
PUBLIC	??1?$VuBin@VVuEntity@@@@QAE@XZ			; VuBin<VuEntity>::~VuBin<VuEntity>
PUBLIC	??_7VuGridTree@@6B@				; VuGridTree::`vftable'
PUBLIC	??_R4VuGridTree@@6B@				; VuGridTree::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuGridTree@@@8				; VuGridTree `RTTI Type Descriptor'
PUBLIC	??_R3VuGridTree@@8				; VuGridTree::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuGridTree@@8				; VuGridTree::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuGridTree@@8			; VuGridTree::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VuCollection@@8			; VuCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuCollection@@@8			; VuCollection `RTTI Type Descriptor'
PUBLIC	??_R3VuCollection@@8				; VuCollection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuCollection@@8				; VuCollection::`RTTI Base Class Array'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Insert
EXTRN	?ForcedInsert@VuCollection@@QAEHPAVVuEntity@@@Z:PROC ; VuCollection::ForcedInsert
EXTRN	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Remove
EXTRN	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z:PROC	; VuCollection::Find
EXTRN	??0VuCollection@@IAE@PAVVuFilter@@_N@Z:PROC	; VuCollection::VuCollection
EXTRN	??1VuCollection@@MAE@XZ:PROC			; VuCollection::~VuCollection
EXTRN	?GetFilter@VuCollection@@IBEPAVVuFilter@@XZ:PROC ; VuCollection::GetFilter
EXTRN	??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z:PROC	; VuRedBlackTree::VuRedBlackTree
EXTRN	??_EVuGridTree@@UAEPAXI@Z:PROC			; VuGridTree::`vector deleting destructor'
EXTRN	?GridRegister@VuCollectionManager@@QAEXPAVVuGridTree@@@Z:PROC ; VuCollectionManager::GridRegister
EXTRN	?GridDeRegister@VuCollectionManager@@QAEXPAVVuGridTree@@@Z:PROC ; VuCollectionManager::GridDeRegister
EXTRN	?VuxLockMutex@@YAXPAX@Z:PROC			; VuxLockMutex
EXTRN	?VuxUnlockMutex@@YAXPAX@Z:PROC			; VuxUnlockMutex
EXTRN	?Key1@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z:PROC	; VuBiKeyFilter::Key1
EXTRN	?Key2@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z:PROC	; VuBiKeyFilter::Key2
EXTRN	?CoordToKey@VuBiKeyFilter@@QBEKM@Z:PROC		; VuBiKeyFilter::CoordToKey
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuCollectionManager@@3PAVVuCollectionManager@@A:DWORD ; vuCollectionManager
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R2VuCollection@@8
rdata$r	SEGMENT
??_R2VuCollection@@8 DD FLAT:??_R1A@?0A@EA@VuCollection@@8 ; VuCollection::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuCollection@@8
rdata$r	SEGMENT
??_R3VuCollection@@8 DD 00H				; VuCollection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuCollection@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuCollection@@@8
_DATA	SEGMENT
??_R0?AVVuCollection@@@8 DD FLAT:??_7type_info@@6B@	; VuCollection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuCollection@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuCollection@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuCollection@@8 DD FLAT:??_R0?AVVuCollection@@@8 ; VuCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuCollection@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuGridTree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuGridTree@@8 DD FLAT:??_R0?AVVuGridTree@@@8 ; VuGridTree::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuGridTree@@8
rdata$r	ENDS
;	COMDAT ??_R2VuGridTree@@8
rdata$r	SEGMENT
??_R2VuGridTree@@8 DD FLAT:??_R1A@?0A@EA@VuGridTree@@8	; VuGridTree::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuCollection@@8
rdata$r	ENDS
;	COMDAT ??_R3VuGridTree@@8
rdata$r	SEGMENT
??_R3VuGridTree@@8 DD 00H				; VuGridTree::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuGridTree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuGridTree@@@8
_DATA	SEGMENT
??_R0?AVVuGridTree@@@8 DD FLAT:??_7type_info@@6B@	; VuGridTree `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuGridTree@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuGridTree@@6B@
rdata$r	SEGMENT
??_R4VuGridTree@@6B@ DD 00H				; VuGridTree::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuGridTree@@@8
	DD	FLAT:??_R3VuGridTree@@8
rdata$r	ENDS
;	COMDAT ??_7VuGridTree@@6B@
CONST	SEGMENT
??_7VuGridTree@@6B@ DD FLAT:??_R4VuGridTree@@6B@	; VuGridTree::`vftable'
	DD	FLAT:?Purge@VuGridTree@@UAEIE@Z
	DD	FLAT:?Count@VuGridTree@@UBEIXZ
	DD	FLAT:?Type@VuGridTree@@UBE?AW4VU_COLL_TYPE@@XZ
	DD	FLAT:??_EVuGridTree@@UAEPAXI@Z
	DD	FLAT:?PrivateInsert@VuGridTree@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?PrivateRemove@VuGridTree@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?PrivateFind@VuGridTree@@MBE_NPAVVuEntity@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?Count@VuGridTree@@UBEIXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Count@VuGridTree@@UBEIXZ$0
__unwindtable$?Purge@VuGridTree@@UAEIE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Purge@VuGridTree@@UAEIE@Z$0
__unwindtable$??1VuGridTree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuGridTree@@UAE@XZ$0
__unwindtable$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z$1
__unwindtable$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z$1
__ehfuncinfo$?Count@VuGridTree@@UBEIXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Count@VuGridTree@@UBEIXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Purge@VuGridTree@@UAEIE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Purge@VuGridTree@@UAEIE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuGridTree@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VuGridTree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VVuEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VVuEntity@@@@QAE@XZ PROC			; VuBin<VuEntity>::~VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VVuEntity@@@@QAE@XZ ENDP			; VuBin<VuEntity>::~VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z PROC	; VuBin<VuEntity>::VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ENDP	; VuBin<VuEntity>::VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu.h
;	COMDAT ??1VuScopeLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VuScopeLock@@QAE@XZ PROC				; VuScopeLock::~VuScopeLock, COMDAT
; _this$ = ecx

; 92   : 	~VuScopeLock(){ VuxUnlockMutex(m); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuxUnlockMutex@@YAXPAX@Z		; VuxUnlockMutex
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
??1VuScopeLock@@QAE@XZ ENDP				; VuScopeLock::~VuScopeLock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu.h
;	COMDAT ??0VuScopeLock@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0VuScopeLock@@QAE@PAX@Z PROC				; VuScopeLock::VuScopeLock, COMDAT
; _this$ = ecx

; 91   : 	explicit VuScopeLock(VuMutex m) : m(m){ VuxLockMutex(m); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _m$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _m$[ebp]
	push	edx
	call	?VuxLockMutex@@YAXPAX@Z			; VuxLockMutex
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VuScopeLock@@QAE@PAX@Z ENDP				; VuScopeLock::VuScopeLock
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuGridTree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuGridTree@@UAEPAXI@Z PROC				; VuGridTree::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuGridTree@@UAE@XZ			; VuGridTree::~VuGridTree
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuGridTree@@UAEPAXI@Z ENDP				; VuGridTree::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuGridTree@@UBE?AW4VU_COLL_TYPE@@XZ PROC		; VuGridTree::Type
; _this$ = ecx

; 203  : VU_COLL_TYPE VuGridTree::Type() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 	return VU_GRID_TREE_COLLECTION;

	mov	eax, 2049				; 00000801H

; 205  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuGridTree@@UBE?AW4VU_COLL_TYPE@@XZ ENDP		; VuGridTree::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
_l$ = -28						; size = 4
_count$ = -24						; size = 4
_this$ = -20						; size = 4
_i$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Count@VuGridTree@@UBEIXZ PROC				; VuGridTree::Count
; _this$ = ecx

; 194  : unsigned int VuGridTree::Count() const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Count@VuGridTree@@UBEIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 	VuScopeLock l(GetMutex());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMutex@VuCollection@@QBEPAXXZ	; VuCollection::GetMutex
	push	eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0VuScopeLock@@QAE@PAX@Z		; VuScopeLock::VuScopeLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 196  : 	int count = 0;

	mov	DWORD PTR _count$[ebp], 0

; 197  : 	for (unsigned int i = 0; i < res_; i++) {

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN3@Count
$LN2@Count:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN3@Count:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$3[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN1@Count

; 198  : 		count += table_[i]->Count();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _count$[ebp], eax

; 199  : 	}

	jmp	SHORT $LN2@Count
$LN1@Count:

; 200  : 	return count;

	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
	mov	eax, DWORD PTR $T2[ebp]

; 201  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Count@VuGridTree@@UBEIXZ$0:
	lea	ecx, DWORD PTR _l$[ebp]
	jmp	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
__ehhandler$?Count@VuGridTree@@UBEIXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Count@VuGridTree@@UBEIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Count@VuGridTree@@UBEIXZ ENDP				; VuGridTree::Count
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
_l$ = -28						; size = 4
_retval$ = -24						; size = 4
_this$ = -20						; size = 4
_i$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_all$ = 8						; size = 1
?Purge@VuGridTree@@UAEIE@Z PROC				; VuGridTree::Purge
; _this$ = ecx

; 185  : unsigned int VuGridTree::Purge(VU_BOOL all){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Purge@VuGridTree@@UAEIE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 187  : 	VuScopeLock l(GetMutex());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMutex@VuCollection@@QBEPAXXZ	; VuCollection::GetMutex
	push	eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0VuScopeLock@@QAE@PAX@Z		; VuScopeLock::VuScopeLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 188  : 	for (unsigned int i = 0; i < res_; i++) {

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN3@Purge
$LN2@Purge:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN3@Purge:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$3[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN1@Purge

; 189  : 		retval += table_[i]->Purge(all);

	movzx	eax, BYTE PTR _all$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _i$3[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _i$3[ebp]
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 190  : 	}

	jmp	SHORT $LN2@Purge
$LN1@Purge:

; 191  : 	return retval;

	mov	ecx, DWORD PTR _retval$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
	mov	eax, DWORD PTR $T2[ebp]

; 192  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Purge@VuGridTree@@UAEIE@Z$0:
	lea	ecx, DWORD PTR _l$[ebp]
	jmp	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
__ehhandler$?Purge@VuGridTree@@UAEIE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Purge@VuGridTree@@UAEIE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Purge@VuGridTree@@UAEIE@Z ENDP				; VuGridTree::Purge
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
_row$ = -12						; size = 4
_bkf$ = -8						; size = 4
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
?PrivateFind@VuGridTree@@MBE_NPAVVuEntity@@@Z PROC	; VuGridTree::PrivateFind
; _this$ = ecx

; 36   : bool VuGridTree::PrivateFind(VuEntity* entity) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 	VuBiKeyFilter *bkf = GetBiKeyFilter();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ ; VuGridTree::GetBiKeyFilter
	mov	DWORD PTR _bkf$[ebp], eax

; 38   : 	const VuRedBlackTree* row = table_[bkf->Key1(entity)];

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?Key1@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z ; VuBiKeyFilter::Key1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _row$[ebp], eax

; 39   : 	return row->Find(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	?Find@VuCollection@@QBE_NPAVVuEntity@@@Z ; VuCollection::Find

; 40   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?PrivateFind@VuGridTree@@MBE_NPAVVuEntity@@@Z ENDP	; VuGridTree::PrivateFind
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
_res$ = -16						; size = 4
_row$ = -12						; size = 4
_bkf$ = -8						; size = 4
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
?PrivateRemove@VuGridTree@@MAEHPAVVuEntity@@@Z PROC	; VuGridTree::PrivateRemove
; _this$ = ecx

; 29   : VU_ERRCODE VuGridTree::PrivateRemove(VuEntity *entity){

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 30   : 	VuBiKeyFilter *bkf = GetBiKeyFilter();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ ; VuGridTree::GetBiKeyFilter
	mov	DWORD PTR _bkf$[ebp], eax

; 31   : 	VuRedBlackTree* row = table_[bkf->Key1(entity)];

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?Key1@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z ; VuBiKeyFilter::Key1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _row$[ebp], eax

; 32   : 	VU_ERRCODE res = row->Remove(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove
	mov	DWORD PTR _res$[ebp], eax

; 33   : 	return res;

	mov	eax, DWORD PTR _res$[ebp]

; 34   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?PrivateRemove@VuGridTree@@MAEHPAVVuEntity@@@Z ENDP	; VuGridTree::PrivateRemove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
_row$ = -12						; size = 4
_bkf$ = -8						; size = 4
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
?PrivateInsert@VuGridTree@@MAEHPAVVuEntity@@@Z PROC	; VuGridTree::PrivateInsert
; _this$ = ecx

; 23   : VU_ERRCODE VuGridTree::PrivateInsert(VuEntity* entity){

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 24   : 	VuBiKeyFilter *bkf = GetBiKeyFilter();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ ; VuGridTree::GetBiKeyFilter
	mov	DWORD PTR _bkf$[ebp], eax

; 25   : 	VuRedBlackTree *row = table_[bkf->Key1(entity)];

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?Key1@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z ; VuBiKeyFilter::Key1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _row$[ebp], eax

; 26   : 	return row->ForcedInsert(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _row$[ebp]
	call	?ForcedInsert@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::ForcedInsert

; 27   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?PrivateInsert@VuGridTree@@MAEHPAVVuEntity@@@Z ENDP	; VuGridTree::PrivateInsert
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ PROC ; VuGridTree::GetBiKeyFilter
; _this$ = ecx

; 61   : VuBiKeyFilter *VuGridTree::GetBiKeyFilter() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 	return static_cast<VuBiKeyFilter*>(GetFilter());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFilter@VuCollection@@IBEPAVVuFilter@@XZ ; VuCollection::GetFilter

; 63   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ ENDP ; VuGridTree::GetBiKeyFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
$T2 = -52						; size = 4
$T3 = -48						; size = 4
_safe$4 = -44						; size = 4
_nk2$5 = -40						; size = 4
_ck2$6 = -36						; size = 4
_l$ = -32						; size = 4
_nk1$7 = -28						; size = 4
_ck1$8 = -24						; size = 4
_this$ = -20						; size = 4
_bkf$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ent$ = 8						; size = 4
_coord1$ = 12						; size = 4
_coord2$ = 16						; size = 4
?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z PROC		; VuGridTree::Move
; _this$ = ecx

; 42   : VU_ERRCODE VuGridTree::Move(VuEntity *ent, BIG_SCALAR coord1, BIG_SCALAR coord2){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 43   : 	VuScopeLock l(GetMutex());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMutex@VuCollection@@QBEPAXXZ	; VuCollection::GetMutex
	push	eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0VuScopeLock@@QAE@PAX@Z		; VuScopeLock::VuScopeLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 44   : 	VuBiKeyFilter *bkf = GetBiKeyFilter();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBiKeyFilter@VuGridTree@@ABEPAVVuBiKeyFilter@@XZ ; VuGridTree::GetBiKeyFilter
	mov	DWORD PTR _bkf$[ebp], eax

; 45   : 	if ((ent != NULL) && (ent->VuState() == VU_MEM_ACTIVE) && bkf->RemoveTest(ent)) {

	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN3@Move
	mov	ecx, DWORD PTR _ent$[ebp]
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	$LN3@Move
	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bkf$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bkf$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@Move

; 46   : 		VuEntityBin safe(ent);

	mov	edx, DWORD PTR _ent$[ebp]
	push	edx
	lea	ecx, DWORD PTR _safe$4[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 47   : 		VU_KEY ck1 = bkf->Key1(ent);

	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?Key1@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z ; VuBiKeyFilter::Key1
	mov	DWORD PTR _ck1$8[ebp], eax

; 48   : 		VU_KEY nk1 = bkf->CoordToKey(coord1);

	push	ecx
	movss	xmm0, DWORD PTR _coord1$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?CoordToKey@VuBiKeyFilter@@QBEKM@Z	; VuBiKeyFilter::CoordToKey
	mov	DWORD PTR _nk1$7[ebp], eax

; 49   : 		VU_KEY ck2 = bkf->Key2(ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?Key2@VuBiKeyFilter@@QBEKPBVVuEntity@@@Z ; VuBiKeyFilter::Key2
	mov	DWORD PTR _ck2$6[ebp], eax

; 50   : 		VU_KEY nk2 = bkf->CoordToKey(coord2);

	push	ecx
	movss	xmm0, DWORD PTR _coord2$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _bkf$[ebp]
	call	?CoordToKey@VuBiKeyFilter@@QBEKM@Z	; VuBiKeyFilter::CoordToKey
	mov	DWORD PTR _nk2$5[ebp], eax

; 51   : 		if (ck1 != nk1 || ck2 != nk2){

	mov	edx, DWORD PTR _ck1$8[ebp]
	cmp	edx, DWORD PTR _nk1$7[ebp]
	jne	SHORT $LN1@Move
	mov	eax, DWORD PTR _ck2$6[ebp]
	cmp	eax, DWORD PTR _nk2$5[ebp]
	je	SHORT $LN2@Move
$LN1@Move:

; 52   : 			// keys changed... have to remove and insert again
; 53   : 			table_[ck1]->Remove(ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _ck1$8[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4]
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 54   : 			table_[nk1]->Insert(ent);

	mov	edx, DWORD PTR _ent$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _nk1$7[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	call	?Insert@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Insert
$LN2@Move:

; 55   : 		}
; 56   : 		return VU_SUCCESS;

	mov	DWORD PTR $T3[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _safe$4[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN4@Move
$LN3@Move:

; 57   : 	}
; 58   : 	return VU_NO_OP;

	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
	mov	eax, DWORD PTR $T2[ebp]
$LN4@Move:

; 59   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z$0:
	lea	ecx, DWORD PTR _l$[ebp]
	jmp	??1VuScopeLock@@QAE@XZ			; VuScopeLock::~VuScopeLock
__unwindfunclet$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z$1:
	lea	ecx, DWORD PTR _safe$4[ebp]
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Move@VuGridTree@@AAEHPAVVuEntity@@MM@Z ENDP		; VuGridTree::Move
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuGridTree@@UAE@XZ PROC				; VuGridTree::~VuGridTree
; _this$ = ecx

; 17   : VuGridTree::~VuGridTree(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuGridTree@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuGridTree@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 18   : 	Purge();

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@VuGridTree@@UAEIE@Z		; VuGridTree::Purge

; 19   : 	delete [] table_;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 20   : 	vuCollectionManager->GridDeRegister(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?vuCollectionManager@@3PAVVuCollectionManager@@A ; vuCollectionManager
	call	?GridDeRegister@VuCollectionManager@@QAEXPAVVuGridTree@@@Z ; VuCollectionManager::GridDeRegister

; 21   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuCollection@@MAE@XZ			; VuCollection::~VuCollection
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuGridTree@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuCollection@@MAE@XZ			; VuCollection::~VuCollection
__ehhandler$??1VuGridTree@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuGridTree@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuGridTree@@UAE@XZ ENDP				; VuGridTree::~VuGridTree
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_grid_tree.cpp
_TEXT	SEGMENT
$T2 = -36						; size = 4
$T3 = -32						; size = 4
tv148 = -28						; size = 4
$T4 = -24						; size = 4
_i$5 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_filter$ = 8						; size = 4
_res$ = 12						; size = 4
??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z PROC		; VuGridTree::VuGridTree
; _this$ = ecx

; 9    : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _filter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuCollection@@IAE@PAVVuFilter@@_N@Z	; VuCollection::VuCollection
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuGridTree@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+24], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0

; 10   : 	table_        = new VuRedBlackTree*[res_];

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+16], ecx

; 11   : 	for (unsigned int i = 0; i < res_; ++i) {

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN3@VuGridTree
$LN2@VuGridTree:
	mov	edx, DWORD PTR _i$5[ebp]
	add	edx, 1
	mov	DWORD PTR _i$5[ebp], edx
$LN3@VuGridTree:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$5[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN1@VuGridTree

; 12   : 		table_[i] = new VuRedBlackTree(filter);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@VuGridTree
	mov	edx, DWORD PTR _filter$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z ; VuRedBlackTree::VuRedBlackTree
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN7@VuGridTree
$LN6@VuGridTree:
	mov	DWORD PTR tv148[ebp], 0
$LN7@VuGridTree:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _i$5[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 13   : 	}

	jmp	SHORT $LN2@VuGridTree
$LN1@VuGridTree:

; 14   : 	vuCollectionManager->GridRegister(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuCollectionManager@@3PAVVuCollectionManager@@A ; vuCollectionManager
	call	?GridRegister@VuCollectionManager@@QAEXPAVVuGridTree@@@Z ; VuCollectionManager::GridRegister

; 15   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuCollection@@MAE@XZ			; VuCollection::~VuCollection
__unwindfunclet$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuGridTree@@QAE@PAVVuBiKeyFilter@@I@Z ENDP		; VuGridTree::VuGridTree
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vucoll.h
;	COMDAT ?GetMutex@VuCollection@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMutex@VuCollection@@QBEPAXXZ PROC			; VuCollection::GetMutex, COMDAT
; _this$ = ecx

; 100  : 	inline VuMutex GetMutex() const { return const_cast<VuMutex>(mutex_); } 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMutex@VuCollection@@QBEPAXXZ ENDP			; VuCollection::GetMutex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ PROC		; VuEntity::VuState, COMDAT
; _this$ = ecx

; 153  : 	VU_MEM VuState() const    { return vuState_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ ENDP		; VuEntity::VuState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
END
