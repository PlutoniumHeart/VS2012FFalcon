; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\vu2\src\vu_rb_tree.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
PUBLIC	?IsPrivate@VuEntity@@QBEEXZ			; VuEntity::IsPrivate
PUBLIC	?IsGlobal@VuEntity@@QBEEXZ			; VuEntity::IsGlobal
PUBLIC	?IsPersistent@VuEntity@@QBEEXZ			; VuEntity::IsPersistent
PUBLIC	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ		; VuEntity::VuState
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z	; VuRedBlackTree::VuRedBlackTree
PUBLIC	??1VuRedBlackTree@@UAE@XZ			; VuRedBlackTree::~VuRedBlackTree
PUBLIC	?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z ; VuRedBlackTree::PrivateInsert
PUBLIC	?PrivateRemove@VuRedBlackTree@@MAEHPAVVuEntity@@@Z ; VuRedBlackTree::PrivateRemove
PUBLIC	?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z ; VuRedBlackTree::PrivateFind
PUBLIC	?Purge@VuRedBlackTree@@UAEIE@Z			; VuRedBlackTree::Purge
PUBLIC	?Count@VuRedBlackTree@@UBEIXZ			; VuRedBlackTree::Count
PUBLIC	?Type@VuRedBlackTree@@UBE?AW4VU_COLL_TYPE@@XZ	; VuRedBlackTree::Type
PUBLIC	?GetKeyFilter@VuRedBlackTree@@EBEPAVVuKeyFilter@@XZ ; VuRedBlackTree::GetKeyFilter
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
PUBLIC	??0?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
PUBLIC	??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::~_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Freeheadnode
PUBLIC	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
PUBLIC	??0?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
PUBLIC	?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode0
PUBLIC	?_Freenode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Freenode0
PUBLIC	??1?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@XZ ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::~_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
PUBLIC	??0?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
PUBLIC	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
PUBLIC	??1?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::max_size
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::clear
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find
PUBLIC	?count@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::count
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::equal_range
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Destroy_if_not_nil
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Eqrange
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Erase
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tidy
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
PUBLIC	??0?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
PUBLIC	??1?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::~multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
PUBLIC	??_GVuRedBlackTree@@UAEPAXI@Z			; VuRedBlackTree::`scalar deleting destructor'
PUBLIC	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
PUBLIC	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z		; VuBin<VuEntity>::VuBin<VuEntity>
PUBLIC	??1?$VuBin@VVuEntity@@@@QAE@XZ			; VuBin<VuEntity>::~VuBin<VuEntity>
PUBLIC	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::operator->
PUBLIC	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::get
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator--
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
PUBLIC	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--
PUBLIC	??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z ; std::make_pair<unsigned long,VuBin<VuEntity> >
PUBLIC	??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ	; std::pair<unsigned long,VuBin<VuEntity> >::~pair<unsigned long,VuBin<VuEntity> >
PUBLIC	??1?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@XZ ; std::pair<unsigned long const ,VuBin<VuEntity> >::~pair<unsigned long const ,VuBin<VuEntity> >
PUBLIC	??_G?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAEPAXI@Z ; std::pair<unsigned long const ,VuBin<VuEntity> >::`scalar deleting destructor'
PUBLIC	??$?0KV?$VuBin@VVuEntity@@@@@?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@PAPAX@Z ; std::pair<unsigned long const ,VuBin<VuEntity> >::pair<unsigned long const ,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
PUBLIC	??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::insert<std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
PUBLIC	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
PUBLIC	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
PUBLIC	??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@ABU32@@Z ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > const *>::pointer_to
PUBLIC	??$addressof@$$CBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@ABU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > const >
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@0PAPAX@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
PUBLIC	??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
PUBLIC	??$_Allocate@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >
PUBLIC	??$forward@K@std@@YA$$QAKAAK@Z			; std::forward<unsigned long>
PUBLIC	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
PUBLIC	??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAK$$QAV?$VuBin@VVuEntity@@@@PAPAX@Z ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
PUBLIC	??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
PUBLIC	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::insert<std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
PUBLIC	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
PUBLIC	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
PUBLIC	??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
PUBLIC	??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
PUBLIC	??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode<std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_nohint<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
PUBLIC	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>
PUBLIC	??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_at<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,bool>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PAU21@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Buynode_if_nil<std::pair<unsigned long const ,VuBin<VuEntity> > &>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
PUBLIC	??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
PUBLIC	??_7VuRedBlackTree@@6B@				; VuRedBlackTree::`vftable'
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R4VuRedBlackTree@@6B@			; VuRedBlackTree::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuRedBlackTree@@@8			; VuRedBlackTree `RTTI Type Descriptor'
PUBLIC	??_R3VuRedBlackTree@@8				; VuRedBlackTree::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuRedBlackTree@@8				; VuRedBlackTree::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuRedBlackTree@@8			; VuRedBlackTree::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VuCollection@@8			; VuCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuCollection@@@8			; VuCollection `RTTI Type Descriptor'
PUBLIC	??_R3VuCollection@@8				; VuCollection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuCollection@@8				; VuCollection::`RTTI Base Class Array'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Unregister@VuCollection@@QAEXXZ:PROC		; VuCollection::Unregister
EXTRN	??0VuCollection@@IAE@PAVVuFilter@@_N@Z:PROC	; VuCollection::VuCollection
EXTRN	??1VuCollection@@MAE@XZ:PROC			; VuCollection::~VuCollection
EXTRN	?GetFilter@VuCollection@@IBEPAVVuFilter@@XZ:PROC ; VuCollection::GetFilter
EXTRN	??_EVuRedBlackTree@@UAEPAXI@Z:PROC		; VuRedBlackTree::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R2VuCollection@@8
rdata$r	SEGMENT
??_R2VuCollection@@8 DD FLAT:??_R1A@?0A@EA@VuCollection@@8 ; VuCollection::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuCollection@@8
rdata$r	SEGMENT
??_R3VuCollection@@8 DD 00H				; VuCollection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuCollection@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuCollection@@@8
_DATA	SEGMENT
??_R0?AVVuCollection@@@8 DD FLAT:??_7type_info@@6B@	; VuCollection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuCollection@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuCollection@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuCollection@@8 DD FLAT:??_R0?AVVuCollection@@@8 ; VuCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuCollection@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuRedBlackTree@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuRedBlackTree@@8 DD FLAT:??_R0?AVVuRedBlackTree@@@8 ; VuRedBlackTree::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuRedBlackTree@@8
rdata$r	ENDS
;	COMDAT ??_R2VuRedBlackTree@@8
rdata$r	SEGMENT
??_R2VuRedBlackTree@@8 DD FLAT:??_R1A@?0A@EA@VuRedBlackTree@@8 ; VuRedBlackTree::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuCollection@@8
rdata$r	ENDS
;	COMDAT ??_R3VuRedBlackTree@@8
rdata$r	SEGMENT
??_R3VuRedBlackTree@@8 DD 00H				; VuRedBlackTree::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuRedBlackTree@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuRedBlackTree@@@8
_DATA	SEGMENT
??_R0?AVVuRedBlackTree@@@8 DD FLAT:??_7type_info@@6B@	; VuRedBlackTree `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuRedBlackTree@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuRedBlackTree@@6B@
rdata$r	SEGMENT
??_R4VuRedBlackTree@@6B@ DD 00H				; VuRedBlackTree::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuRedBlackTree@@@8
	DD	FLAT:??_R3VuRedBlackTree@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7VuRedBlackTree@@6B@
CONST	SEGMENT
??_7VuRedBlackTree@@6B@ DD FLAT:??_R4VuRedBlackTree@@6B@ ; VuRedBlackTree::`vftable'
	DD	FLAT:?Purge@VuRedBlackTree@@UAEIE@Z
	DD	FLAT:?Count@VuRedBlackTree@@UBEIXZ
	DD	FLAT:?Type@VuRedBlackTree@@UBE?AW4VU_COLL_TYPE@@XZ
	DD	FLAT:??_EVuRedBlackTree@@UAEPAXI@Z
	DD	FLAT:?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?PrivateRemove@VuRedBlackTree@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z
	DD	FLAT:?GetKeyFilter@VuRedBlackTree@@EBEPAVVuKeyFilter@@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$0
__ehfuncinfo$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z$0
__ehfuncinfo$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z$0
__unwindtable$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z$2
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z$0
__ehfuncinfo$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$0
__unwindtable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$0
__unwindtable$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$2
__ehfuncinfo$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?Count@VuRedBlackTree@@UBEIXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Count@VuRedBlackTree@@UBEIXZ$0
__unwindtable$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z$0
__unwindtable$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z$0
__unwindtable$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z$1
__unwindtable$??1VuRedBlackTree@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VuRedBlackTree@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1VuRedBlackTree@@UAE@XZ$1
__ehfuncinfo$?Count@VuRedBlackTree@@UBEIXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Count@VuRedBlackTree@@UBEIXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1VuRedBlackTree@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1VuRedBlackTree@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv77 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	push	0
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0KV?$VuBin@VVuEntity@@@@@?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@PAPAX@Z ; std::pair<unsigned long const ,VuBin<VuEntity> >::pair<unsigned long const ,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv77[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PAU21@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PAU21@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Buynode_if_nil<std::pair<unsigned long const ,VuBin<VuEntity> > &>, COMDAT
; _this$ = ecx

; 1639 : 		_Nodeptr _Buynode_if_nil(_Nodeptr _Node, _Valty&&)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1640 : 		{	// node exists, just return it
; 1641 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1642 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PAU21@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Buynode_if_nil<std::pair<unsigned long const ,VuBin<VuEntity> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
	pop	ebp
	ret	0
??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,bool>, COMDAT
; _this$ = ecx

; 138  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 139  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>, COMDAT
; _this$ = ecx

; 138  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 139  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z
_TEXT	SEGMENT
__Newnode$ = -12					; size = 4
_this$ = -8						; size = 4
__Pnode$1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_at<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>, COMDAT
; _this$ = ecx

; 1836 : 		iterator _Insert_at(bool _Addleft, _Nodeptr _Wherenode,

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1837 : 		_Valty&& _Val, _Nodety _Node)
; 1838 : 		{	// add node with value next to _Wherenode, to left if _Addleft
; 1839 : 		if (max_size() - 1 <= this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	ja	SHORT $LN17@Insert_at

; 1840 : 			{	// tree would get too big, fail
; 1841 : 			_Destroy_if_not_nil(_Node);

	mov	edx, DWORD PTR __Node$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Destroy_if_not_nil

; 1842 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN17@Insert_at:

; 1843 : 			}
; 1844 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,
; 1845 : 			_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode_if_nil@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PAU21@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Buynode_if_nil<std::pair<unsigned long const ,VuBin<VuEntity> > &>
	mov	DWORD PTR __Newnode$[ebp], eax

; 1846 : 
; 1847 : 		++this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1848 : 		_Newnode->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1849 : 
; 1850 : 		if (_Wherenode == this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN16@Insert_at

; 1851 : 			{	// first node in tree, just set head values
; 1852 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1853 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1854 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert_at
$LN16@Insert_at:

; 1855 : 			}
; 1856 : 		else if (_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert_at

; 1857 : 			{	// add to left of _Wherenode
; 1858 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1859 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert_at

; 1860 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert_at:

; 1861 : 			}
; 1862 : 		else

	jmp	SHORT $LN15@Insert_at
$LN14@Insert_at:

; 1863 : 			{	// add to right of _Wherenode
; 1864 : 			this->_Right(_Wherenode) = _Newnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1865 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert_at

; 1866 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert_at:

; 1867 : 			}
; 1868 : 
; 1869 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$1[ebp], edx
$LN10@Insert_at:

; 1870 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert_at

; 1871 : 			if (this->_Parent(_Pnode)
; 1872 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert_at

; 1873 : 				{	// fixup red-red in left subtree
; 1874 : 				_Wherenode =
; 1875 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 1876 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert_at

; 1877 : 					{	// parent has two red children, blacken both
; 1878 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1879 : 					this->_Color(_Wherenode) = this->_Black;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1880 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1881 : 						= this->_Red;

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1882 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx

; 1883 : 					}
; 1884 : 				else

	jmp	$LN6@Insert_at
$LN7@Insert_at:

; 1885 : 					{	// parent has red and black children
; 1886 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert_at

; 1887 : 						{	// rotate right child to left
; 1888 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 1889 : 						_Lrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate
$LN5@Insert_at:

; 1890 : 						}
; 1891 : 					this->_Color(this->_Parent(_Pnode)) =
; 1892 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1893 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1894 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1895 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate
$LN6@Insert_at:

; 1896 : 					}
; 1897 : 				}
; 1898 : 			else

	jmp	$LN4@Insert_at
$LN8@Insert_at:

; 1899 : 				{	// fixup red-red in right subtree
; 1900 : 				_Wherenode =
; 1901 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 1902 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert_at

; 1903 : 					{	// parent has two red children, blacken both
; 1904 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1905 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1906 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1907 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1908 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 1909 : 					}
; 1910 : 				else

	jmp	$LN4@Insert_at
$LN3@Insert_at:

; 1911 : 					{	// parent has red and black children
; 1912 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert_at

; 1913 : 						{	// rotate left child to right
; 1914 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 1915 : 						_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate
$LN1@Insert_at:

; 1916 : 						}
; 1917 : 					this->_Color(this->_Parent(_Pnode)) =
; 1918 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1919 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1920 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1921 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate
$LN4@Insert_at:

; 1922 : 					}
; 1923 : 				}

	jmp	$LN10@Insert_at
$LN9@Insert_at:

; 1924 : 
; 1925 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1926 : 		return (iterator(_Newnode, this));

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert_at:

; 1927 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_at<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAEPAXI@Z

; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>, COMDAT
; _this$ = ecx

; 182  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 183  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
_TEXT	SEGMENT
$T2 = -200						; size = 8
$T3 = -192						; size = 8
$T4 = -184						; size = 8
$T5 = -176						; size = 8
$T6 = -168						; size = 4
$T7 = -164						; size = 4
$T8 = -160						; size = 4
$T9 = -156						; size = 4
tv274 = -152						; size = 4
tv272 = -148						; size = 4
tv289 = -144						; size = 4
tv282 = -140						; size = 4
tv286 = -136						; size = 4
tv276 = -132						; size = 4
tv284 = -128						; size = 4
tv290 = -124						; size = 4
tv299 = -120						; size = 4
tv288 = -116						; size = 4
tv298 = -112						; size = 4
tv285 = -108						; size = 4
tv297 = -104						; size = 4
tv283 = -100						; size = 4
tv296 = -96						; size = 4
tv280 = -92						; size = 4
tv294 = -88						; size = 4
tv278 = -84						; size = 4
tv293 = -80						; size = 4
tv275 = -76						; size = 4
tv291 = -72						; size = 4
tv273 = -68						; size = 4
tv292 = -64						; size = 4
tv279 = -60						; size = 4
tv153 = -56						; size = 4
tv128 = -52						; size = 4
$T10 = -47						; size = 1
$T11 = -46						; size = 1
$T12 = -45						; size = 1
__Where$13 = -44					; size = 4
__Wherenode$14 = -40					; size = 4
__Trynode$15 = -36					; size = 4
$T16 = -32						; size = 1
tv281 = -31						; size = 1
tv295 = -30						; size = 1
$T17 = -29						; size = 1
tv287 = -28						; size = 1
tv277 = -27						; size = 1
$T18 = -26						; size = 1
$T19 = -25						; size = 1
_this$ = -24						; size = 4
__Addleft$20 = -17					; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_nohint<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>, COMDAT
; _this$ = ecx

; 1780 : 		_Pairib _Insert_nohint(bool _Leftish,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 184				; 000000b8H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1781 : 			_Valty&& _Val, _Nodety _Newnode)
; 1782 : 		{	// try to insert node, on left if _Leftish
; 1783 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1784 : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	DWORD PTR tv272[ebp], eax
	mov	eax, DWORD PTR tv272[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$15[ebp], ecx

; 1785 : 		_Nodeptr _Wherenode = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Wherenode$14[ebp], eax

; 1786 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$20[ebp], 1
$LN12@Insert_noh:

; 1787 : 
; 1788 : 		while (!this->_Isnil(_Trynode))

	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	mov	DWORD PTR tv273[ebp], eax
	mov	edx, DWORD PTR tv273[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	$LN11@Insert_noh

; 1789 : 			{	// look for leaf to insert before (_Addleft) or after
; 1790 : 			_Wherenode = _Trynode;

	mov	ecx, DWORD PTR __Trynode$15[ebp]
	mov	DWORD PTR __Wherenode$14[ebp], ecx

; 1791 : 			if (_Leftish)

	movzx	edx, BYTE PTR __Leftish$[ebp]
	test	edx, edx
	je	SHORT $LN10@Insert_noh

; 1792 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
	mov	DWORD PTR tv274[ebp], eax
	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	mov	DWORD PTR tv275[ebp], eax
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	DWORD PTR tv276[ebp], eax
	mov	eax, DWORD PTR tv274[ebp]
	push	eax
	mov	ecx, DWORD PTR tv275[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv276[ebp]
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	mov	BYTE PTR tv277[ebp], al
	movzx	edx, BYTE PTR tv277[ebp]
	test	edx, edx
	jne	SHORT $LN16@Insert_noh
	mov	DWORD PTR tv128[ebp], 1
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	DWORD PTR tv128[ebp], 0
$LN17@Insert_noh:
	mov	al, BYTE PTR tv128[ebp]
	mov	BYTE PTR __Addleft$20[ebp], al

; 1793 : 					this->_Key(_Trynode),
; 1794 : 					this->_Kfn(_Val));	// favor left end
; 1795 : 			else

	jmp	SHORT $LN9@Insert_noh
$LN10@Insert_noh:

; 1796 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	ecx, DWORD PTR __Trynode$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	mov	DWORD PTR tv278[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
	mov	DWORD PTR tv279[ebp], eax
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	DWORD PTR tv280[ebp], eax
	mov	ecx, DWORD PTR tv278[ebp]
	push	ecx
	mov	edx, DWORD PTR tv279[ebp]
	push	edx
	mov	ecx, DWORD PTR tv280[ebp]
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	mov	BYTE PTR tv281[ebp], al
	mov	al, BYTE PTR tv281[ebp]
	mov	BYTE PTR __Addleft$20[ebp], al
$LN9@Insert_noh:

; 1797 : 					this->_Kfn(_Val),
; 1798 : 					this->_Key(_Trynode));	// favor right end
; 1799 : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 1800 : 				: this->_Right(_Trynode);

	movzx	ecx, BYTE PTR __Addleft$20[ebp]
	test	ecx, ecx
	je	SHORT $LN18@Insert_noh
	mov	edx, DWORD PTR __Trynode$15[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	DWORD PTR tv282[ebp], eax
	mov	eax, DWORD PTR tv282[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv153[ebp], ecx
	jmp	SHORT $LN19@Insert_noh
$LN18@Insert_noh:
	mov	edx, DWORD PTR __Trynode$15[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	DWORD PTR tv283[ebp], eax
	mov	eax, DWORD PTR tv283[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv153[ebp], ecx
$LN19@Insert_noh:
	mov	edx, DWORD PTR tv153[ebp]
	mov	DWORD PTR __Trynode$15[ebp], edx

; 1801 : 			}

	jmp	$LN12@Insert_noh
$LN11@Insert_noh:

; 1802 : 
; 1803 : 		if (this->_Multi)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN8@Insert_noh

; 1804 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T17[ebp], 1
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>
	add	esp, 4
	mov	DWORD PTR tv284[ebp], eax
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR tv284[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$14[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Addleft$20[ebp]
	push	edx
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_at<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	mov	DWORD PTR tv285[ebp], eax
	push	0
	lea	ecx, DWORD PTR $T17[ebp]
	push	ecx
	mov	edx, DWORD PTR tv285[ebp]
	push	edx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	DWORD PTR tv286[ebp], eax
	push	0
	mov	eax, DWORD PTR tv286[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1805 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1806 : 		else

	jmp	$LN7@Insert_noh
$LN8@Insert_noh:

; 1807 : 			{	// insert only if unique
; 1808 : 			iterator _Where = iterator(_Wherenode, this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$13[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 1809 : 			if (!_Addleft)

	movzx	eax, BYTE PTR __Addleft$20[ebp]
	test	eax, eax
	jne	SHORT $LN6@Insert_noh
	jmp	$LN5@Insert_noh
$LN6@Insert_noh:

; 1810 : 				;	// need to test if insert after is okay
; 1811 : 			else if (_Where == begin())

	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$13[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	mov	BYTE PTR tv287[ebp], al
	movzx	edx, BYTE PTR tv287[ebp]
	test	edx, edx
	je	SHORT $LN4@Insert_noh

; 1812 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	mov	BYTE PTR $T16[ebp], 1
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>
	add	esp, 4
	mov	DWORD PTR tv288[ebp], eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv288[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$14[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_at<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	mov	DWORD PTR tv289[ebp], eax
	push	0
	lea	edx, DWORD PTR $T16[ebp]
	push	edx
	mov	eax, DWORD PTR tv289[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	DWORD PTR tv290[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv290[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1813 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1814 : 			else

	jmp	SHORT $LN5@Insert_noh
$LN4@Insert_noh:

; 1815 : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$13[ebp]
	call	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--
$LN5@Insert_noh:

; 1816 : 
; 1817 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
	mov	DWORD PTR tv291[ebp], eax
	lea	ecx, DWORD PTR __Where$13[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR tv292[ebp], eax
	mov	eax, DWORD PTR tv292[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	mov	DWORD PTR tv293[ebp], eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	DWORD PTR tv294[ebp], eax
	mov	edx, DWORD PTR tv291[ebp]
	push	edx
	mov	eax, DWORD PTR tv293[ebp]
	push	eax
	mov	ecx, DWORD PTR tv294[ebp]
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	mov	BYTE PTR tv295[ebp], al
	movzx	ecx, BYTE PTR tv295[ebp]
	test	ecx, ecx
	je	SHORT $LN2@Insert_noh

; 1818 : 				this->_Key(_Where._Mynode()),
; 1819 : 				this->_Kfn(_Val)))
; 1820 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T18[ebp], 1
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long const ,VuBin<VuEntity> > &>
	add	esp, 4
	mov	DWORD PTR tv296[ebp], eax
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv296[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$14[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$20[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@1@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_at<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	mov	DWORD PTR tv297[ebp], eax
	push	0
	lea	edx, DWORD PTR $T18[ebp]
	push	edx
	mov	eax, DWORD PTR tv297[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	DWORD PTR tv298[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv298[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh

; 1821 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1822 : 			else

	jmp	SHORT $LN7@Insert_noh
$LN2@Insert_noh:

; 1823 : 				{	// duplicate, don't insert
; 1824 : 				_Destroy_if_not_nil(_Newnode);

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Destroy_if_not_nil

; 1825 : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T19[ebp], 0
	push	0
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$13[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QA_NPAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,bool>
	mov	DWORD PTR tv299[ebp], eax
	push	0
	mov	edx, DWORD PTR tv299[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh
$LN7@Insert_noh:
	jmp	SHORT $LN20@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z$0:

; 1826 : 				}
; 1827 : 			}
; 1828 : 		_CATCH_ALL
; 1829 : 		_Destroy_if_not_nil(_Newnode);

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Destroy_if_not_nil

; 1830 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1831 : 		_CATCH_END

	mov	eax, $LN23@Insert_noh
	ret	0
$LN20@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN15@Insert_noh
$LN23@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN15@Insert_noh:

; 1832 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-204]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_nohint<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
tv93 = -40						; size = 4
tv92 = -36						; size = 4
tv91 = -32						; size = 4
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__V0$ = 8						; size = 4
??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode<std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 945  : _VARIADIC_EXPAND_0X(_TREE_BUYNODE, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR __V0$[ebp]
	push	edx
	call	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 4
	mov	DWORD PTR tv91[ebp], eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR tv91[ebp]
	push	edx
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv93[ebp]
	call	??$construct@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@U?$pair@KV?$VuBin@VVuEntity@@@@@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::pair<unsigned long const ,VuBin<VuEntity> >,std::pair<unsigned long,VuBin<VuEntity> > >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$0:
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Freenode0
	push	0
	push	0
	call	__CxxThrowException@8
	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z$1:
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode<std::pair<unsigned long,VuBin<VuEntity> > >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	pop	ebp
	ret	0
??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>, COMDAT

; 797  : 	{	// add to _Off distance between bidirectional iterators (redundant)

	push	ebp
	mov	ebp, esp

; 798  : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Distance2
$LN2@Distance2:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
$LN3@Distance2:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Distance2

; 799  : 		++_Off;

	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Distance2
$LN4@Distance2:

; 800  : 	}

	pop	ebp
	ret	0
??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >, COMDAT

; 398  : 	{	// return category from iterator argument

	push	ebp
	mov	ebp, esp
	push	ecx

; 399  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 400  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 1798 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1799 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1800 : 	}

	pop	ebp
	ret	0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Newnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::insert<std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 1147 : 		typename enable_if<is_convertible<_Valty, value_type>::value,

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 			_Pairib>::type
; 1149 : 		insert(_Valty&& _Val)
; 1150 : 		{	// try to insert node with value _Val, favoring right side
; 1151 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode<std::pair<unsigned long,VuBin<VuEntity> > >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1152 : 		return (_Insert_nohint(false,
; 1153 : 			this->_Myval(_Newnode), _Newnode));

	push	0
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	push	eax
	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_nohint@AAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Insert_nohint<std::pair<unsigned long const ,VuBin<VuEntity> > &,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::insert<std::pair<unsigned long,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU01@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU01@PAPAX@Z PROC ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 182  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>

; 183  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU01@PAPAX@Z ENDP ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAK$$QAV?$VuBin@VVuEntity@@@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 4
??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAK$$QAV?$VuBin@VVuEntity@@@@PAPAX@Z PROC ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 138  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>

; 139  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAK$$QAV?$VuBin@VVuEntity@@@@PAPAX@Z ENDP ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z PROC ; std::forward<VuBin<VuEntity> >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ENDP ; std::forward<VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@K@std@@YA$$QAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@K@std@@YA$$QAKAAK@Z PROC			; std::forward<unsigned long>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@K@std@@YA$$QAKAAK@Z ENDP			; std::forward<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 178956970	; 0aaaaaaaH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 24					; 00000018H
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >, COMDAT

; 54   : 		static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val)

	push	ebp
	mov	ebp, esp

; 55   : 		{	// extract key from element value
; 56   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 57   : 		}

	pop	ebp
	ret	0
??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@0PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@0PAPAX@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>, COMDAT
; _this$ = ecx

; 138  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 139  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@0PAPAX@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@ABU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@ABU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > const >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@$$CBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@ABU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@ABU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@ABU32@@Z PROC ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > const *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@ABU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > const >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@ABU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>, COMDAT

; 830  : 	{	// add to _Off distance between iterators

	push	ebp
	mov	ebp, esp
	push	ecx

; 831  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>
	add	esp, 16					; 00000010H

; 832  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >, COMDAT
; _this$ = ecx

; 182  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 183  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@1@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 46   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 47   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR __Tmp$[ebp], cl

; 48   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 49   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 50   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\map
;	COMDAT ??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z PROC ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::insert<std::pair<unsigned long,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 347  : 		typename enable_if<is_convertible<_Valty, value_type>::value,

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 			iterator>::type
; 349  : 		insert(_Valty&& _Val)
; 350  : 		{	// insert a {key, mapped} value
; 351  : 		return (_Mybase::insert(_STD forward<_Valty>(_Val)).first);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@std@@YA$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::insert<std::pair<unsigned long,VuBin<VuEntity> > >
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 352  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ENDP ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::insert<std::pair<unsigned long,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$?0KV?$VuBin@VVuEntity@@@@@?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?0KV?$VuBin@VVuEntity@@@@@?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@PAPAX@Z PROC ; std::pair<unsigned long const ,VuBin<VuEntity> >::pair<unsigned long const ,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >, COMDAT
; _this$ = ecx

; 182  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>

; 183  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0KV?$VuBin@VVuEntity@@@@@?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@PAPAX@Z ENDP ; std::pair<unsigned long const ,VuBin<VuEntity> >::pair<unsigned long const ,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAEPAXI@Z PROC ; std::pair<unsigned long const ,VuBin<VuEntity> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAEPAXI@Z ENDP ; std::pair<unsigned long const ,VuBin<VuEntity> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@XZ PROC	; std::pair<unsigned long const ,VuBin<VuEntity> >::~pair<unsigned long const ,VuBin<VuEntity> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@QAE@XZ ENDP	; std::pair<unsigned long const ,VuBin<VuEntity> >::~pair<unsigned long const ,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ PROC	; std::pair<unsigned long,VuBin<VuEntity> >::~pair<unsigned long,VuBin<VuEntity> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ ENDP	; std::pair<unsigned long,VuBin<VuEntity> >::~pair<unsigned long,VuBin<VuEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 8
tv81 = -28						; size = 4
tv86 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z PROC ; std::make_pair<unsigned long,VuBin<VuEntity> >, COMDAT

; 270  : 	{	// return pair composed from arguments

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T4[ebp], 0

; 271  : 	typedef pair<typename _Unrefwrap<_Ty1>::type,
; 272  : 		typename _Unrefwrap<_Ty2>::type> _Mypair;
; 273  : 	return (_Mypair(_STD forward<_Ty1>(_Val1),

	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	push	0
	push	0
	mov	edx, DWORD PTR __Val2$[ebp]
	push	edx
	call	??$forward@V?$VuBin@VVuEntity@@@@@std@@YA$$QAV?$VuBin@VVuEntity@@@@AAV1@@Z ; std::forward<VuBin<VuEntity> >
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAK$$QAV?$VuBin@VVuEntity@@@@PAPAX@Z ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv81[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0KV?$VuBin@VVuEntity@@@@@?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<unsigned long,VuBin<VuEntity> >::pair<unsigned long,VuBin<VuEntity> ><unsigned long,VuBin<VuEntity> >
	mov	eax, DWORD PTR $T4[ebp]
	or	eax, 1
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		_STD forward<_Ty2>(_Val2)));
; 275  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
__unwindfunclet$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	and	eax, 1
	je	$LN5@make_pair
	and	DWORD PTR $T4[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
$LN5@make_pair:
	ret	0
__ehhandler$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z ENDP ; std::make_pair<unsigned long,VuBin<VuEntity> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--, COMDAT
; _this$ = ecx

; 424  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 425  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--

; 426  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 427  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 413  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 414  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->, COMDAT
; _this$ = ecx

; 406  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 407  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > *>::pointer_to
	add	esp, 4

; 408  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*, COMDAT
; _this$ = ecx

; 401  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*

; 403  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 384  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 385  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=, COMDAT
; _this$ = ecx

; 340  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 342  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==, COMDAT
; _this$ = ecx

; 322  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 323  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 324  : 		if (this->_Getcont() == 0
; 325  : 			|| this->_Getcont() != _Right._Getcont())
; 326  : 			{	// report error
; 327  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 328  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 329  : 			}
; 330  : 
; 331  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 332  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 333  : 			&& this->_Getcont() == _Right._Getcont());
; 334  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 335  : 
; 336  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 337  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--, COMDAT
; _this$ = ecx

; 283  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 285  : 		if (this->_Getcont() == 0
; 286  : 			|| this->_Ptr == 0)
; 287  : 			{	// report error
; 288  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 289  : 			_SCL_SECURE_OUT_OF_RANGE;
; 290  : 			}
; 291  : 
; 292  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 293  : 		--(*(_Mybase *)this);
; 294  : 		if (_Ptrsav == this->_Ptr)
; 295  : 			{	// report error
; 296  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 297  : 			_SCL_SECURE_OUT_OF_RANGE;
; 298  : 			}
; 299  : 
; 300  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 301  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 302  : 
; 303  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 304  : 		--(*(_Mybase *)this);
; 305  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 306  : 
; 307  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 308  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator--

; 309  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 310  : 
; 311  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 312  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++, COMDAT
; _this$ = ecx

; 276  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 278  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 279  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 280  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++, COMDAT
; _this$ = ecx

; 256  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 258  : 		if (this->_Getcont() == 0
; 259  : 			|| this->_Ptr == 0
; 260  : 			|| _Mytree::_Isnil(this->_Ptr))
; 261  : 			{	// report error
; 262  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 263  : 			_SCL_SECURE_OUT_OF_RANGE;
; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++

; 272  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 273  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->, COMDAT
; _this$ = ecx

; 251  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@SAPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@ABU32@@Z ; std::pointer_traits<std::pair<unsigned long const ,VuBin<VuEntity> > const *>::pointer_to
	add	esp, 4

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		if (this->_Getcont() == 0
; 234  : 			|| this->_Ptr == 0
; 235  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 236  : 			{	// report error
; 237  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 238  : 			_SCL_SECURE_OUT_OF_RANGE;
; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 243  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 244  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 245  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 246  : 
; 247  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>

; 215  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 124  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	jmp	$LN7@operator
$LN8@operator:

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@operator

; 88   : 			_Ptr = _Mytree::_Max(
; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Max
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 90   : 		else

	jmp	SHORT $LN7@operator
$LN4@operator:

; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else

	jmp	SHORT $LN7@operator
$LN2@operator:

; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [edx], eax
$LN7@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 102  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@operator
	jmp	$LN5@operator
$LN6@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(
; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 65   : 		else

	jmp	SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx
	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@operator
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN2@operator
$LN1@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [ecx], edx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 74   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC	; VuBin<VuEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP	; VuBin<VuEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC		; VuBin<VuEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP		; VuBin<VuEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VVuEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VVuEntity@@@@QAE@XZ PROC			; VuBin<VuEntity>::~VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VVuEntity@@@@QAE@XZ ENDP			; VuBin<VuEntity>::~VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z PROC		; VuBin<VuEntity>::VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 15   : 	VuBin(const VuBin &rhs) : e(rhs.e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 16   : 		VuReferenceEntity(e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 17   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z ENDP		; VuBin<VuEntity>::VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z PROC	; VuBin<VuEntity>::VuBin<VuEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ENDP	; VuBin<VuEntity>::VuBin<VuEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVuRedBlackTree@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuRedBlackTree@@UAEPAXI@Z PROC			; VuRedBlackTree::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuRedBlackTree@@UAE@XZ		; VuRedBlackTree::~VuRedBlackTree
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuRedBlackTree@@UAEPAXI@Z ENDP			; VuRedBlackTree::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ PROC ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::~multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ ENDP ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::~multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\map
;	COMDAT ??0?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
??0?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ PROC ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx

; 265  : 		{	// construct empty map from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >

; 266  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ ENDP ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key, COMDAT
; _this$ = ecx

; 2225 : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2226 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn

; 2227 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn, COMDAT
; _this$ = ecx

; 2220 : 		{	// get key from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2221 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@$$CBKV?$VuBin@VVuEntity@@@@@?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@SAABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1>::_Kfn<unsigned long const ,VuBin<VuEntity> >
	add	esp, 4

; 2222 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKABU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
$T4 = -12						; size = 4
$T5 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tidy, COMDAT
; _this$ = ecx

; 2215 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2216 : 		erase(begin(), end());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase

; 2217 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate, COMDAT
; _this$ = ecx

; 2143 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2144 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2145 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 2146 : 
; 2147 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate

; 2148 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:

; 2149 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 2150 : 
; 2151 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate

; 2152 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:

; 2153 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate

; 2154 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2155 : 		else

	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:

; 2156 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:

; 2157 : 
; 2158 : 		this->_Right(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2159 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2160 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root, COMDAT
; _this$ = ecx

; 2138 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2139 : 		return (this->_Parent(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4

; 2140 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost, COMDAT
; _this$ = ecx

; 2133 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2134 : 		return (this->_Right(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4

; 2135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate, COMDAT
; _this$ = ecx

; 2113 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2114 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2115 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 2116 : 
; 2117 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate

; 2118 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:

; 2119 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 2120 : 
; 2121 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate

; 2122 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:

; 2123 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate

; 2124 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2125 : 		else

	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:

; 2126 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:

; 2127 : 
; 2128 : 		this->_Left(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2129 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2130 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost, COMDAT
; _this$ = ecx

; 2108 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2109 : 		return (this->_Left(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4

; 2110 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z
_TEXT	SEGMENT
__Wherenode$ = -16					; size = 4
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
$T1 = -1						; size = 1
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound, COMDAT
; _this$ = ecx

; 2091 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2092 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2093 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:

; 2094 : 
; 2095 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2096 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Lbound

; 2097 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2098 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 2099 : 				{	// _Pnode not less than _Keyval, remember it
; 2100 : 				_Wherenode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 2101 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 2102 : 				}

	jmp	SHORT $LN4@Lbound
$LN3@Lbound:

; 2103 : 
; 2104 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2105 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z
_TEXT	SEGMENT
__Wherenode$ = -16					; size = 4
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
$T1 = -1						; size = 1
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound, COMDAT
; _this$ = ecx

; 2074 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2075 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2076 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:

; 2077 : 
; 2078 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2079 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Lbound

; 2080 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2081 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 2082 : 				{	// _Pnode not less than _Keyval, remember it
; 2083 : 				_Wherenode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 2084 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 2085 : 				}

	jmp	SHORT $LN4@Lbound
$LN3@Lbound:

; 2086 : 
; 2087 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2088 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$1 = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Erase, COMDAT
; _this$ = ecx

; 2060 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2061 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 2062 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	jmp	SHORT $LN3@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN3@Erase:
	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Erase

; 2063 : 			{	// free subtrees, then node
; 2064 : 			_Erase(this->_Right(_Pnode));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Erase

; 2065 : 			_Pnode = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx

; 2066 : 			this->_Getal().destroy(
; 2067 : 				_STD addressof(this->_Myval(_Rootnode)));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >

; 2068 : 
; 2069 : 			this->_Getal().deallocate(_Rootnode, 1);

	push	1
	mov	ecx, DWORD PTR __Rootnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 2070 : 			}

	jmp	$LN2@Erase
$LN4@Erase:

; 2071 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z
_TEXT	SEGMENT
$T1 = -40						; size = 8
__First$ = -32						; size = 4
__Last$ = -28						; size = 4
__Lonode$ = -24						; size = 4
tv160 = -20						; size = 4
__Hinode$ = -16						; size = 4
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Eqrange, COMDAT
; _this$ = ecx

; 1990 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1991 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1992 : 		_Nodeptr _Lonode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Lonode$[ebp], edx

; 1993 : 		_Nodeptr _Hinode = this->_Myhead;	// end() if search fails

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Hinode$[ebp], ecx
$LN9@Eqrange:

; 1994 : 
; 1995 : 		while (!this->_Isnil(_Pnode))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	$LN8@Eqrange

; 1996 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@Eqrange

; 1997 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1998 : 			else

	jmp	SHORT $LN6@Eqrange
$LN7@Eqrange:

; 1999 : 				{	// _Pnode not less than _Keyval, remember it
; 2000 : 				if (this->_Isnil(_Hinode)
; 2001 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

	mov	ecx, DWORD PTR __Hinode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN5@Eqrange
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Eqrange

; 2002 : 						this->_Key(_Pnode)))
; 2003 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], ecx
$LN5@Eqrange:

; 2004 : 				_Lonode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Lonode$[ebp], edx

; 2005 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN6@Eqrange:

; 2006 : 				}

	jmp	$LN9@Eqrange
$LN8@Eqrange:

; 2007 : 
; 2008 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()
; 2009 : 			: this->_Left(_Hinode);	// continue scan for upper bound

	mov	edx, DWORD PTR __Hinode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN12@Eqrange
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv160[ebp], ecx
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	edx, DWORD PTR __Hinode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv160[ebp], eax
$LN13@Eqrange:
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN4@Eqrange:

; 2010 : 		while (!this->_Isnil(_Pnode))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Eqrange

; 2011 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Eqrange

; 2012 : 				{	// _Pnode greater than _Keyval, remember it
; 2013 : 				_Hinode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Hinode$[ebp], edx

; 2014 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2015 : 				}
; 2016 : 			else

	jmp	SHORT $LN1@Eqrange
$LN2@Eqrange:

; 2017 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN1@Eqrange:
	jmp	SHORT $LN4@Eqrange
$LN3@Eqrange:

; 2018 : 
; 2019 : 		const_iterator _First = const_iterator(_Lonode, this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Lonode$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 2020 : 		const_iterator _Last = const_iterator(_Hinode, this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Hinode$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 2021 : 		return (_Paircc(_First, _Last));

	push	0
	push	0
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@AAV01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@0PAPAX@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > &>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2022 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Eqrange@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Eqrange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1651 : 		{	// node exists, destroy it

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1652 : 		this->_Getal().destroy(
; 1653 : 			_STD addressof(this->_Myval(_Newnode)));

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >

; 1654 : 
; 1655 : 		this->_Getal().deallocate(_Newnode, 1);

	push	1
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 1656 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::equal_range, COMDAT
; _this$ = ecx

; 1596 : 		{	// find range equivalent to _Keyval in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1597 : 		return (_Eqrange(_Keyval));

	push	0
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Eqrange
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1598 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::equal_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound, COMDAT
; _this$ = ecx

; 1576 : 		{	// find leftmost node not less than _Keyval in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1577 : 		return (const_iterator(_Lbound(_Keyval), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1578 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound, COMDAT
; _this$ = ecx

; 1571 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		return (iterator(_Lbound(_Keyval), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1573 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?count@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIABK@Z
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Ans$ = -16						; size = 8
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?count@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::count, COMDAT
; _this$ = ecx

; 1563 : 		{	// count all elements that match _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1564 : 		_Paircc _Ans = equal_range(_Keyval);

	push	0
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::equal_range
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V01@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@V12@@std@@QAE@$$QAU01@PAPAX@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > > >

; 1565 : 		size_type _Num = 0;

	mov	DWORD PTR __Num$[ebp], 0

; 1566 : 		_Distance(_Ans.first, _Ans.second, _Num);

	lea	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ans$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Ans$[ebp]
	push	ecx
	call	??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >,unsigned int>
	add	esp, 12					; 0000000cH

; 1567 : 		return (_Num);

	mov	eax, DWORD PTR __Num$[ebp]

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?count@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
tv132 = -16						; size = 4
__Where$ = -12						; size = 4
_this$ = -8						; size = 4
$T5 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find, COMDAT
; _this$ = ecx

; 1554 : 		{	// find an element in nonmutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1555 : 		const_iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound

; 1556 : 		return (_Where == end()
; 1557 : 			|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1558 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1559 : 					? end() : _Where);

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	lea	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv132[ebp], edx
	jmp	SHORT $LN4@find
$LN3@find:
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	mov	DWORD PTR tv132[ebp], eax
$LN4@find:
	mov	ecx, DWORD PTR tv132[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1560 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
tv140 = -16						; size = 4
__Where$ = -12						; size = 4
_this$ = -8						; size = 4
$T5 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find, COMDAT
; _this$ = ecx

; 1545 : 		{	// find an element in mutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1546 : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::lower_bound

; 1547 : 		return (_Where == end()
; 1548 : 			|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1549 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1550 : 					? end() : _Where);

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEABKPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@K@std@@QBE_NABK0@Z		; std::less<unsigned long>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	lea	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv140[ebp], edx
	jmp	SHORT $LN4@find
$LN3@find:
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	mov	DWORD PTR tv140[ebp], eax
$LN4@find:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1551 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::clear, COMDAT
; _this$ = ecx

; 1532 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1533 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1534 : 		this->_Orphan_ptr(*this, 0);
; 1535 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1536 : 
; 1537 : 		_Erase(_Root());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Erase

; 1538 : 		_Root() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1539 : 		_Lmost() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1540 : 		_Rmost() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1541 : 		this->_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1542 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
$T4 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase, COMDAT
; _this$ = ecx

; 1508 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1509 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase

; 1510 : 			{	// erase all
; 1511 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::clear

; 1512 : 			return (begin());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase

; 1513 : 			}
; 1514 : 		else

	jmp	SHORT $LN5@erase
$LN2@erase:

; 1515 : 			{	// partial erase, one at a time
; 1516 : 			while (_First != _Last)

	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase

; 1517 : 				erase(_First++);

	push	0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase
	jmp	SHORT $LN2@erase
$LN1@erase:

; 1518 : 			return (iterator(_First._Ptr, this));

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:

; 1519 : 			}
; 1520 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -32						; size = 4
tv170 = -28						; size = 4
_this$ = -24						; size = 4
__Erasednode$ = -20					; size = 4
__Fixnode$ = -16					; size = 4
__Fixnodeparent$ = -12					; size = 4
__Pnode$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase, COMDAT
; _this$ = ecx

; 1323 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1324 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1325 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1326 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1327 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1328 : 		++_Where;	// save successor iterator for return
; 1329 : 		_Orphan_ptr(*this, _Erasednode);
; 1330 : 
; 1331 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1332 : 		if (this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN40@erase

; 1333 : 			_Xout_of_range("invalid map/set<T> iterator");

	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN40@erase:

; 1334 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1335 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 1336 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1337 : 
; 1338 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1339 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1340 : 		_Nodeptr _Pnode = _Erasednode;

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1341 : 
; 1342 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN39@erase

; 1343 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
	jmp	SHORT $LN38@erase
$LN39@erase:

; 1344 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN37@erase

; 1345 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx

; 1346 : 		else

	jmp	SHORT $LN38@erase
$LN37@erase:

; 1347 : 			{	// two subtrees, must lift successor node to replace erased
; 1348 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1349 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
$LN38@erase:

; 1350 : 			}
; 1351 : 
; 1352 : 		if (_Pnode == _Erasednode)

	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase

; 1353 : 			{	// at most one subtree, relink it
; 1354 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1355 : 			if (!this->_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN34@erase

; 1356 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN34@erase:

; 1357 : 
; 1358 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase

; 1359 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase
$LN33@erase:

; 1360 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase

; 1361 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1362 : 			else

	jmp	SHORT $LN32@erase
$LN31@erase:

; 1363 : 				this->_Right(_Fixnodeparent) =
; 1364 : 					_Fixnode;	// link down to right

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase:

; 1365 : 
; 1366 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase

; 1367 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1368 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1369 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN43@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv170[ebp], edx
	jmp	SHORT $LN44@erase
$LN43@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
	add	esp, 4
	mov	DWORD PTR tv170[ebp], eax
$LN44@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase:

; 1370 : 
; 1371 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase

; 1372 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1373 : 					? _Fixnodeparent	// largest is parent of erased node
; 1374 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN45@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv182[ebp], edx
	jmp	SHORT $LN46@erase
$LN45@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Max
	add	esp, 4
	mov	DWORD PTR tv182[ebp], eax
$LN46@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rmost
	mov	ecx, DWORD PTR tv182[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase:

; 1375 : 			}
; 1376 : 		else

	jmp	$LN27@erase
$LN35@erase:

; 1377 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1378 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1379 : 				_Pnode;	// link left up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1380 : 			this->_Left(_Pnode) =
; 1381 : 				this->_Left(_Erasednode);	// link successor down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1382 : 
; 1383 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase

; 1384 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx

; 1385 : 			else

	jmp	$LN25@erase
$LN26@erase:

; 1386 : 				{	// successor further down, link in place of erased
; 1387 : 				_Fixnodeparent =
; 1388 : 					this->_Parent(_Pnode);	// parent is successor's

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1389 : 				if (!this->_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase

; 1390 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase:

; 1391 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1392 : 				this->_Right(_Pnode) =
; 1393 : 					this->_Right(_Erasednode);	// link next down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1394 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1395 : 					_Pnode;	// right up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase:

; 1396 : 				}
; 1397 : 
; 1398 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase

; 1399 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase
$LN23@erase:

; 1400 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase

; 1401 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1402 : 					_Pnode;	// link down to left

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1403 : 			else

	jmp	SHORT $LN22@erase
$LN21@erase:

; 1404 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1405 : 					_Pnode;	// link down to right

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase:

; 1406 : 
; 1407 : 			this->_Parent(_Pnode) =
; 1408 : 				this->_Parent(_Erasednode);	// link successor up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1409 : 			_STD swap(this->_Color(_Pnode),
; 1410 : 				this->_Color(_Erasednode));	// recolor it

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase:

; 1411 : 			}
; 1412 : 
; 1413 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase

; 1414 : 			{	// erasing black link, must recolor/rebalance tree
; 1415 : 			for (; _Fixnode != _Root()
; 1416 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1417 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	jmp	SHORT $LN18@erase
$LN17@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase

; 1418 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase

; 1419 : 					{	// fixup left subtree
; 1420 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1421 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase

; 1422 : 						{	// rotate red up from right subtree
; 1423 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1424 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1425 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate

; 1426 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase:

; 1427 : 						}
; 1428 : 
; 1429 : 					if (this->_Isnil(_Pnode))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase

; 1430 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1431 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN12@erase
$LN13@erase:

; 1432 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase

; 1433 : 						{	// redden right subtree with black children
; 1434 : 						this->_Color(_Pnode) = this->_Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1435 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1436 : 						}
; 1437 : 					else

	jmp	$LN12@erase
$LN11@erase:

; 1438 : 						{	// must rearrange right subtree
; 1439 : 						if (this->_Color(this->_Right(_Pnode))
; 1440 : 							== this->_Black)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase

; 1441 : 							{	// rotate red up from left sub-subtree
; 1442 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1443 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1444 : 							_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate

; 1445 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase:

; 1446 : 							}
; 1447 : 
; 1448 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1449 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1450 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1451 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate

; 1452 : 						break;	// tree now recolored/rebalanced

	jmp	$LN16@erase
$LN12@erase:

; 1453 : 						}
; 1454 : 					}
; 1455 : 				else

	jmp	$LN8@erase
$LN15@erase:

; 1456 : 					{	// fixup right subtree
; 1457 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1458 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase

; 1459 : 						{	// rotate red up from left subtree
; 1460 : 						this->_Color(_Pnode) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1461 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1462 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate

; 1463 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase:

; 1464 : 						}
; 1465 : 
; 1466 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase

; 1467 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx

; 1468 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN8@erase
$LN6@erase:

; 1469 : 						this->_Black
; 1470 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase

; 1471 : 						{	// redden left subtree with black children
; 1472 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1473 : 						_Fixnode = _Fixnodeparent;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1474 : 						}
; 1475 : 					else

	jmp	$LN8@erase
$LN4@erase:

; 1476 : 						{	// must rearrange left subtree
; 1477 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase

; 1478 : 							{	// rotate red up from right sub-subtree
; 1479 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1480 : 							this->_Color(_Pnode) = this->_Red;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1481 : 							_Lrotate(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lrotate

; 1482 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase:

; 1483 : 							}
; 1484 : 
; 1485 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1486 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1487 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1488 : 						_Rrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Rrotate

; 1489 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase
$LN8@erase:

; 1490 : 						}
; 1491 : 					}

	jmp	$LN17@erase
$LN16@erase:

; 1492 : 
; 1493 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase:

; 1494 : 			}
; 1495 : 
; 1496 : 		this->_Getal().destroy(
; 1497 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@YAPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned long const ,VuBin<VuEntity> > >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::pair<unsigned long const ,VuBin<VuEntity> > >

; 1498 : 
; 1499 : 		this->_Getal().deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 1500 : 
; 1501 : 		if (0 < this->_Mysize)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jbe	SHORT $LN1@erase

; 1502 : 			--this->_Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN1@erase:

; 1503 : 
; 1504 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase:

; 1505 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::max_size, COMDAT
; _this$ = ecx

; 1277 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1278 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size

; 1279 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end, COMDAT
; _this$ = ecx

; 1225 : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1226 : 		return (const_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1227 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end, COMDAT
; _this$ = ecx

; 1220 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1221 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1222 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin, COMDAT
; _this$ = ecx

; 1215 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1216 : 		return (const_iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1217 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin, COMDAT
; _this$ = ecx

; 1210 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1211 : 		return (iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1212 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >, COMDAT
; _this$ = ecx

; 1188 : 		{	// destroy tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1189 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tidy

; 1190 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >, COMDAT
; _this$ = ecx

; 1071 : 		{	// construct empty tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >

; 1072 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ PROC ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::~_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ PROC ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp, COMDAT
; _this$ = ecx

; 1011 : 		{	// get ordering predicate

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1012 : 		return (key_compare());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1013 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AU?$less@K@2@XZ ENDP ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z PROC ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >, COMDAT
; _this$ = ecx

; 1007 : 		{	// construct ordering predicate

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >

; 1008 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_comp@$0A@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ENDP ; std::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::_Tree_comp<0,std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@XZ PROC ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::~_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::~_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@XZ ENDP ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::~_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Freenode0, COMDAT
; _this$ = ecx

; 916  : 		{	// free non-value node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 917  : 		this->_Getal().destroy(
; 918  : 			_STD addressof(this->_Left(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 919  : 		this->_Getal().destroy(
; 920  : 			_STD addressof(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 921  : 		this->_Getal().destroy(
; 922  : 			_STD addressof(this->_Right(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 923  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 924  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv181 = -56						; size = 4
tv180 = -52						; size = 4
tv179 = -48						; size = 4
tv178 = -44						; size = 4
tv177 = -40						; size = 4
tv176 = -36						; size = 4
__Pnode$ = -32						; size = 4
_this$ = -28						; size = 4
$T2 = -21						; size = 1
$T3 = -20						; size = 1
$T4 = -19						; size = 1
$T5 = -18						; size = 1
$T6 = -17						; size = 1
__$EHRec$ = -16						; size = 16
?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode0, COMDAT
; _this$ = ecx

; 897  : 		{	// allocate a non-value node

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 898  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 899  : 
; 900  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 901  : 		this->_Getal().construct(
; 902  : 			_STD addressof(this->_Left(_Pnode)), this->_Myhead);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	DWORD PTR tv176[ebp], eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv177[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv176[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv177[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>

; 903  : 		this->_Getal().construct(
; 904  : 			_STD addressof(this->_Parent(_Pnode)), this->_Myhead);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	DWORD PTR tv178[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv179[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv178[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv179[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>

; 905  : 		this->_Getal().construct(
; 906  : 			_STD addressof(this->_Right(_Pnode)), this->_Myhead);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	DWORD PTR tv180[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv181[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR tv180[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv181[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	jmp	SHORT $LN4@Buynode0
__catch$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$0:

; 907  : 		_CATCH_ALL
; 908  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 909  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 910  : 		_CATCH_END

	mov	eax, $LN7@Buynode0
	ret	0
$LN4@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$1
$LN7@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$1:

; 911  : 
; 912  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode0:

; 913  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Buynode0
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z PROC ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx

; 893  : 		{	// construct from allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >

; 894  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_buy@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ENDP ; std::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_buy<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal, COMDAT
; _this$ = ecx

; 873  : 		{	// get allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 874  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 875  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 862  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 863  : 		this->_Getal().destroy(
; 864  : 			_STD addressof(this->_Left(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 865  : 		this->_Getal().destroy(
; 866  : 			_STD addressof(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 867  : 		this->_Getal().destroy(
; 868  : 			_STD addressof(this->_Right(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::destroy<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>

; 869  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 870  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv150 = -56						; size = 4
tv149 = -52						; size = 4
tv148 = -48						; size = 4
tv147 = -44						; size = 4
tv146 = -40						; size = 4
tv145 = -36						; size = 4
_this$ = -32						; size = 4
__Pnode$ = -28						; size = 4
$T2 = -21						; size = 1
$T3 = -20						; size = 1
$T4 = -19						; size = 1
$T5 = -18						; size = 1
$T6 = -17						; size = 1
__$EHRec$ = -16						; size = 16
?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ PROC ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 841  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 842  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 843  : 
; 844  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 845  : 		this->_Getal().construct(
; 846  : 			_STD addressof(this->_Left(_Pnode)), _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv146[ebp], eax
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv146[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>

; 847  : 		this->_Getal().construct(
; 848  : 			_STD addressof(this->_Parent(_Pnode)), _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
	add	esp, 4
	mov	DWORD PTR tv147[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv148[ebp], eax
	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv148[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>

; 849  : 		this->_Getal().construct(
; 850  : 			_STD addressof(this->_Right(_Pnode)), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	DWORD PTR tv149[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	DWORD PTR tv150[ebp], eax
	lea	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR tv149[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv150[ebp]
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::construct<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> *,std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> * &>
	jmp	SHORT $LN4@Buyheadnod
__catch$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$0:

; 851  : 		_CATCH_ALL
; 852  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate

; 853  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 854  : 		_CATCH_END

	mov	eax, $LN7@Buyheadnod
	ret	0
$LN4@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$1
$LN7@Buyheadnod:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ$1:

; 855  : 
; 856  : 		this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 857  : 		this->_Isnil(_Pnode) = true;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 858  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buyheadnod:

; 859  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ENDP ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Buyheadnode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::~_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 782  : 		{	// destroy head node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 783  : 		_Freeheadnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Freeheadnode

; 784  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::~_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z PROC ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >, COMDAT
; _this$ = ecx

; 776  : 	_Tree_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >

; 777  : 		{	// construct head node, allocator from _Al
; 778  : 		this->_Myhead = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 779  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@1@@Z ENDP ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::_Tree_alloc<0,std::_Tree_base_types<std::pair<unsigned long const ,VuBin<VuEntity> >,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min, COMDAT

; 619  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Min:

; 620  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min

; 621  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:

; 622  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

	pop	ebp
	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Max, COMDAT

; 612  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Max:

; 613  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max

; 614  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:

; 615  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 616  : 		}

	pop	ebp
	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval, COMDAT

; 607  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 608  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 609  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@2@PAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right, COMDAT

; 602  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp

; 603  : 		return ((_Nodepref)_Pnode->_Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 604  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent, COMDAT

; 597  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp

; 598  : 		return ((_Nodepref)_Pnode->_Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 599  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left, COMDAT

; 592  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp

; 593  : 		return ((_Nodepref)_Pnode->_Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 594  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil, COMDAT

; 587  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp

; 588  : 		return ((char&)_Pnode->_Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 13					; 0000000dH

; 589  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color, COMDAT

; 582  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp

; 583  : 		return ((char&)_Pnode->_Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH

; 584  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >, COMDAT
; _this$ = ecx

; 571  : 	_Tree_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 572  : 		{	// initialize data
; 573  : 		this->_Myhead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 574  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 575  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 178956970				; 0aaaaaaaH

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >::allocator<std::_Tree_node<std::pair<unsigned long const ,VuBin<VuEntity> >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 179  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetKeyFilter@VuRedBlackTree@@EBEPAVVuKeyFilter@@XZ PROC ; VuRedBlackTree::GetKeyFilter
; _this$ = ecx

; 94   : VuKeyFilter *VuRedBlackTree::GetKeyFilter() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 	return static_cast<VuKeyFilter*>(GetFilter());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFilter@VuCollection@@IBEPAVVuFilter@@XZ ; VuCollection::GetFilter

; 96   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetKeyFilter@VuRedBlackTree@@EBEPAVVuKeyFilter@@XZ ENDP ; VuRedBlackTree::GetKeyFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@VuRedBlackTree@@UBE?AW4VU_COLL_TYPE@@XZ PROC	; VuRedBlackTree::Type
; _this$ = ecx

; 98   : VU_COLL_TYPE VuRedBlackTree::Type() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 	return VU_RED_BLACK_TREE_COLLECTION;

	mov	eax, 1025				; 00000401H

; 100  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Type@VuRedBlackTree@@UBE?AW4VU_COLL_TYPE@@XZ ENDP	; VuRedBlackTree::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
_eb$3 = -28						; size = 4
_this$ = -24						; size = 4
_count$ = -20						; size = 4
_it$4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Count@VuRedBlackTree@@UBEIXZ PROC			; VuRedBlackTree::Count
; _this$ = ecx

; 74   : unsigned int VuRedBlackTree::Count() const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Count@VuRedBlackTree@@UBEIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 	int count = 0;

	mov	DWORD PTR _count$[ebp], 0

; 76   : 	for (

	lea	eax, DWORD PTR _it$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin

; 77   : 		RBMap::const_iterator it = map_.begin();
; 78   : 		it != map_.end();

	jmp	SHORT $LN4@Count
$LN3@Count:

; 79   : 		++it
; 80   : 	){

	lea	ecx, DWORD PTR _it$4[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
$LN4@Count:
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	lea	ecx, DWORD PTR _it$4[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Count

; 81   : 		VuEntityBin eb = it->second;

	lea	ecx, DWORD PTR _it$4[ebp]
	call	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR _eb$3[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 82   : 		if (eb->VuState() == VU_MEM_ACTIVE){

	lea	ecx, DWORD PTR _eb$3[ebp]
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN1@Count

; 83   : 			++count;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN1@Count:

; 84   : 		}
; 85   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _eb$3[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	jmp	SHORT $LN3@Count
$LN2@Count:

; 86   : 	return count;

	mov	eax, DWORD PTR _count$[ebp]

; 87   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Count@VuRedBlackTree@@UBEIXZ$0:
	lea	ecx, DWORD PTR _eb$3[ebp]
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$?Count@VuRedBlackTree@@UBEIXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Count@VuRedBlackTree@@UBEIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Count@VuRedBlackTree@@UBEIXZ ENDP			; VuRedBlackTree::Count
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
$T1 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_ret$ = -16						; size = 4
_this$ = -12						; size = 4
_eb$4 = -8						; size = 4
_it$5 = -4						; size = 4
_all$ = 8						; size = 1
?Purge@VuRedBlackTree@@UAEIE@Z PROC			; VuRedBlackTree::Purge
; _this$ = ecx

; 56   : unsigned int VuRedBlackTree::Purge(VU_BOOL all){

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 57   : 	unsigned int ret = 0;

	mov	DWORD PTR _ret$[ebp], 0

; 58   : 	for (

	lea	eax, DWORD PTR _it$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?begin@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::begin
$LN6@Purge:

; 59   : 		RBMap::iterator it = map_.begin();
; 60   : 		it != map_.end();
; 61   : 	){

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::end
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN5@Purge

; 62   : 		VuEntityBin &eb = it->second;

	lea	ecx, DWORD PTR _it$5[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
	add	eax, 4
	mov	DWORD PTR _eb$4[ebp], eax

; 63   : 		if (all || (!(eb->IsPrivate() && eb->IsPersistent()) && !eb->IsGlobal())){ 

	movzx	eax, BYTE PTR _all$[ebp]
	test	eax, eax
	jne	SHORT $LN3@Purge
	mov	ecx, DWORD PTR _eb$4[ebp]
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?IsPrivate@VuEntity@@QBEEXZ		; VuEntity::IsPrivate
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Purge
	mov	ecx, DWORD PTR _eb$4[ebp]
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?IsPersistent@VuEntity@@QBEEXZ		; VuEntity::IsPersistent
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@Purge
$LN2@Purge:
	mov	ecx, DWORD PTR _eb$4[ebp]
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?IsGlobal@VuEntity@@QBEEXZ		; VuEntity::IsGlobal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@Purge
$LN3@Purge:

; 64   : 			it = map_.erase(it);

	mov	ecx, DWORD PTR _it$5[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$5[ebp], ecx

; 65   : 			++ret;

	mov	edx, DWORD PTR _ret$[ebp]
	add	edx, 1
	mov	DWORD PTR _ret$[ebp], edx

; 66   : 		}
; 67   : 		else {

	jmp	SHORT $LN1@Purge
$LN4@Purge:

; 68   : 			++it;

	lea	ecx, DWORD PTR _it$5[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++
$LN1@Purge:

; 69   : 		}
; 70   : 	}

	jmp	$LN6@Purge
$LN5@Purge:

; 71   : 	return ret;

	mov	eax, DWORD PTR _ret$[ebp]

; 72   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Purge@VuRedBlackTree@@UAEIE@Z ENDP			; VuRedBlackTree::Purge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
_it$ = -40						; size = 4
_k$ = -36						; size = 4
_kf$ = -32						; size = 4
_count$ = -28						; size = 4
_eb$2 = -24						; size = 4
_this$ = -20						; size = 4
$T3 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_ent$ = 8						; size = 4
?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z PROC	; VuRedBlackTree::PrivateFind
; _this$ = ecx

; 36   : bool VuRedBlackTree::PrivateFind(VuEntity *ent) const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 	VuKeyFilter *kf = GetKeyFilter();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	mov	DWORD PTR _kf$[ebp], eax

; 38   : 	VU_KEY k = kf->Key(ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kf$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _kf$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	mov	DWORD PTR _k$[ebp], eax

; 39   : 	// get number of entities sharing key
; 40   : 	unsigned int count = map_.count(k);

	lea	eax, DWORD PTR _k$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?count@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::count
	mov	DWORD PTR _count$[ebp], eax

; 41   : 	if (count == 0){ return false; }

	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN5@PrivateFin
	xor	al, al
	jmp	$LN6@PrivateFin
$LN5@PrivateFin:

; 42   : 	// see which one is the one we want
; 43   : 	RBMap::const_iterator it = map_.find(k);

	lea	ecx, DWORD PTR _k$[ebp]
	push	ecx
	lea	edx, DWORD PTR _it$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find
$LN4@PrivateFin:

; 44   : 	do {
; 45   : 		VuEntityBin eb = it->second;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR _eb$2[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@ABV0@@Z	; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		if ((eb->VuState() == VU_MEM_ACTIVE) && (eb.get() == ent)){

	lea	ecx, DWORD PTR _eb$2[ebp]
	call	??C?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::operator->
	mov	ecx, eax
	call	?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ	; VuEntity::VuState
	cmp	eax, 3
	jne	SHORT $LN1@PrivateFin
	lea	ecx, DWORD PTR _eb$2[ebp]
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	cmp	eax, DWORD PTR _ent$[ebp]
	jne	SHORT $LN1@PrivateFin

; 47   : 			return true;

	mov	BYTE PTR $T3[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _eb$2[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN6@PrivateFin
$LN1@PrivateFin:

; 48   : 		}
; 49   : 		++it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 50   : 	} while (--count);

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _eb$2[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
	mov	eax, DWORD PTR _count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$[ebp], eax
	jne	SHORT $LN4@PrivateFin

; 51   : 	// can happen if all entities with given key are inactive
; 52   : 	return false;

	xor	al, al
$LN6@PrivateFin:

; 53   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z$0:
	lea	ecx, DWORD PTR _eb$2[ebp]
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__ehhandler$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrivateFind@VuRedBlackTree@@MBE_NPAVVuEntity@@@Z ENDP	; VuRedBlackTree::PrivateFind
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 4
$T2 = -28						; size = 4
_e$3 = -24						; size = 4
_k$ = -20						; size = 4
_kf$ = -16						; size = 4
_it$ = -12						; size = 4
_count$ = -8						; size = 4
_this$ = -4						; size = 4
_entity$ = 8						; size = 4
?PrivateRemove@VuRedBlackTree@@MAEHPAVVuEntity@@@Z PROC	; VuRedBlackTree::PrivateRemove
; _this$ = ecx

; 19   : VU_ERRCODE VuRedBlackTree::PrivateRemove(VuEntity* entity){

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 	VuKeyFilter *kf = GetKeyFilter();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	mov	DWORD PTR _kf$[ebp], eax

; 21   : 	VU_KEY k = kf->Key(entity);

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kf$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _kf$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	mov	DWORD PTR _k$[ebp], eax

; 22   : 	unsigned int count = map_.count(k);

	lea	eax, DWORD PTR _k$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?count@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QBEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::count
	mov	DWORD PTR _count$[ebp], eax

; 23   : 	if (count == 0){ return VU_NO_OP; }

	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN5@PrivateRem
	xor	eax, eax
	jmp	SHORT $LN6@PrivateRem
$LN5@PrivateRem:

; 24   : 	RBMap::iterator it = map_.find(k);

	lea	ecx, DWORD PTR _k$[ebp]
	push	ecx
	lea	edx, DWORD PTR _it$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?find@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::find
$LN4@PrivateRem:

; 25   : 	do {
; 26   : 		VuEntity *e = it->second.get();

	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBKV?$VuBin@VVuEntity@@@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator->
	add	eax, 4
	mov	ecx, eax
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	mov	DWORD PTR _e$3[ebp], eax

; 27   : 		if (e == entity){

	mov	eax, DWORD PTR _e$3[ebp]
	cmp	eax, DWORD PTR _entity$[ebp]
	jne	SHORT $LN1@PrivateRem

; 28   : 			map_.erase(it);

	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?erase@?$_Tree@V?$_Tmap_traits@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@$00@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > >,1> >::erase

; 29   : 			return VU_SUCCESS;

	mov	eax, 1
	jmp	SHORT $LN6@PrivateRem
$LN1@PrivateRem:

; 30   : 		}
; 31   : 		++it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,VuBin<VuEntity> > > > >::operator++

; 32   : 	} while (--count);

	mov	ecx, DWORD PTR _count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx
	jne	SHORT $LN4@PrivateRem

; 33   : 	return VU_NO_OP;

	xor	eax, eax
$LN6@PrivateRem:

; 34   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?PrivateRemove@VuRedBlackTree@@MAEHPAVVuEntity@@@Z ENDP	; VuRedBlackTree::PrivateRemove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
$T2 = -56						; size = 8
$T3 = -48						; size = 4
$T4 = -44						; size = 4
tv91 = -40						; size = 4
tv93 = -36						; size = 4
$T5 = -32						; size = 4
tv89 = -28						; size = 4
tv92 = -24						; size = 4
_kf$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z PROC	; VuRedBlackTree::PrivateInsert
; _this$ = ecx

; 13   : VU_ERRCODE VuRedBlackTree::PrivateInsert(VuEntity* entity){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 14   : 	VuKeyFilter *kf = GetKeyFilter();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	mov	DWORD PTR _kf$[ebp], eax

; 15   : 	map_.insert(std::make_pair(kf->Key(entity), VuEntityBin(entity)));

	mov	ecx, DWORD PTR _entity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kf$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _kf$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	mov	DWORD PTR $T5[ebp], eax
	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0?$VuBin@VVuEntity@@@@QAE@PAVVuEntity@@@Z ; VuBin<VuEntity>::VuBin<VuEntity>
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv89[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$make_pair@KV?$VuBin@VVuEntity@@@@@std@@YA?AU?$pair@KV?$VuBin@VVuEntity@@@@@0@$$QAK$$QAV?$VuBin@VVuEntity@@@@@Z ; std::make_pair<unsigned long,VuBin<VuEntity> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR tv91[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$insert@U?$pair@KV?$VuBin@VVuEntity@@@@@std@@@?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@std@@@std@@@1@$$QAU?$pair@KV?$VuBin@VVuEntity@@@@@1@@Z ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::insert<std::pair<unsigned long,VuBin<VuEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>

; 16   : 	return VU_SUCCESS;

	mov	eax, 1

; 17   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z$0:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$VuBin@VVuEntity@@@@QAE@XZ		; VuBin<VuEntity>::~VuBin<VuEntity>
__unwindfunclet$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$pair@KV?$VuBin@VVuEntity@@@@@std@@QAE@XZ
__ehhandler$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrivateInsert@VuRedBlackTree@@MAEHPAVVuEntity@@@Z ENDP	; VuRedBlackTree::PrivateInsert
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1VuRedBlackTree@@UAE@XZ PROC				; VuRedBlackTree::~VuRedBlackTree
; _this$ = ecx

; 8    : VuRedBlackTree::~VuRedBlackTree(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VuRedBlackTree@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuRedBlackTree@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 9    : 	Unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 10   : 	Purge(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@VuRedBlackTree@@UAEIE@Z		; VuRedBlackTree::Purge

; 11   : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuCollection@@MAE@XZ			; VuCollection::~VuCollection
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1VuRedBlackTree@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuCollection@@MAE@XZ			; VuCollection::~VuCollection
__unwindfunclet$??1VuRedBlackTree@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1VuRedBlackTree@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VuRedBlackTree@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VuRedBlackTree@@UAE@XZ ENDP				; VuRedBlackTree::~VuRedBlackTree
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\src\vu_rb_tree.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_filter$ = 8						; size = 4
??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z PROC		; VuRedBlackTree::VuRedBlackTree
; _this$ = ecx

; 6    : {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _filter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuCollection@@IAE@PAVVuFilter@@_N@Z	; VuCollection::VuCollection
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7VuRedBlackTree@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$multimap@KV?$VuBin@VVuEntity@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$VuBin@VVuEntity@@@@@std@@@3@@std@@QAE@XZ ; std::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >::multimap<unsigned long,VuBin<VuEntity>,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,VuBin<VuEntity> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuCollection@@MAE@XZ			; VuCollection::~VuCollection
__ehhandler$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VuRedBlackTree@@QAE@PAVVuKeyFilter@@@Z ENDP		; VuRedBlackTree::VuRedBlackTree
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 50   : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ PROC		; VuEntity::VuState, COMDAT
; _this$ = ecx

; 153  : 	VU_MEM VuState() const    { return vuState_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?VuState@VuEntity@@QBE?AW4VU_MEM@@XZ ENDP		; VuEntity::VuState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsPersistent@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPersistent@VuEntity@@QBEEXZ PROC			; VuEntity::IsPersistent, COMDAT
; _this$ = ecx

; 139  : 	VU_BOOL IsPersistent() const    { return (VU_BOOL)share_.flags_.breakdown_.persistent_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	shr	eax, 5
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPersistent@VuEntity@@QBEEXZ ENDP			; VuEntity::IsPersistent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsGlobal@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGlobal@VuEntity@@QBEEXZ PROC				; VuEntity::IsGlobal, COMDAT
; _this$ = ecx

; 138  : 	VU_BOOL IsGlobal() const        { return (VU_BOOL)share_.flags_.breakdown_.global_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	shr	eax, 4
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsGlobal@VuEntity@@QBEEXZ ENDP				; VuEntity::IsGlobal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?IsPrivate@VuEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPrivate@VuEntity@@QBEEXZ PROC			; VuEntity::IsPrivate, COMDAT
; _this$ = ecx

; 134  : 	VU_BOOL IsPrivate() const       { return (VU_BOOL)share_.flags_.breakdown_.private_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPrivate@VuEntity@@QBEEXZ ENDP			; VuEntity::IsPrivate
_TEXT	ENDS
END
